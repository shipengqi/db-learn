<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Database Learning – 核心设计与原理</title><link>https://shipengqi.github.io/db-learn/docs/mysql/advance/</link><description>Recent content in 核心设计与原理 on Database Learning</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><atom:link href="https://shipengqi.github.io/db-learn/docs/mysql/advance/index.xml" rel="self" type="application/rss+xml"/><item><title>MySQL 基础架构</title><link>https://shipengqi.github.io/db-learn/docs/mysql/advance/01_architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/db-learn/docs/mysql/advance/01_architecture/</guid><description>
&lt;p>一条 SQL 查询语句在 MySQL 内的执行过程，是怎样的？&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/arch-simple.png" alt="arch-simple" loading="lazy" />&lt;/p>
&lt;p>上图是 MySQL 的基本架构示意图。MySQL 大致可以分为两部分：&lt;strong>Server 层&lt;/strong> 和 &lt;strong>存储引擎层&lt;/strong>。&lt;/p>
&lt;p>Server 层包括连接器、查询缓存、分析器、优化器、执行器等，涵盖 MySQL 的大多数核心服务功能，以及所有的内置函数（如日期、时间、数学和加密函数等），&lt;strong>所有跨存储引擎的功能&lt;/strong>都在这一层实现，比如存储过程、触发器、视图等。&lt;/p>
&lt;p>存储引擎层负责数据的存储和提取。支持 InnoDB、MyISAM、Memory 等多个存储引擎。不同的存储引擎共用一个 Server 层。存储引擎向 Server 层提供统一的调用接口（存储引擎 API），包含了几十个底层函数，像&amp;quot;读取索引第一条内容&amp;quot;、&amp;ldquo;读取索引下一条内容&amp;rdquo;、&amp;ldquo;插入记录&amp;quot;等等。&lt;/p>
&lt;p>从 MySQL 5.5.5 版本开始， InnoDB 成为了默认存储引擎。&lt;/p>
&lt;p>接下来看一条 SQL 查询语句的执行过程，如 &lt;code>select * from T where id=10;&lt;/code>。&lt;/p>
&lt;h2>连接器&lt;span class="hx-absolute -hx-mt-20" id="连接器">&lt;/span>
&lt;a href="#%e8%bf%9e%e6%8e%a5%e5%99%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>第一步就是与服务端建立连接。&lt;strong>连接器&lt;/strong>负责跟客户端建立连接、获取权限、维持和管理连接。&lt;/p>
&lt;p>客户端可以采用 TCP/IP、命名管道或共享内存、Unix 域套接字这几种方式之一来与服务端建立连接。&lt;/p>
&lt;p>连接命令：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql -h&lt;span class="nv">$ip&lt;/span> -P&lt;span class="nv">$port&lt;/span> -u&lt;span class="nv">$user&lt;/span> -p&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>连接建立后，连接器会进行身份认证，并获取权限。之后，这个&lt;strong>连接里面的权限判断逻辑，都将依赖于此时读到的权限&lt;/strong>。也就是说，一个用户成功&lt;strong>建立连接后，修改权限对当前连接是无效的&lt;/strong>。重新建立连接才会生效。&lt;/p>
&lt;p>每一个连接建立，服务器都会专门创建一个线程来处理与这个客户端的交互，断开连接时，服务器会先把这个线程缓存起来，以便复用。避免频繁创建和销毁线程。&lt;/p>
&lt;p>MySQL 服务器线程分配的太多会影响系统性能，所以要&lt;strong>限制连接数量&lt;/strong>。&lt;/p>
&lt;p>连接完成后，如果没有后续的动作，这个连接就处于空闲状态，可以使用 &lt;code>show processlist&lt;/code> 命令查看。&lt;code>Command&lt;/code> 列显示为 &lt;code>Sleep&lt;/code> 的，就是空闲连接。&lt;/p>
&lt;p>客户端如果太&lt;strong>长时间没动静，连接器就会自动将它断开&lt;/strong>。可以设置 &lt;code>wait_timeout&lt;/code> 来控制，默认值是 8 小时。&lt;/p>
&lt;p>连接被断开之后，再次发送请求，就会收到一个错误提醒：&amp;ldquo;Lost connection to MySQL server during query&amp;rdquo;。需要重连，再执行请求。&lt;/p>
&lt;p>数据库里面，长连接是指连接成功后，如果客户端持续有请求，则一直使用同一个连接。短连接则是指每次执行完很少的几次查询就断开连接，下次查询再重新建立一个。&lt;/p>
&lt;p>建立连接的过程通常是比较复杂的，所以建议在使用中要尽量减少建立连接的动作，&lt;strong>尽量使用长连接&lt;/strong>。&lt;/p>
&lt;h3>长连接的弊端&lt;span class="hx-absolute -hx-mt-20" id="长连接的弊端">&lt;/span>
&lt;a href="#%e9%95%bf%e8%bf%9e%e6%8e%a5%e7%9a%84%e5%bc%8a%e7%ab%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>全部&lt;strong>使用长连接后，可能会发现，有些时候 MySQL 占用内存涨得特别快，这是因为 MySQL 在执行过程中临时使用的内存是管理在连接对象里面的&lt;/strong>。这些资源会在连接断开的时候才释放。所以如果&lt;strong>长连接累积下来，可能导致内存占用太大，被系统强行杀掉（OOM），从现象看就是 MySQL 异常重启了&lt;/strong>。&lt;/p>
&lt;p>怎么解决这个问题？可以考虑以下两种方案。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>定期断开长连接&lt;/strong>。使用一段时间，或者程序里面判断执行过一个占用内存的大查询后，断开连接，之后要查询再重连。&lt;/li>
&lt;li>如果是 MySQL 5.7 或更新版本，可以在每次执行一个比较大的操作后，&lt;strong>通过执行 &lt;code>mysql_reset_connection&lt;/code> 来重新初始化连接资源。这个过程不需要重连和重新做权限验证，但是会将连接恢复到刚刚创建完时的状态&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;h2>查询缓存&lt;span class="hx-absolute -hx-mt-20" id="查询缓存">&lt;/span>
&lt;a href="#%e6%9f%a5%e8%af%a2%e7%bc%93%e5%ad%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>MySQL 处理查询请求时，会把刚刚处理过的查询请求和结果以 key-value 的形式，缓存在内存中。如果下一次有一模一样的请求过来，优先从缓存中查找结果。如果命中缓存，就不需要再执行后面的复杂操作，直接返回结果。&lt;/p>
&lt;p>查询缓存可以在不同客户端之间共享。&lt;/p>
&lt;h3>查询缓存的弊端&lt;span class="hx-absolute -hx-mt-20" id="查询缓存的弊端">&lt;/span>
&lt;a href="#%e6%9f%a5%e8%af%a2%e7%bc%93%e5%ad%98%e7%9a%84%e5%bc%8a%e7%ab%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>两个查询请求在&lt;strong>任何字符上的不同（例如：空格、注释、大小写），都会导致缓存不会命中&lt;/strong>。&lt;/li>
&lt;li>如果查询请求中&lt;strong>包含某些系统函数、用户自定义变量和函数、一些系统表，如 &lt;code>mysql&lt;/code> 、&lt;code>information_schema&lt;/code> 数据库中的表，那这个请求就不会被缓存&lt;/strong>。&lt;/li>
&lt;li>&lt;strong>查询缓存的失效非常频繁&lt;/strong>。只要表的结构或者数据被修改，如对表使用了 &lt;code>insert&lt;/code>、 &lt;code>update&lt;/code>、&lt;code>delete&lt;/code>、&lt;code>truncate table&lt;/code>、&lt;code>alter table&lt;/code>、&lt;code>drop table&lt;/code> 或 &lt;code>drop database&lt;/code> 语句，那这个表上所有的查询缓存都会被清空。对于更新压力大的数据库来说，查询缓存的命中率会非常低。除非你的业务表，很长时间才会更新一次。&lt;/li>
&lt;/ul>
&lt;h3>按需使用查询缓存&lt;span class="hx-absolute -hx-mt-20" id="按需使用查询缓存">&lt;/span>
&lt;a href="#%e6%8c%89%e9%9c%80%e4%bd%bf%e7%94%a8%e6%9f%a5%e8%af%a2%e7%bc%93%e5%ad%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>一般只有在静态表才建议使用查询缓存，静态表极少更新的表。比如，一个系统配置表、字典表，那这张表上的查询才适合使用查询缓存。MySQL 提供了“按需使用”的方式。可以将&lt;code>my.cnf&lt;/code> 中的参数 &lt;code>query_cache_type&lt;/code> 设置成 &lt;code>DEMAND&lt;/code>。那么，默认的 SQL 语句不会使用查询缓存。而对于确定要使用查询缓存的语句，可以用 &lt;code>SQL_CACHE&lt;/code> 显式指定：&lt;/p>
&lt;p>&lt;code>my.cnf&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code># 0 代表关闭查询缓存 OFF
# 1 代表开启 ON
# 2（DEMAND）代表当 sql 语句中有 SQL_CACHE 关键词时才缓存
query_cache_type=2&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SQL_CACHE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 查看当前 mysql 实例是否开启缓存机制
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">show&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">global&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">variables&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">like&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;%query_cache_type%&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>MySQL 在 8.0 中删除了查询缓存的功能&lt;/strong>。&lt;/p>
&lt;h2>分析器&lt;span class="hx-absolute -hx-mt-20" id="分析器">&lt;/span>
&lt;a href="#%e5%88%86%e6%9e%90%e5%99%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>如果查询缓存没有命中，接下来就需要真正执行查询语句。MySQL 首先要对查询语句的文本做分析。&lt;/p>
&lt;p>分析器先会做&lt;strong>词法分析&lt;/strong>。分析文本里面的字符串分别是什么，代表什么。比如 &lt;code>select&lt;/code> 可以判断出是一个查询语句。把字符串 &amp;ldquo;T&amp;rdquo; 识别成 &amp;ldquo;表名 T&amp;rdquo;，把字符串 &amp;ldquo;id&amp;rdquo; 识别成 &amp;ldquo;列 id&amp;rdquo;。&lt;/p>
&lt;p>接下来要做&lt;strong>语法分析&lt;/strong>，根据词法分析的结果，分析器根据语法规则，判断这个 SQL 语句是否满足 MySQL 语法。如果语句不对，就会收到 “You have an error in your SQL syntax” 的错误提醒。&lt;/p>
&lt;h2>优化器&lt;span class="hx-absolute -hx-mt-20" id="优化器">&lt;/span>
&lt;a href="#%e4%bc%98%e5%8c%96%e5%99%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>经过了分析器，MySQL 就知道你要做什么了，要查询的列是哪些，表是哪个，搜索条件是什么等等。在开始执行之前，还要先经过优化器的处理。因为我们写的 SQL 语句执行起来效率可能并不是很高，优化器会对语句做一些优化，如外连接转换为内连接、表达式简化、子查询转为连接、选择索引等等。&lt;/p>
&lt;p>优化器会生成一个&lt;strong>执行计划&lt;/strong>，这个执行计划表明了应该使用哪些索引进行查询，表之间的连接顺序是啥样的。&lt;/p>
&lt;p>使用 &lt;code>EXPLAIN&lt;/code> 语句可以查看某个语句的执行计划。&lt;/p>
&lt;h2>执行器&lt;span class="hx-absolute -hx-mt-20" id="执行器">&lt;/span>
&lt;a href="#%e6%89%a7%e8%a1%8c%e5%99%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>通过分析器知道了要做什么，通过优化器知道了该怎么做，接下来就进入了执行器阶段，开始执行语句。&lt;/p>
&lt;p>开始执行的时候，要先判断一下你对这个表 T 有没有执行查询的&lt;strong>权限（经过分析器之后才知道要查询、修改的表，所以连接器无法验证表的权限）&lt;/strong>，如果没有，就会返回没有权限的错误（如果命中查询缓存，会在查询缓存返回结果的时候，做权限验证）。&lt;/p>
&lt;p>打开表的时候，&lt;strong>执行器就会根据表的引擎定义，调用这个引擎提供的接口&lt;/strong>。&lt;/p>
&lt;h2>存储引擎&lt;span class="hx-absolute -hx-mt-20" id="存储引擎">&lt;/span>
&lt;a href="#%e5%ad%98%e5%82%a8%e5%bc%95%e6%93%8e" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>MySQL 提供了多种存储引擎，不同存储引擎管理的表具体的存储结构可能不同，采用的存取算法也可能不同。&lt;/p>
&lt;h3>常用存储引擎&lt;span class="hx-absolute -hx-mt-20" id="常用存储引擎">&lt;/span>
&lt;a href="#%e5%b8%b8%e7%94%a8%e5%ad%98%e5%82%a8%e5%bc%95%e6%93%8e" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>存储引擎&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>InnoDB&lt;/td>
&lt;td>具备外键支持功能的事务存储引擎&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Memory&lt;/td>
&lt;td>置于内存的表&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MyISAM&lt;/td>
&lt;td>主要的非事务处理存储引擎&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>默认的存储引擎是 &lt;code>InnoDB&lt;/code>。&lt;/p>
&lt;p>查看当前服务器程序支持的存储引擎：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">SHOW ENGINES&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SHOW ENGINES&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> Engine &lt;span class="p">|&lt;/span> Support &lt;span class="p">|&lt;/span> Comment &lt;span class="p">|&lt;/span> Transactions &lt;span class="p">|&lt;/span> XA &lt;span class="p">|&lt;/span> Savepoints &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> InnoDB &lt;span class="p">|&lt;/span> DEFAULT &lt;span class="p">|&lt;/span> Supports transactions, row-level locking, and foreign keys &lt;span class="p">|&lt;/span> YES &lt;span class="p">|&lt;/span> YES &lt;span class="p">|&lt;/span> YES &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> MRG_MYISAM &lt;span class="p">|&lt;/span> YES &lt;span class="p">|&lt;/span> Collection of identical MyISAM tables &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> MEMORY &lt;span class="p">|&lt;/span> YES &lt;span class="p">|&lt;/span> Hash based, stored in memory, useful &lt;span class="k">for&lt;/span> temporary tables &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> BLACKHOLE &lt;span class="p">|&lt;/span> YES &lt;span class="p">|&lt;/span> /dev/null storage engine &lt;span class="o">(&lt;/span>anything you write to it disappears&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> MyISAM &lt;span class="p">|&lt;/span> YES &lt;span class="p">|&lt;/span> MyISAM storage engine &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> CSV &lt;span class="p">|&lt;/span> YES &lt;span class="p">|&lt;/span> CSV storage engine &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> ARCHIVE &lt;span class="p">|&lt;/span> YES &lt;span class="p">|&lt;/span> Archive storage engine &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> PERFORMANCE_SCHEMA &lt;span class="p">|&lt;/span> YES &lt;span class="p">|&lt;/span> Performance Schema &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> FEDERATED &lt;span class="p">|&lt;/span> NO &lt;span class="p">|&lt;/span> Federated MySQL storage engine &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">9&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>Support&lt;/code> 表示该存储引擎是否可用，如果值为 &lt;code>DEFAULT&lt;/code> 则表示是默认的存储引擎。&lt;/li>
&lt;li>&lt;code>Transactions&lt;/code> 表示该存储引擎是否支持事务处理。&lt;/li>
&lt;li>&lt;code>XA&lt;/code> 表示着该存储引擎是否支持分布式事务。&lt;/li>
&lt;li>&lt;code>Savepoints&lt;/code> 表示着该列是否支持部分事务回滚。&lt;/li>
&lt;/ul>
&lt;h2>Server 层和存储引擎层是如何交互的&lt;span class="hx-absolute -hx-mt-20" id="server-层和存储引擎层是如何交互的">&lt;/span>
&lt;a href="#server-%e5%b1%82%e5%92%8c%e5%ad%98%e5%82%a8%e5%bc%95%e6%93%8e%e5%b1%82%e6%98%af%e5%a6%82%e4%bd%95%e4%ba%a4%e4%ba%92%e7%9a%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>准备数据：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hero&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">country&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">varchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Engine&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">InnoDB&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">utf8&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hero&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">VALUES&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;l刘备&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;蜀&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;z诸葛亮&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;蜀&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;c曹操&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;魏&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;x荀彧&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;魏&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;s孙权&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;吴&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>name&lt;/code> 列创建了一个二级索引。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; EXPLAIN SELECT * FROM hero WHERE name &amp;lt; &lt;span class="s1">&amp;#39;s孙权&amp;#39;&lt;/span> AND &lt;span class="nv">country&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;蜀&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+------------------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> id &lt;span class="p">|&lt;/span> select_type &lt;span class="p">|&lt;/span> table &lt;span class="p">|&lt;/span> partitions &lt;span class="p">|&lt;/span> &lt;span class="nb">type&lt;/span> &lt;span class="p">|&lt;/span> possible_keys &lt;span class="p">|&lt;/span> key &lt;span class="p">|&lt;/span> key_len &lt;span class="p">|&lt;/span> ref &lt;span class="p">|&lt;/span> rows &lt;span class="p">|&lt;/span> filtered &lt;span class="p">|&lt;/span> Extra &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+------------------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> SIMPLE &lt;span class="p">|&lt;/span> hero &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> range &lt;span class="p">|&lt;/span> idx_name &lt;span class="p">|&lt;/span> idx_name &lt;span class="p">|&lt;/span> &lt;span class="m">303&lt;/span> &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> 20.00 &lt;span class="p">|&lt;/span> Using index condition&lt;span class="p">;&lt;/span> Using where &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+------------------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in set, &lt;span class="m">1&lt;/span> warning &lt;span class="o">(&lt;/span>0.03 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>key&lt;/code> 列值为 &lt;code>idx_name&lt;/code>，&lt;code>type&lt;/code> 列的值为 &lt;code>range&lt;/code>，表明使用 &lt;code>idx_name&lt;/code> 二级索引进行一个范围查询。&lt;/p>
&lt;p>那么 &lt;strong>InnoDB 是一次性把所有符合条件的二级索引都取出来之后再统一进行回表操作，还是每取出一条符合条件的记录就进行回表一次？&lt;/strong>&lt;/p>
&lt;p>其实 &lt;strong>Server 层和存储引擎层的交互是以记录为单位的&lt;/strong>（&lt;strong>也就是说得到一条二级索引记录后立即去回表，而不是把所有的二级索引记录都拿到后统一去回表&lt;/strong>）。整个执行过程如下：&lt;/p>
&lt;ol>
&lt;li>Server 层第一次开始执行查询，把条件 &lt;code>name &amp;lt; 's孙权'&lt;/code> 交给存储引擎，让存储引擎定位符合条件的第一条记录。&lt;/li>
&lt;li>存储引擎在二级索引 &lt;code>idx_name&lt;/code> 中定位 &lt;code>name &amp;lt; 's孙权'&lt;/code> 的第一条记录的 &lt;code>name&lt;/code> 列的值为 &lt;code>c曹操&lt;/code>。判断 ICP（索引下推）条件。然后拿着该二级索引记录中的主键值去回表，把完整的用户记录都取到之后返回给 Server 层。&lt;/li>
&lt;li>&lt;code>Extra&lt;/code> 列有一个 &lt;code>Using Where&lt;/code>，意味着 Server 层在接收到存储引擎层返回的记录之后，接着就要判断其余的 &lt;code>WHERE&lt;/code> 条件是否成立（就是再判断一下 &lt;code>country = '蜀'&lt;/code> 是否成立）。如果成立的话，就直接发送给客户端。不成立的话，就跳过该条记录。&lt;/li>
&lt;li>接着 Server 层向存储引擎层要求继续读刚才那条记录的下一条记录。&lt;/li>
&lt;li>因为每条记录的头信息中都有 &lt;code>next_record&lt;/code> 的这个属性，所以可以快速定位到下一条记录的位置，然后继续判断 ICP 条件，然后进行回表操作，存储引擎把下一条记录取出后就将其返回给 Server 层。&lt;/li>
&lt;li>然后重复第 3 步的过程，直到存储引擎层遇到了不符合 &lt;code>name &amp;lt; 's孙权'&lt;/code> 的记录，然后向 Server 层返回了读取完毕的信息，这时 Server 层将结束查询。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>MySQL Server 层返回记录时，既不是一次性返回所有结果，也不是纯粹的逐条返回，而是采用了一种&lt;strong>分批返回&lt;/strong>的折中方案。&lt;/p>
&lt;/blockquote></description></item><item><title>记录行格式和页结构</title><link>https://shipengqi.github.io/db-learn/docs/mysql/advance/02_record-and-page-structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/db-learn/docs/mysql/advance/02_record-and-page-structure/</guid><description>
&lt;h2>InnoDB 页简介&lt;span class="hx-absolute -hx-mt-20" id="innodb-页简介">&lt;/span>
&lt;a href="#innodb-%e9%a1%b5%e7%ae%80%e4%bb%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>InnoDB 数据是存储在磁盘上的。而读写磁盘的速度非常慢，所以 InnoDB 采取的方式是：&lt;strong>将数据划分为若干个页，以页作为磁盘和内存之间交互的基本单位&lt;/strong>。页的大小一般为 &lt;code>16 KB&lt;/code>。也就是在&lt;strong>一般情况下，一次最少从磁盘中读取 &lt;code>16KB&lt;/code> 的内容到内存中，一次最少把内存中的 &lt;code>16KB&lt;/code> 内容刷新到磁盘中&lt;/strong>。&lt;/p>
&lt;h2>行格式&lt;span class="hx-absolute -hx-mt-20" id="行格式">&lt;/span>
&lt;a href="#%e8%a1%8c%e6%a0%bc%e5%bc%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>MySQL 是以记录为单位来向表中插入数据的，这些记录在磁盘上的存放方式被称为 &lt;code>行格式&lt;/code> 或者 &lt;code>记录格式&lt;/code>。InnoDB 存储引擎目前有 4 种行格式，分别是 &lt;code>Compact&lt;/code>、&lt;code>Redundant&lt;/code>、&lt;code>Dynamic&lt;/code> 和 &lt;code>Compressed&lt;/code> 行格式。&lt;/p>
&lt;h3>指定行格式的语法&lt;span class="hx-absolute -hx-mt-20" id="指定行格式的语法">&lt;/span>
&lt;a href="#%e6%8c%87%e5%ae%9a%e8%a1%8c%e6%a0%bc%e5%bc%8f%e7%9a%84%e8%af%ad%e6%b3%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">create&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">表名&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">列的信息&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">row_format&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">行格式名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">alter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">表名&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">row_format&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">行格式名称&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>例如：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; use test&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Database changed
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; crate table record_format_demo &lt;span class="o">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -&amp;gt; c1 VARCHAR&lt;span class="o">(&lt;/span>10&lt;span class="o">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -&amp;gt; c2 VARCHAR&lt;span class="o">(&lt;/span>10&lt;span class="o">)&lt;/span> NOT NULL,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -&amp;gt; c3 CHAR&lt;span class="o">(&lt;/span>10&lt;span class="o">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -&amp;gt; c4 VARCHAR&lt;span class="o">(&lt;/span>10&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -&amp;gt; &lt;span class="o">)&lt;/span> &lt;span class="nv">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>ascii &lt;span class="nv">ROW_FORMAT&lt;/span>&lt;span class="o">=&lt;/span>COMPACT&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.03 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; INSERT INTO record_format_demo&lt;span class="o">(&lt;/span>c1, c2, c3, c4&lt;span class="o">)&lt;/span> VALUES&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;aaaa&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;bbb&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;cc&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;d&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;eeee&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;fff&amp;#39;&lt;/span>, NULL, NULL&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">2&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.02 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Records: &lt;span class="m">2&lt;/span> Duplicates: &lt;span class="m">0&lt;/span> Warnings: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SELECT * FROM record_format_demo&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------+-----+------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> c1 &lt;span class="p">|&lt;/span> c2 &lt;span class="p">|&lt;/span> c3 &lt;span class="p">|&lt;/span> c4 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------+-----+------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> aaaa &lt;span class="p">|&lt;/span> bbb &lt;span class="p">|&lt;/span> cc &lt;span class="p">|&lt;/span> d &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> eeee &lt;span class="p">|&lt;/span> fff &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------+-----+------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">2&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Compact 行格式&lt;span class="hx-absolute -hx-mt-20" id="compact-行格式">&lt;/span>
&lt;a href="#compact-%e8%a1%8c%e6%a0%bc%e5%bc%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/compact-row.png" alt="compact-row" loading="lazy" />&lt;/p>
&lt;p>一条完整的记录其实可以被分为 &lt;strong>记录的额外信息&lt;/strong> 和 &lt;strong>记录的真实数据&lt;/strong> 两部分。&lt;/p>
&lt;h4>记录的额外信息&lt;span class="hx-absolute -hx-mt-20" id="记录的额外信息">&lt;/span>
&lt;a href="#%e8%ae%b0%e5%bd%95%e7%9a%84%e9%a2%9d%e5%a4%96%e4%bf%a1%e6%81%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>为了描述这条记录而不得不额外添加的一些信息，分为 3 类，分别是&lt;strong>变长字段长度列表&lt;/strong>，&lt;strong>NULL值列表&lt;/strong> 和 &lt;strong>记录头信息&lt;/strong>。&lt;/p>
&lt;h5>变长字段长度列表&lt;span class="hx-absolute -hx-mt-20" id="变长字段长度列表">&lt;/span>
&lt;a href="#%e5%8f%98%e9%95%bf%e5%ad%97%e6%ae%b5%e9%95%bf%e5%ba%a6%e5%88%97%e8%a1%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>MySQL 支持一些变长的数据类型，比如 &lt;code>VARCHAR(M)&lt;/code>、&lt;code>VARBINARY(M)&lt;/code>、&lt;code>TEXT&lt;/code>、&lt;code>BLOB&lt;/code> 等类型，这些数据类型的列被称为&lt;strong>变长字段&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>变长字段中存储多少字节的数据是不固定的，所以存储真实数据的时候需要把数据占用的字节数也存起来&lt;/strong>，变长字段占用的存储空间分为两部分：&lt;/p>
&lt;ol>
&lt;li>真正的数据内容&lt;/li>
&lt;li>占用的字节数&lt;/li>
&lt;/ol>
&lt;p>在 &lt;code>Compact&lt;/code> 行格式中，把所有变长字段的真实数据占用的字节长度都存放在记录的开头部位，从而形成一个&lt;strong>变长字段长度列表&lt;/strong>。&lt;/p>
&lt;p>各变长字段数据占用的字节数按照列的&lt;strong>逆序存放&lt;/strong>，注意是&lt;strong>逆序存放&lt;/strong>。&lt;/p>
&lt;p>假设一个表的 &lt;code>c1&lt;/code>、&lt;code>c2&lt;/code>、&lt;code>c4&lt;/code> 列都是 &lt;code>VARCHAR(10)&lt;/code> 类型的，所以这三个列的值的长度都需要保存在记录开头处，表中的各个列都使用的是 &lt;code>ascii&lt;/code> 字符集，所以每个字符只需要 &lt;code>1&lt;/code> 个字节来进行编码，来看一下第一条记录各变长字段内容的长度：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>列名&lt;/th>
&lt;th>存储内容&lt;/th>
&lt;th>内容长度（十进制表示）&lt;/th>
&lt;th>内容长度（十六进制表示）&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>c1&lt;/td>
&lt;td>&amp;lsquo;aaaa&amp;rsquo;&lt;/td>
&lt;td>4&lt;/td>
&lt;td>0x04&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>c2&lt;/td>
&lt;td>&amp;lsquo;bbb&amp;rsquo;&lt;/td>
&lt;td>3&lt;/td>
&lt;td>0x03&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>c4&lt;/td>
&lt;td>&amp;rsquo;d'&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0x01&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>这些长度值需要按照列的逆序存放。&lt;/p>
&lt;p>由于第一行记录中 &lt;code>c1&lt;/code>、&lt;code>c2&lt;/code>、&lt;code>c4&lt;/code> 列中的字符串都比较短，也就是说内容占用的字节数比较小，用 1 个字节就可以表示，但是如果变长列的内容占用的字节数比较多，可能就需要用 2 个字节来表示。&lt;/p>
&lt;p>注意，&lt;strong>变长字段长度列表中只存储值为 &lt;code>非 NULL&lt;/code> 的列内容占用的长度&lt;/strong>，值为 &lt;code>NULL&lt;/code> 的列的长度是不储存的。也就是说对于第二条记录来说，因为 &lt;code>c4&lt;/code> 列的值为 &lt;code>NULL&lt;/code>，所以第二条记录的变长字段长度列表只需要存储 &lt;code>c1&lt;/code> 和 &lt;code>c2&lt;/code> 列的长度即可。&lt;strong>并不是所有记录都有这个 &lt;code>变长字段长度列表&lt;/code> 部分，比方说表中所有的列都不是变长的数据类型的话，就不需要有这部分&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/compact-demo.png" alt="compact-demo" loading="lazy" />&lt;/p>
&lt;h5>NULL 值列表&lt;span class="hx-absolute -hx-mt-20" id="null-值列表">&lt;/span>
&lt;a href="#null-%e5%80%bc%e5%88%97%e8%a1%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>表中的某些列可能存储 &lt;code>NULL&lt;/code> 值，如果把这些 &lt;code>NULL&lt;/code> 值都放到记录的真实数据中存储会很占地方，所以 &lt;code>Compact&lt;/code> 行格式把这些值为 &lt;code>NULL&lt;/code> 的列统一管理起来，存储到 &lt;code>NULL&lt;/code> 值列表中：&lt;/p>
&lt;ol>
&lt;li>首先统计表中允许存储 &lt;code>NULL&lt;/code> 的列有哪些。&lt;/li>
&lt;/ol>
&lt;p>主键列、被 &lt;code>NOT NULL&lt;/code> 修饰的列都是不可以存储 &lt;code>NULL&lt;/code> 值的，所以在统计的时候不会把这些列算进去。例如表 &lt;code>record_format_demo&lt;/code> 的 &lt;code>3&lt;/code> 个列 &lt;code>c1&lt;/code>、&lt;code>c3&lt;/code>、&lt;code>c4&lt;/code> 都是允许存储 &lt;code>NULL&lt;/code> 值的，而 &lt;code>c2&lt;/code> 列是被 &lt;code>NOT NULL&lt;/code> 修饰，不允许存储 &lt;code>NULL&lt;/code> 值。&lt;/p>
&lt;ol start="2">
&lt;li>&lt;strong>如果表中都是 &lt;code>NOT NULL&lt;/code> 修饰的列，则 &lt;code>NULL&lt;/code> 值列表也不存在了&lt;/strong>，否则将每个允许存储 &lt;code>NULL&lt;/code> 的列对应一个二进制位，二进制位按照列的&lt;strong>逆序排列&lt;/strong>，二进制位表示的意义如下：&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>二进制位的值为 &lt;code>1&lt;/code> 时，代表该列的值为 &lt;code>NULL&lt;/code>。&lt;/li>
&lt;li>二进制位的值为 &lt;code>0&lt;/code> 时，代表该列的值不为 &lt;code>NULL&lt;/code>。&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>MySQL 规定 &lt;strong>&lt;code>NULL&lt;/code> 值列表必须用整数个字节的位表示&lt;/strong>，如果使用的二进制位个数不是整数个字节，则在字节的高位补 &lt;code>0&lt;/code>。表 &lt;code>record_format_demo&lt;/code> 只有 &lt;code>3&lt;/code> 个值允许为 &lt;code>NULL&lt;/code> 的列，对应 &lt;code>3&lt;/code> 个二进制位，不足一个字节，所以在字节的高位补 &lt;code>0&lt;/code>，效果就是这样：&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/compact-null.png" alt="compact-null" loading="lazy" />&lt;/p>
&lt;p>这两条记录在填充了 &lt;code>NULL&lt;/code> 值列表后的示意图就是这样：&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/compact-null-demo.png" alt="compact-null-demo" loading="lazy" />&lt;/p>
&lt;p>第二条记录的 &lt;code>c3&lt;/code>、&lt;code>c4&lt;/code> 列的值都为 &lt;code>NULL&lt;/code>，所以 &lt;code>NULL&lt;/code> 值列表的二进制位为 &lt;code>00000110&lt;/code>，也就是 &lt;code>06&lt;/code>。&lt;/p>
&lt;h5>记录头信息&lt;span class="hx-absolute -hx-mt-20" id="记录头信息">&lt;/span>
&lt;a href="#%e8%ae%b0%e5%bd%95%e5%a4%b4%e4%bf%a1%e6%81%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>记录头信息，它是由固定的 5 个字节组成。5 个字节也就是 40 个二进制位，不同的位代表不同的意思：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>大小（单位：bit）&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>预留位1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>没有使用&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>预留位2&lt;/td>
&lt;td>1&lt;/td>
&lt;td>没有使用&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>delete_mask&lt;/code>&lt;/strong>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>标记该记录是否被删除&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>min_rec_mask&lt;/code>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>B+ 树的每层非叶子节点中的最小记录都会添加该标记&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>n_owned&lt;/code>&lt;/td>
&lt;td>4&lt;/td>
&lt;td>表示当前记录拥有的记录数&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>heap_no&lt;/code>&lt;/td>
&lt;td>13&lt;/td>
&lt;td>表示当前记录在记录堆的位置信息&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>record_type&lt;/code>&lt;/strong>&lt;/td>
&lt;td>3&lt;/td>
&lt;td>表示当前记录的类型，&lt;code>0&lt;/code> 表示普通记录，&lt;code>1&lt;/code> 表示 B+ 树非叶子节点记录，&lt;code>2&lt;/code> 表示最小记录，&lt;code>3&lt;/code> 表示最大记录&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>next_record&lt;/code>&lt;/strong>&lt;/td>
&lt;td>16&lt;/td>
&lt;td>表示&lt;strong>下一条记录的位置偏移量&lt;/strong>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>记录的真实数据&lt;span class="hx-absolute -hx-mt-20" id="记录的真实数据">&lt;/span>
&lt;a href="#%e8%ae%b0%e5%bd%95%e7%9a%84%e7%9c%9f%e5%ae%9e%e6%95%b0%e6%8d%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>对于 &lt;code>record_format_demo&lt;/code> 表来说，记录的真实数据除了 &lt;code>c1&lt;/code>、&lt;code>c2&lt;/code>、&lt;code>c3&lt;/code>、&lt;code>c4&lt;/code> 这几个自己定义的列的数据以外，MySQL 会为每个记录默认的添加一些列（也称为隐藏列）：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>列名&lt;/th>
&lt;th>是否必须&lt;/th>
&lt;th>占用空间&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>row_id&lt;/code>&lt;/td>
&lt;td>否&lt;/td>
&lt;td>6 字节&lt;/td>
&lt;td>行 ID，唯一标识一条记录&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>trx_id&lt;/code>&lt;/td>
&lt;td>是&lt;/td>
&lt;td>6 字节&lt;/td>
&lt;td>事务 ID&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>roll_pointer&lt;/code>&lt;/td>
&lt;td>是&lt;/td>
&lt;td>7 字节&lt;/td>
&lt;td>回滚指针&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>实际上这几个列的真正名称其实是：&lt;code>DB_ROW_ID&lt;/code>、&lt;code>DB_TRX_ID&lt;/code>、&lt;code>DB_ROLL_PTR&lt;/code>。&lt;/p>
&lt;/blockquote>
&lt;p>InnoDB 表对主键的生成策略：&lt;strong>优先使用用户自定义主键作为主键，如果用户没有定义主键，则选取一个&lt;code>Unique&lt;/code> 键作为主键，如果表中连 &lt;code>Unique&lt;/code> 键都没有定义的话，则 InnoDB 会为表默认添加一个名为 &lt;code>row_id&lt;/code> 的隐藏列作为主键&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>InnoDB 会为每条记录都添加 &lt;code>trx_id&lt;/code> 和 &lt;code>roll_pointer&lt;/code> 这两个列&lt;/strong>。&lt;/p>
&lt;h4>CHAR(M) 列的存储格式&lt;span class="hx-absolute -hx-mt-20" id="charm-列的存储格式">&lt;/span>
&lt;a href="#charm-%e5%88%97%e7%9a%84%e5%ad%98%e5%82%a8%e6%a0%bc%e5%bc%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;code>record_format_demo&lt;/code> 表的 &lt;code>c3&lt;/code> 列的类型是 &lt;code>CHAR(10)&lt;/code>，&lt;code>Compact&lt;/code> 行格式下只会把变长类型的列的长度逆序存到变长字段长度列表中，但是这只是因为 &lt;code>record_format_demo&lt;/code> 表采用的是 &lt;code>ascii&lt;/code> 字符集，这个字符集是一个定长字符集，也就是说表示一个字符采用固定的一个字节，如果采用变长的字符集（也就是表示一个字符需要的字节数不确定，比如 &lt;code>utf8mb3&lt;/code> 表示一个字符要 &lt;code>1~3&lt;/code> 个字节等）的话，&lt;code>c3&lt;/code> 列的长度也会被存储到变长字段长度列表中。&lt;/p>
&lt;p>&lt;strong>对于 &lt;code>CHAR(M)&lt;/code> 类型&lt;/strong>的列来说，当列采用的是定长字符集时，该列占用的字节数不会被加到变长字段长度列表，而&lt;strong>如果采用变长字符集时，该列占用的字节数也会被加到变长字段长度列表&lt;/strong>。&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>&lt;strong>变长字符集的 &lt;code>CHAR(M)&lt;/code> 类型的列要求至少占用 &lt;code>M&lt;/code> 个字节&lt;/strong>，而 &lt;code>VARCHAR(M)&lt;/code> 却没有这个要求。比方说对于使用 &lt;code>utf8mb3&lt;/code> 字符集的 &lt;code>CHAR(10)&lt;/code> 的列来说，该列存储的数据字节长度的范围是 &lt;code>10～30&lt;/code> 个字节。即使向该列中存储一个空字符串也会占用 &lt;code>10&lt;/code> 个字节。&lt;/p>
&lt;p>&lt;strong>这是怕将来更新该列的值的字节长度大于原有值的字节长度而小于 &lt;code>10&lt;/code> 个字节时，可以在该记录处直接更新，而不是在存储空间中重新分配一个新的记录空间&lt;/strong>，导致原有的记录空间成为所谓的&lt;strong>碎片&lt;/strong>。&lt;/p>
&lt;p>Compact 行格式的设计既想节省存储空间，又不想更新 &lt;code>CHAR(M)&lt;/code> 类型的列产生碎片。&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3>行溢出数据&lt;span class="hx-absolute -hx-mt-20" id="行溢出数据">&lt;/span>
&lt;a href="#%e8%a1%8c%e6%ba%a2%e5%87%ba%e6%95%b0%e6%8d%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>VARCHAR(M) 最多能存储的数据&lt;span class="hx-absolute -hx-mt-20" id="varcharm-最多能存储的数据">&lt;/span>
&lt;a href="#varcharm-%e6%9c%80%e5%a4%9a%e8%83%bd%e5%ad%98%e5%82%a8%e7%9a%84%e6%95%b0%e6%8d%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;code>VARCHAR(M)&lt;/code> 类型的列最多可以占用 65535 个字节。但是当你创建表时使用 &lt;code>VARCHAR(65535)&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; CREATE TABLE varchar_size_demo&lt;span class="o">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -&amp;gt; c VARCHAR&lt;span class="o">(&lt;/span>65535&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -&amp;gt; &lt;span class="o">)&lt;/span> &lt;span class="nv">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>ascii &lt;span class="nv">ROW_FORMAT&lt;/span>&lt;span class="o">=&lt;/span>Compact&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ERROR &lt;span class="m">1118&lt;/span> &lt;span class="o">(&lt;/span>42000&lt;span class="o">)&lt;/span>: Row size too large. The maximum row size &lt;span class="k">for&lt;/span> the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>MySQL 对一条记录占用的最大存储空间是有限制的，除了 &lt;code>BLOB&lt;/code> 或者 &lt;code>TEXT&lt;/code> 类型的列之外，其他所有的列（不包括隐藏列和记录头信息）占用的字节长度加起来不能超过 65535 个字节。&lt;/p>
&lt;p>由于存储一个 &lt;code>VARCHAR(M)&lt;/code> 类型的列，其实需要占用 3 部分存储空间：&lt;/p>
&lt;ul>
&lt;li>真实数据&lt;/li>
&lt;li>真实数据占用字节的长度&lt;/li>
&lt;li>&lt;code>NULL&lt;/code> 值标识，如果该列有 &lt;code>NOT NULL&lt;/code> 属性则可以没有这部分存储空间&lt;/li>
&lt;/ul>
&lt;p>如果该 &lt;code>VARCHAR&lt;/code> 类型的列没有 &lt;code>NOT NULL&lt;/code> 属性，那最多只能存储 65532 个字节的数据，因为真实数据的长度可能占用 2 个字节，&lt;code>NULL&lt;/code> 值标识需要占用 1 个字节。&lt;/p>
&lt;p>如果 &lt;code>VARCHAR&lt;/code> 类型的列有 &lt;code>NOT NULL&lt;/code> 属性，那最多只能存储 65533 字节的数据，因为真实数据的长度可能占用 2 个字节，不需要 &lt;code>NULL&lt;/code> 值标识。&lt;/p>
&lt;p>如果 &lt;code>VARCHAR(M)&lt;/code> 类型的列使用的不是 &lt;code>ascii&lt;/code> 字符集，那 &lt;code>M&lt;/code> 的最大取值取决于该字符集表示一个字符最多需要的字节数。在列的值允许为 &lt;code>NULL&lt;/code> 的情况下，&lt;code>utf8mb3&lt;/code> 字符集表示一个字符最多需要 3 个字节，那在该字符集下，&lt;code>M&lt;/code> 的最大取值就是 21844，就是说最多能存储 21844（也就是：&lt;code>65532/3&lt;/code>）个字符。&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>处理 VARCHAR 类型，并且长度变化较大时，可能会触发页分裂和页合并。&lt;/p>
&lt;ul>
&lt;li>VARCHAR 类型的字段数据长度增加，且增加的长度使行总长度超过页面剩余空间时，可能需要数据&lt;strong>页分裂&lt;/strong>。&lt;/li>
&lt;li>VARCHAR 类型的字段长度减少，导致页中大量空间未使用，可能触发&lt;strong>页合并&lt;/strong>。&lt;/li>
&lt;/ul>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4>记录中的数据太多产生的溢出&lt;span class="hx-absolute -hx-mt-20" id="记录中的数据太多产生的溢出">&lt;/span>
&lt;a href="#%e8%ae%b0%e5%bd%95%e4%b8%ad%e7%9a%84%e6%95%b0%e6%8d%ae%e5%a4%aa%e5%a4%9a%e4%ba%a7%e7%94%9f%e7%9a%84%e6%ba%a2%e5%87%ba" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>MySQL 中磁盘和内存交互的基本单位是&lt;strong>页&lt;/strong>，记录都会被分配到某个页中存储。而一个页的大小一般是 &lt;code>16KB&lt;/code>，也就是 16384 字节，而一个 &lt;code>VARCHAR(M)&lt;/code> 类型的列就最多可以存储 65532 个字节，这样就可能造成&lt;strong>一个页存放不了一条记录&lt;/strong>的尴尬情况。&lt;/p>
&lt;p>&lt;strong>MySQL 中规定一个页中至少存放两行记录&lt;/strong>。&lt;/p>
&lt;p>在 &lt;code>Compact&lt;/code> 行格式中，对于占用存储空间非常大的列，在记录的真实数据处&lt;strong>只会存储该列的一部分数据&lt;/strong>，把剩余的数据分散存储在几个其他的页中，然后记录的真实数据处用 &lt;strong>20 个字节存储指向这些页的地址&lt;/strong>，从而可以找到剩余数据所在的页。这个过程也叫做&lt;strong>行溢出&lt;/strong>。存储超出字节的那些页面也被称为&lt;strong>溢出页&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>只需要知道如果在一个行中存储了很大的数据时，可能发生行溢出的现象&lt;/strong>。&lt;/p>
&lt;h4>页分裂 (Page Split) 与行溢出 (Row Overflow) 的区别&lt;span class="hx-absolute -hx-mt-20" id="页分裂-page-split-与行溢出-row-overflow-的区别">&lt;/span>
&lt;a href="#%e9%a1%b5%e5%88%86%e8%a3%82-page-split-%e4%b8%8e%e8%a1%8c%e6%ba%a2%e5%87%ba-row-overflow-%e7%9a%84%e5%8c%ba%e5%88%ab" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>页分裂（Page Split）&lt;/li>
&lt;/ol>
&lt;p>页分裂是 B+ 树索引结构（如 InnoDB 的主键索引和唯一索引）在插入或更新数据时可能出现的一种情况。&lt;/p>
&lt;p>&lt;strong>插入数据时：&lt;/strong>&lt;/p>
&lt;p>当向表中插入一条新记录时，InnoDB 会根据主键或唯一索引将记录插入到对应的索引页中。如果目标索引页已经满了（即没有足够的空间容纳新记录），InnoDB 会将该索引页分裂为两个新的索引页，每个新页大约包含原页一半的数据。这样可以为新记录腾出空间。&lt;/p>
&lt;p>&lt;strong>更新数据时：&lt;/strong>&lt;/p>
&lt;p>如果更新操作导致记录的大小增加（例如，更新某个字段的值使其占用更多空间），并且当前索引页无法容纳更新后的记录，也可能触发页分裂。&lt;/p>
&lt;ol start="2">
&lt;li>行溢出（Row Overflow）&lt;/li>
&lt;/ol>
&lt;p>行溢出是 InnoDB 存储引擎中处理变长字段（如 &lt;code>VARCHAR&lt;/code>、&lt;code>TEXT&lt;/code>）时可能出现的一种情况。即使单列不大，多列组合超过限制也会溢出。&lt;/p>
&lt;h3>Dynamic 和 Compressed 行格式&lt;span class="hx-absolute -hx-mt-20" id="dynamic-和-compressed-行格式">&lt;/span>
&lt;a href="#dynamic-%e5%92%8c-compressed-%e8%a1%8c%e6%a0%bc%e5%bc%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>MySQL 默认的行格式就是 &lt;code>Dynamic&lt;/code>。&lt;/p>
&lt;p>&lt;code>Dynamic&lt;/code> 和 &lt;code>Compressed&lt;/code> 行格式和 &lt;code>Compact&lt;/code> 行格式挺像，只不过在处理&lt;strong>行溢出&lt;/strong>数据时不同，它们不会在记录的真实数据处存储字段真实数据的前 768 个字节，而是把&lt;strong>所有的字节都存储到其他页面中，只在记录的真实数据处存储其他页面的地址&lt;/strong>。&lt;/p>
&lt;p>&lt;code>Compressed&lt;/code> 行格式和 &lt;code>Dynamic&lt;/code> 不同的一点是，&lt;code>Compressed&lt;/code> 行格式会采用压缩算法对页面进行压缩，以节省空间。&lt;/p>
&lt;h3>定长类型的优势&lt;span class="hx-absolute -hx-mt-20" id="定长类型的优势">&lt;/span>
&lt;a href="#%e5%ae%9a%e9%95%bf%e7%b1%bb%e5%9e%8b%e7%9a%84%e4%bc%98%e5%8a%bf" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>存储与读取性能更高&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>固定长度&lt;/strong>：定长字段（如 &lt;code>CHAR(10)&lt;/code>）始终占用&lt;strong>预分配的空间，无需计算实际长度&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>直接定位&lt;/strong>：数据库引擎可以直接&lt;strong>通过偏移量访问数据，减少解析时间&lt;/strong>，适合高频查询。&lt;/p>
&lt;p>&lt;strong>减少碎片化&lt;/strong>：变长字段（如 &lt;code>VARCHAR&lt;/code>）可能导致&lt;strong>存储碎片&lt;/strong>。&lt;/p>
&lt;ol start="2">
&lt;li>内存对齐优化&lt;/li>
&lt;/ol>
&lt;p>定长字段在内存中&lt;strong>按固定对齐方式存储，CPU 缓存命中率更高&lt;/strong>，加速排序、聚合等操作。&lt;/p>
&lt;ol start="3">
&lt;li>避免行溢出&lt;/li>
&lt;/ol>
&lt;p>变长字段（如超长 &lt;code>VARCHAR&lt;/code>）可能触发行溢出（&lt;strong>行数据超出页大小，存储到额外位置&lt;/strong>），导致&lt;strong>额外 I/O 开销&lt;/strong>。定长字段无此问题。&lt;/p>
&lt;ol start="4">
&lt;li>简化索引操作&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>定长字段读取性能高，那自然定长字段的索引（如 &lt;code>CHAR&lt;/code>）也更高效&lt;/strong>，B+ 树节点&lt;strong>分裂和合并更可控&lt;/strong>。&lt;/p>
&lt;h2>数据页结构&lt;span class="hx-absolute -hx-mt-20" id="数据页结构">&lt;/span>
&lt;a href="#%e6%95%b0%e6%8d%ae%e9%a1%b5%e7%bb%93%e6%9e%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>InnoDB 管理存储空间的基本单位是&lt;strong>页&lt;/strong>，一个页的大小一般是 &lt;code>16KB&lt;/code>。InnoDB 设计了多种不同类型的页，比如存放表空间头部信息的页，存放 &lt;code>Insert Buffer&lt;/code> 信息的页等等。存放表中记录的页，叫做 &lt;strong>索引（&lt;code>INDEX&lt;/code>）页&lt;/strong>。暂叫做 &lt;strong>数据页&lt;/strong> 吧。&lt;/p>
&lt;p>一个 InnoDB 数据页的存储空间大致被划分成了 7 个部分：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>中文名&lt;/th>
&lt;th>占用空间&lt;/th>
&lt;th>简单描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>File Header&lt;/code>&lt;/td>
&lt;td>文件头部&lt;/td>
&lt;td>38 字节&lt;/td>
&lt;td>页的一些通用信息&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Page Header&lt;/code>&lt;/td>
&lt;td>页面头部&lt;/td>
&lt;td>56 字节&lt;/td>
&lt;td>数据页专有的一些信息&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Infimum + Supremum&lt;/code>&lt;/td>
&lt;td>最小记录和最大记录&lt;/td>
&lt;td>26 字节&lt;/td>
&lt;td>两个虚拟的行记录&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>User Records&lt;/code>&lt;/td>
&lt;td>用户记录&lt;/td>
&lt;td>不确定&lt;/td>
&lt;td>实际存储的行记录内容&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Free Space&lt;/code>&lt;/td>
&lt;td>空闲空间&lt;/td>
&lt;td>不确定&lt;/td>
&lt;td>页中尚未使用的空间&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Page Directory&lt;/code>&lt;/td>
&lt;td>页面目录&lt;/td>
&lt;td>不确定&lt;/td>
&lt;td>页中的某些记录的相对位置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>File Trailer&lt;/code>&lt;/td>
&lt;td>文件尾部&lt;/td>
&lt;td>8 字节&lt;/td>
&lt;td>校验页是否完整&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/innodb-page.png" width="280px">
&lt;h2>记录在页中的存储&lt;span class="hx-absolute -hx-mt-20" id="记录在页中的存储">&lt;/span>
&lt;a href="#%e8%ae%b0%e5%bd%95%e5%9c%a8%e9%a1%b5%e4%b8%ad%e7%9a%84%e5%ad%98%e5%82%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;strong>&lt;code>User Records&lt;/code> 部分就是存储实际数据的部分&lt;/strong>。&lt;/p>
&lt;p>一开始&lt;strong>生成页的时候，是没有 &lt;code>User Records&lt;/code> 的，每当插入一条记录，都会从 &lt;code>Free Space&lt;/code> 部分，也就是尚未使用的存储空间中申请一个记录大小的空间划分到 &lt;code>User Records&lt;/code> 部分&lt;/strong>。&lt;/p>
&lt;p>当 &lt;code>Free Space&lt;/code> 空间全部划分到 &lt;code>User Records&lt;/code> 之后，就意味着这个页使用完了，插入新的记录，就需要申请新的页。&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/page-insert-demo.png" alt="page-insert-demo" loading="lazy" />&lt;/p>
&lt;h3>记录头信息&lt;span class="hx-absolute -hx-mt-20" id="记录头信息-1">&lt;/span>
&lt;a href="#%e8%ae%b0%e5%bd%95%e5%a4%b4%e4%bf%a1%e6%81%af-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>以 &lt;code>compact&lt;/code> 格式为例，先创建一个表：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="n">mysql&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">page_demo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10000&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">ascii&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ROW_FORMAT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">Compact&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Query&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">OK&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">rows&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">affected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">03&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sec&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>插入四条记录：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; INSERT INTO page_demo VALUES&lt;span class="o">(&lt;/span>1, 100, &lt;span class="s1">&amp;#39;aaaa&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>2, 200, &lt;span class="s1">&amp;#39;bbbb&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>3, 300, &lt;span class="s1">&amp;#39;cccc&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>4, 400, &lt;span class="s1">&amp;#39;dddd&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">4&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Records: &lt;span class="m">4&lt;/span> Duplicates: &lt;span class="m">0&lt;/span> Warnings: &lt;span class="m">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>这些记录下页中的示意图（记录中头信息和实际的列数据其实是一堆二进制位）：&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/records-in-page.png" alt="records-in-page" loading="lazy" />&lt;/p>
&lt;h4>delete_mask&lt;span class="hx-absolute -hx-mt-20" id="delete_mask">&lt;/span>
&lt;a href="#delete_mask" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>这个属性标记着当前记录是否被删除，占用 &lt;code>1&lt;/code> 个二进制位，为 &lt;code>1&lt;/code> 的时候代表记录被删除掉了。&lt;/p>
&lt;p>&lt;strong>被删除的记录还在页中么？&lt;/strong>&lt;/p>
&lt;p>&lt;strong>是的&lt;/strong>，确实还在磁盘上。这些被删除的记录之所以不立即从磁盘上移除，是因为移除它们之后把其他的记录在磁盘上重新排列需要性能消耗，所以&lt;strong>只是打一个删除标记&lt;/strong>而已，所有被删除掉的记录都会组成一个所谓的&lt;strong>垃圾链表&lt;/strong>，在这个链表中的记录占用的空间称之为所谓的&lt;strong>可重用空间&lt;/strong>，之后&lt;strong>如果有新记录插入到表中的话，可以把这些被删除的记录占用的存储空间覆盖掉&lt;/strong>。&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>Page Header 部分有一个称之为 &lt;strong>&lt;code>PAGE_FREE&lt;/code> 的属性&lt;/strong>，它指向由被删除记录组成的&lt;strong>垃圾链表&lt;/strong>中的&lt;strong>头节点&lt;/strong>。&lt;/p>
&lt;p>删除一条记录需要经历两个阶段：&lt;/p>
&lt;ol>
&lt;li>Delete Mark 阶段，把记录的 &lt;code>delete_mask&lt;/code> 属性设置为 1，其他的不做修改（其实会修改记录的 &lt;code>trx_id&lt;/code>、&lt;code>roll_pointer&lt;/code> 这些隐藏列的值）。但是这个时候&lt;strong>还没有被加入到垃圾链表&lt;/strong>。也就是此时记录处于一个&lt;strong>中间状态&lt;/strong>。&lt;/li>
&lt;li>Purge 阶段，当该删除语句所在的&lt;strong>事务提交之后&lt;/strong>，会有&lt;strong>专门的线程后来真正的把记录删除掉&lt;/strong>。所谓真正的删除就是&lt;strong>把该记录从正常记录链表中移除，并且加入到垃圾链表&lt;/strong>中，然后还要调整一些页面的其他信息，比如页面中可重用的字节数量&lt;code>PAGE_GARBAGE&lt;/code>、还有页目录的一些信息等等。&lt;/li>
&lt;/ol>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4>min_rec_mask&lt;span class="hx-absolute -hx-mt-20" id="min_rec_mask">&lt;/span>
&lt;a href="#min_rec_mask" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>B+ 树的每层非叶子节点中的最小记录都会添加该标记。&lt;/p>
&lt;h4>heap_no&lt;span class="hx-absolute -hx-mt-20" id="heap_no">&lt;/span>
&lt;a href="#heap_no" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>表示当前记录在&lt;strong>本页中的位置&lt;/strong>。注意上面插入 4 条记录的示意图，4 条记录的位置分别是 &lt;code>2&lt;/code>、&lt;code>3&lt;/code>、&lt;code>4&lt;/code>、&lt;code>5&lt;/code>。&lt;/p>
&lt;p>&lt;strong>0 和 1 去哪了？&lt;/strong>&lt;/p>
&lt;p>因为 InnoDB 给每个页都自动添加了两个记录。这两个记录称为&lt;strong>伪记录&lt;/strong>或者&lt;strong>虚拟记录&lt;/strong>。这两个分别是&lt;strong>最小记录&lt;/strong>，&lt;strong>最大记录&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>它们并不存放在页的 User Records 部分，被单独放在一个称为 &lt;code>Infimum + supremum&lt;/code> 的部分&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/infimum-supremum.png" alt="infimum-supremum" loading="lazy" />&lt;/p>
&lt;p>小记录和最大记录的 &lt;code>heap_no&lt;/code> 值分别是 &lt;code>0&lt;/code> 和 &lt;code>1&lt;/code>，也就是说它们的位置最靠前。&lt;/p>
&lt;h4>record_type&lt;span class="hx-absolute -hx-mt-20" id="record_type">&lt;/span>
&lt;a href="#record_type" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>表示当前记录的类型，&lt;code>0&lt;/code> 表示普通记录，&lt;code>1&lt;/code> 表示 B+ 树非叶子节点记录，&lt;code>2&lt;/code> 表示最小记录，&lt;code>3&lt;/code> 表示最大记录。&lt;/p>
&lt;h4>next_record&lt;span class="hx-absolute -hx-mt-20" id="next_record">&lt;/span>
&lt;a href="#next_record" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>表示&lt;strong>从当前记录的&amp;quot;真实数据&amp;quot;到下一条记录的&amp;quot;真实数据&amp;quot;的地址偏移量&lt;/strong>。如，第一条记录的 &lt;code>next_record&lt;/code> 值为 32，意味着从第一条记录的真实数据的地址处向后找 32 个字节便是下一条记录的真实数据。这其实是个&lt;strong>链表&lt;/strong>，可以通过一条记录找到它的下一条记录。&amp;ldquo;下一条记录&amp;rdquo; 指得&lt;strong>按照主键值由小到大的顺序的下一条记录&lt;/strong>。下图箭头来替代一下 &lt;code>next_record&lt;/code> 中的地址偏移量：&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/infimum-supremum.png" alt="infimum-supremum" loading="lazy" />&lt;/p>
&lt;p>记录按照主键从小到大的顺序形成了一个&lt;strong>单链表&lt;/strong>。最大记录的 &lt;code>next_record&lt;/code> 的值为 0。这也就是说最大记录是没有下一条记录了，它是这个单链表中的最后一个节点。如&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/records-link-demo.png" alt="records-link-demo" loading="lazy" />&lt;/p>
&lt;p>如果删掉第 2 条记录：&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/records-link-delete-demo.png" alt="records-link-delete-demo" loading="lazy" />&lt;/p>
&lt;p>删除第 2 条记录前后主要发生了这些变化：&lt;/p>
&lt;ol>
&lt;li>第 2 条记录的 &lt;code>delete_mask&lt;/code> 值设置为 1。&lt;/li>
&lt;li>第 2 条记录的 &lt;code>next_record&lt;/code> 值变为了 0，意味着该记录没有下一条记录了。&lt;/li>
&lt;li>第 1 条记录的 &lt;code>next_record&lt;/code> 指向了第 3 条记录。&lt;/li>
&lt;li>最大记录的 &lt;code>n_owned&lt;/code> 值从 5 变成了 4。&lt;/li>
&lt;/ol>
&lt;p>对页中的记录做任何的增删改操作，InnoDB &lt;strong>始终会维护一条记录的单链表，链表中的各个节点是按照主键值由小到大的顺序连接起来的&lt;/strong>。&lt;/p>
&lt;h5>next_record 指针为什么要指向记录头信息和真实数据之间的位置&lt;span class="hx-absolute -hx-mt-20" id="next_record-指针为什么要指向记录头信息和真实数据之间的位置">&lt;/span>
&lt;a href="#next_record-%e6%8c%87%e9%92%88%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e6%8c%87%e5%90%91%e8%ae%b0%e5%bd%95%e5%a4%b4%e4%bf%a1%e6%81%af%e5%92%8c%e7%9c%9f%e5%ae%9e%e6%95%b0%e6%8d%ae%e4%b9%8b%e9%97%b4%e7%9a%84%e4%bd%8d%e7%bd%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>因为这个位置，&lt;strong>向左读取就是记录头信息，向右读取就是真实数据&lt;/strong>。&lt;/p>
&lt;p>并且变长字段长度列表、&lt;code>NULL&lt;/code> 值列表中的信息都是&lt;strong>逆序存放&lt;/strong>，这样可以使&lt;strong>记录中位置靠前的字段和它们对应的字段长度信息在内存中的距离更近，可能会提高高速缓存的命中率&lt;/strong>。&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">CPU 缓存是按“块”读取的，一般一次加载 64 字节。如果长度信息和对应字段数据在同一个缓存块内，CPU 一次缓存加载就能拿到。逆序设计&lt;strong>让频繁访问的前几个字段（如主键）和它们的长度信息尽量靠近，减少缓存缺失（Cache Miss）&lt;/strong>。&lt;/div>
&lt;/div>
&lt;/div>
&lt;h5>如果再次把这条记录插入到表中，会发生什么事？&lt;span class="hx-absolute -hx-mt-20" id="如果再次把这条记录插入到表中会发生什么事">&lt;/span>
&lt;a href="#%e5%a6%82%e6%9e%9c%e5%86%8d%e6%ac%a1%e6%8a%8a%e8%bf%99%e6%9d%a1%e8%ae%b0%e5%bd%95%e6%8f%92%e5%85%a5%e5%88%b0%e8%a1%a8%e4%b8%ad%e4%bc%9a%e5%8f%91%e7%94%9f%e4%bb%80%e4%b9%88%e4%ba%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; INSERT INTO page_demo VALUES&lt;span class="o">(&lt;/span>2, 200, &lt;span class="s1">&amp;#39;bbbb&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">1&lt;/span> row affected &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>InnoDB 没有为它申请新的存储空间，而是&lt;strong>直接复用了原来被删除记录的存储空间&lt;/strong>。&lt;/p>
&lt;h2>Page Directory（页目录）&lt;span class="hx-absolute -hx-mt-20" id="page-directory页目录">&lt;/span>
&lt;a href="#page-directory%e9%a1%b5%e7%9b%ae%e5%bd%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>如何根据主键值查询&lt;strong>页&lt;/strong>中的记录？&lt;/p>
&lt;p>例如：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">page_demo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>因为记录在页中按照主键值由小到大顺序串联成了一个单链表，那么就可以从 &lt;code>Infimum&lt;/code> 记录（最小记录）开始遍历链表，当找到主键值大于你想要查找的主键值时，就可以停止了。但是这种方法，如果记录多了，效率及会很差。&lt;/p>
&lt;p>InnoDB 的 Page Directory，是一个类似书籍目录的设计：&lt;/p>
&lt;ol>
&lt;li>将所有正常的记录（包括最大和最小记录，不包括标记为已删除的记录）划分为几个组。&lt;/li>
&lt;li>每个组的&lt;strong>最后一条记录&lt;/strong>（也就是组内最大的那条记录）的头信息中的 &lt;strong>&lt;code>n_owned&lt;/code> 属性&lt;/strong> 表示该记录拥有多少条记录，也就是该组内共有几条记录。&lt;/li>
&lt;li>将&lt;strong>每个组的最后一条记录的地址偏移量&lt;/strong>单独提取出&lt;strong>来按顺序存储到靠近页的尾部的地方&lt;/strong>，这个地方就是所谓的 Page Directory，也就是&lt;strong>页目录&lt;/strong>。页面目录中的这些地址偏移量被称为&lt;strong>槽&lt;/strong>（Slot），所以这个&lt;strong>页目录是由槽组成&lt;/strong>的。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>最小记录所在的分组只能有 1 条记录，最大记录所在的分组拥有的记录条数只能在 &lt;code>1~8&lt;/code> 条之间，剩下的分组中记录的条数范围只能在是 &lt;code>4~8&lt;/code> 条之间&lt;/strong>。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; INSERT INTO page_demo VALUES&lt;span class="o">(&lt;/span>5, 500, &lt;span class="s1">&amp;#39;eeee&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>6, 600, &lt;span class="s1">&amp;#39;ffff&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>7, 700, &lt;span class="s1">&amp;#39;gggg&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>8, 800, &lt;span class="s1">&amp;#39;hhhh&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>9, 900, &lt;span class="s1">&amp;#39;iiii&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>10, 1000, &lt;span class="s1">&amp;#39;jjjj&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>11, 1100, &lt;span class="s1">&amp;#39;kkkk&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>12, 1200, &lt;span class="s1">&amp;#39;llll&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>13, 1300, &lt;span class="s1">&amp;#39;mmmm&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>14, 1400, &lt;span class="s1">&amp;#39;nnnn&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>15, 1500, &lt;span class="s1">&amp;#39;oooo&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>16, 1600, &lt;span class="s1">&amp;#39;pppp&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">12&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Records: &lt;span class="m">12&lt;/span> Duplicates: &lt;span class="m">0&lt;/span> Warnings: &lt;span class="m">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>往表中添加 12 条记录，现在页里边就一共有 18 条记录（包括最小和最大记录），这些记录被分成了 5 个组，如图所示：&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/page-directory-demo.png" alt="page-directory-demo" loading="lazy" />&lt;/p>
&lt;p>各个槽代表的记录的主键值都是从小到大排序的，所以可以使用&lt;strong>二分法&lt;/strong>来进行快速查找。5 个槽的编号分别是：0、1、2、3、4，所以初始情况下最低的槽就是 &lt;code>low=0&lt;/code>，最高的槽就是 &lt;code>high=4&lt;/code>。比如找到主键值为 6 的记录，过程是这样的：&lt;/p>
&lt;ol>
&lt;li>计算中间槽的位置：&lt;code>(0+4)/2=2&lt;/code>，所以查看槽 2 对应记录的主键值为 8，又因为 &lt;code>8 &amp;gt; 6&lt;/code>，所以设置 &lt;code>high=2&lt;/code>，low 保持不变。&lt;/li>
&lt;li>重新计算中间槽的位置：&lt;code>(0+2)/2=1&lt;/code>，所以查看槽 1 对应的主键值为 4，又因为 &lt;code>4 &amp;lt; 6&lt;/code>，所以设置 &lt;code>low=1&lt;/code>，high 保持不变。&lt;/li>
&lt;li>&lt;code>high - low&lt;/code> 的值为 1，所以确定主键值为 6 的记录在槽 2 对应的组中。槽 2 对应的记录是主键值为 8 的记录（改组的最大记录），但是槽 1 对应的记录（主键值为 4），该条记录的下一条记录就是槽 2 中主键值最小的记录，该记录的主键值为 5。所以可以从这条主键值为 5 的记录出发，遍历槽 2 中的各条记录。&lt;/li>
&lt;/ol>
&lt;h2>Page Header（页面头部）&lt;span class="hx-absolute -hx-mt-20" id="page-header页面头部">&lt;/span>
&lt;a href="#page-header%e9%a1%b5%e9%9d%a2%e5%a4%b4%e9%83%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Page Header 占用固定的 56 个字节，专门存储各种状态信息，比如本页中已经存储了多少条记录，第一条记录的地址是什么，页目录中存储了多少个槽等等。&lt;/p>
&lt;h2>File Header（文件头部）&lt;span class="hx-absolute -hx-mt-20" id="file-header文件头部">&lt;/span>
&lt;a href="#file-header%e6%96%87%e4%bb%b6%e5%a4%b4%e9%83%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>不同类型的页都会以 File Header 作为第一个组成部分，描述了一些针对各种页都通用的一些信息，比方说这个页的编号是多少，它的上一个页、下一个页是谁等等。
File Header 占用固定的 38 个字节。&lt;/p>
&lt;p>几个重要的部分：&lt;/p>
&lt;ul>
&lt;li>&lt;code>FIL_PAGE_SPACE_OR_CHKSUM&lt;/code>，当前页面的校验和。&lt;/li>
&lt;li>&lt;code>FIL_PAGE_OFFSET&lt;/code>，每一个页都有一个唯一的页号。&lt;/li>
&lt;li>&lt;code>FIL_PAGE_TYPE&lt;/code>，页的类型。&lt;/li>
&lt;li>&lt;code>FIL_PAGE_PREV&lt;/code> 和 &lt;code>FIL_PAGE_NEXT&lt;/code>，代表本页的&lt;strong>上一个和下一个页的页号&lt;/strong>。这样通过建立一个双向链表把许许多多的页就都串联起来了，而无需这些页在物理上真正连着。&lt;strong>并不是所有类型的页都有上一个和下一个页的属性&lt;/strong>，但是&lt;strong>数据页&lt;/strong>（也就是类型为 &lt;code>FIL_PAGE_INDEX&lt;/code> 的页）是有这两个属性的，所以所有的数据页其实是一个双向链表。&lt;/li>
&lt;/ul>
&lt;h2>总结&lt;span class="hx-absolute -hx-mt-20" id="总结">&lt;/span>
&lt;a href="#%e6%80%bb%e7%bb%93" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>每个记录的头信息中都有一个 &lt;code>next_record&lt;/code> 属性，从而使页中的所有记录串联成一个单链表。&lt;/li>
&lt;li>InnoDB 会把页中的记录划分为若干个组，每个组的&lt;strong>最后一个记录的地址偏移量作为一个槽&lt;/strong>，存放在 &lt;code>Page Directory&lt;/code> 中，所以在一个页中根据主键查找记录是非常快的，分为两步：
&lt;ol>
&lt;li>通过二分法确定该记录所在的槽。&lt;/li>
&lt;li>通过记录的 &lt;code>next_record&lt;/code> 属性遍历该槽所在的组中的各个记录。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>每个数据页的 &lt;code>File Header&lt;/code> 部分都有上一个和下一个页的编号，所以所有的数据页会组成一个双链表。&lt;/li>
&lt;/ol></description></item><item><title>B+ 树索引</title><link>https://shipengqi.github.io/db-learn/docs/mysql/advance/03_b-tree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/db-learn/docs/mysql/advance/03_b-tree/</guid><description>
&lt;p>InnoDB 数据页有 7 个组成部分，各个数据页可以组成一个&lt;strong>双向链表&lt;/strong>，而每个数据页中的记录会按照主键值&lt;strong>从小到大的顺序组成一个单向链表&lt;/strong>，每个数据页都会为存储在它里边儿的记录生成一个&lt;strong>页目录&lt;/strong>，在通过主键查找某条记录的时候可以在页目录中使用&lt;strong>二分法快速定位到对应的槽&lt;/strong>，然后再&lt;strong>遍历该槽对应分组中的记录&lt;/strong>即可快速找到指定的记录。&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/pages-link-demo.png" alt="pages-link-demo" loading="lazy" />&lt;/p>
&lt;h2>没有索引的查找&lt;span class="hx-absolute -hx-mt-20" id="没有索引的查找">&lt;/span>
&lt;a href="#%e6%b2%a1%e6%9c%89%e7%b4%a2%e5%bc%95%e7%9a%84%e6%9f%a5%e6%89%be" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>没有索引的时候是怎么查找记录的？比如：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="err">列名列表&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">表名&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">列名&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">xxx&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>在一个页中的查找&lt;span class="hx-absolute -hx-mt-20" id="在一个页中的查找">&lt;/span>
&lt;a href="#%e5%9c%a8%e4%b8%80%e4%b8%aa%e9%a1%b5%e4%b8%ad%e7%9a%84%e6%9f%a5%e6%89%be" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>如果表中的记录比较少，所有的记录都可以被存放到一个页中，在查找记录的时候可以根据搜索条件的不同分为两种情况：&lt;/p>
&lt;ul>
&lt;li>以主键为搜索条件&lt;/li>
&lt;/ul>
&lt;p>在页目录中使用二分法快速定位到对应的槽，然后再遍历该槽对应分组中的记录即可快速找到指定的记录。&lt;/p>
&lt;ul>
&lt;li>以其他列作为搜索条件&lt;/li>
&lt;/ul>
&lt;p>对非主键列，数据页中并&lt;strong>没有对非主键列建立所谓的页目录，所以无法通过二分法快速定位相应的槽。这种情况下只能从最小记录开始依次遍历单链表中的每条记录&lt;/strong>，然后对比每条记录是不是符合搜索条件。很显然，这种查找的效率是非常低的。&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">每个槽对应的记录都是该组中&lt;strong>主键值最大的记录&lt;/strong>，那么&lt;strong>怎么定位一个组中最小的记录&lt;/strong>？各个槽都是挨着的，拿到上一个槽的最大记录，那么该条记录的下一条记录下一个槽的最小记录。&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3>在很多页中查找&lt;span class="hx-absolute -hx-mt-20" id="在很多页中查找">&lt;/span>
&lt;a href="#%e5%9c%a8%e5%be%88%e5%a4%9a%e9%a1%b5%e4%b8%ad%e6%9f%a5%e6%89%be" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>大部分情况下表中存放的记录都是非常多的，需要好多的数据页来存储这些记录。在很多页中查找记录的话可以分为两个步骤：&lt;/p>
&lt;ol>
&lt;li>定位到记录所在的页。&lt;/li>
&lt;li>从所在的页内中查找相应的记录。&lt;/li>
&lt;/ol>
&lt;p>由于并不能快速的定位到记录所在的页，所以只能从第一个页沿着双向链表一直往下找，每一个页中再使用上面一个页中的查找方法。非常低效。&lt;/p>
&lt;h2>索引&lt;span class="hx-absolute -hx-mt-20" id="索引">&lt;/span>
&lt;a href="#%e7%b4%a2%e5%bc%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>B+ 树&lt;span class="hx-absolute -hx-mt-20" id="b-树">&lt;/span>
&lt;a href="#b-%e6%a0%91" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>B+ 树是目前为止排序最有效率的数据结构。像二叉树，哈希索引、红黑树、SkipList，在海量数据基于磁盘存储效率方面远不如 B+ 树索引高效。&lt;/p>
&lt;p>&lt;strong>B+ 树索引的特点是&lt;/strong>： 基于磁盘的平衡树，但&lt;strong>树非常矮&lt;/strong>，通常为 &lt;code>3~4&lt;/code> 层，能存放千万到上亿的排序数据。树矮意味着访问效率高，从千万或上亿数据里查询一条数据，只需要 3、4 次 I/O。&lt;/p>
&lt;p>B+ 树是 B 树的变种，主要区别：&lt;/p>
&lt;ul>
&lt;li>非叶子节点不存储 data，只存储索引(冗余)，可以放更多的索引。B 树的非叶子节点也存储 data，会占用更多的磁盘空间，每个非叶子节点存储的记录远少于 B+ 树，这会导致树的高度变高，磁盘 I/O 次数变多，查询效率变低。&lt;/li>
&lt;li>叶子节点包含所有索引字段。&lt;/li>
&lt;li>叶子节点用指针连接，组成一个双向链表，提高区间访问的性能。B 树的叶子节点由于没有这个指针，一次只能访问一个节点，然后再从根节点开始遍历。&lt;/li>
&lt;/ul>
&lt;h4>B 树的优势&lt;span class="hx-absolute -hx-mt-20" id="b-树的优势">&lt;/span>
&lt;a href="#b-%e6%a0%91%e7%9a%84%e4%bc%98%e5%8a%bf" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>B 树可以在非叶子节点同时存储键和值，因此，把频繁访问的数据放在靠近根节点的地方将会大大提高热点数据的查询效率。&lt;/p>
&lt;h4>为什么是 B+ 树&lt;span class="hx-absolute -hx-mt-20" id="为什么是-b-树">&lt;/span>
&lt;a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e6%98%af-b-%e6%a0%91" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>哈希表是一种以键-值（key-value）存储数据的结构，插入和查询都很快，但是适用于只有等值查询的场景，&lt;strong>由于 key 是无序的，所以范围查询很慢&lt;/strong>。也&lt;strong>不支持模糊查询&lt;/strong>。&lt;/p>
&lt;p>有序数组在等值查询（二分法）和范围查询场景中的性能就都非常优秀。如果仅仅看查询效率，有序数组就是最好的数据结构了。但是，在需要更新数据的时候就麻烦了，你往中间插入一个记录就必须得挪动后面所有的记录，成本太高。&lt;/p>
&lt;h3>InnoDB 中的 B+ 树&lt;span class="hx-absolute -hx-mt-20" id="innodb-中的-b-树">&lt;/span>
&lt;a href="#innodb-%e4%b8%ad%e7%9a%84-b-%e6%a0%91" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>在一个数据页中，&lt;code>Page Directory&lt;/code> 通过二分法可以快速定位一条记录在页中的位置。&lt;/p>
&lt;p>但是，在一个表中，可能有很多个数据页，&lt;strong>如何快速的定位到需要查找的记录在哪些数据页中？&lt;/strong>&lt;/p>
&lt;p>给所有的页建立目录项，目录项记录的 &lt;code>record_type&lt;/code> 值是 &lt;code>1&lt;/code>，而普通用户记录的 &lt;code>record_type&lt;/code> 值是 &lt;code>0&lt;/code>。&lt;/p>
&lt;p>目录项记录只有&lt;strong>主键值和页的编号两个列&lt;/strong>，而普通的用户记录的列是用户自己定义的，可能包含很多列，另外还有 InnoDB 自己添加的隐藏列。&lt;/p>
&lt;div class="img-zoom">
&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/b-plus-tree-demo.png" alt="b-plus-tree-demo">
&lt;/div>
&lt;p>上图中，如果用户记录的主键值在 &lt;code>[1, 320)&lt;/code> 之间，则到页 30 中查找更详细的目录项记录，如果主键值不小于 320 的话，就到页 32 中查找更详细的目录项记录。&lt;/p>
&lt;p>不论是存放用户记录的数据页，还是存放目录项记录的数据页，在 B+ 树这个数据结构中，都叫做&lt;strong>节点&lt;/strong>。从图中可以看出来，实际的用户记录都存放在 B+ 树的最底层的节点上，这些节点也被称为&lt;strong>叶子节点&lt;/strong>或&lt;strong>叶节点&lt;/strong>，其余用来存放目录项的节点称为&lt;strong>非叶子节点&lt;/strong>或者&lt;strong>内节点&lt;/strong>，其中 B+ 树最上边的那个节点也称为&lt;strong>根节点&lt;/strong>。&lt;/p>
&lt;h4>聚簇索引&lt;span class="hx-absolute -hx-mt-20" id="聚簇索引">&lt;/span>
&lt;a href="#%e8%81%9a%e7%b0%87%e7%b4%a2%e5%bc%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>使用记录主键值的大小进行记录和页的排序&lt;/li>
&lt;li>B+ 树的叶子节点存储完整的用户记录（记录中存储了所有列的值，包括隐藏列）。&lt;/li>
&lt;/ol>
&lt;p>具有这两种特性的 B+ 树称为&lt;strong>聚簇索引&lt;/strong>，所有完整的用户记录都存放在这个聚簇索引的叶子节点处。这就是所谓的&lt;strong>索引即数据，数据即索引&lt;/strong>。&lt;/p>
&lt;h4>二级索引&lt;span class="hx-absolute -hx-mt-20" id="二级索引">&lt;/span>
&lt;a href="#%e4%ba%8c%e7%ba%a7%e7%b4%a2%e5%bc%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;strong>非主键列&lt;/strong>建立的 B+ 树需要一次&lt;strong>回表&lt;/strong>操作才可以定位到完整的用户记录，所以这种 B+ 树也被称为&lt;strong>二级索引&lt;/strong>（secondary index），或者&lt;strong>辅助索引&lt;/strong>。&lt;/p>
&lt;p>二级索引的叶子节点包含的用户记录由 &lt;code>索引列 + 主键&lt;/code> 组成。&lt;/p>
&lt;p>&lt;strong>为什么二级索引的叶子节点只存储主键？&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>节省空间&lt;/strong>，如果所有的列都存储在二级索引的叶子节点中，那么二级索引的叶子节点就会非常大，占用的空间也会非常大。&lt;/li>
&lt;li>&lt;strong>一致性问题&lt;/strong>，如果二级索引的叶子节点中存储的是完整的用户记录，那么当用户记录发生变化时，所有二级索引的叶子节点也需要发生变化。&lt;/li>
&lt;/ul>
&lt;h4>联合索引&lt;span class="hx-absolute -hx-mt-20" id="联合索引">&lt;/span>
&lt;a href="#%e8%81%94%e5%90%88%e7%b4%a2%e5%bc%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>联合索引，本质上也是一个二级索引。例如一个联合索引包含列 &lt;code>a&lt;/code> 和 &lt;code>b&lt;/code>：&lt;/p>
&lt;p>B+ 树按照 &lt;code>a&lt;/code> 和 &lt;code>b&lt;/code> 列的大小进行排序：&lt;/p>
&lt;ul>
&lt;li>先把各个记录和页按照 &lt;code>a&lt;/code> 列进行排序。&lt;/li>
&lt;li>在记录的 &lt;code>a&lt;/code> 列相同的情况下，采用 &lt;code>b&lt;/code> 列进行排序。&lt;/li>
&lt;/ul>
&lt;h3>B+ 树索引的注意事项&lt;span class="hx-absolute -hx-mt-20" id="b-树索引的注意事项">&lt;/span>
&lt;a href="#b-%e6%a0%91%e7%b4%a2%e5%bc%95%e7%9a%84%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a1%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>一个 B+ 树索引的根节点自诞生之日起，便不会再移动&lt;/strong>。根节点一旦建立，它的页号便会被记录到某个地方，然后 InnoDB 存储引擎需要用到这个索引的时候，都会从那个固定的地方取出根节点的页号，从而来访问这个索引。&lt;/p>
&lt;p>B+ 树的形成过程：&lt;/p>
&lt;ul>
&lt;li>当为某个表创建一个 B+ 树索引时，都会为这个索引创建一个&lt;strong>根节点&lt;/strong>页。最开始表中没有数据的时候，每个 B+ 树索引对应的根节点中既没有用户记录，也没有目录项记录。&lt;/li>
&lt;li>随后向表中插入用户记录时，先把用户记录存储到这个根节点中。&lt;/li>
&lt;li>当根节点中的可用空间用完时继续插入记录，此时会将根节点中的所有记录复制到一个新分配的页，比如 &lt;code>页 a&lt;/code> 中，然后对这个新页进行&lt;strong>页分裂&lt;/strong>的操作，得到另一个新页，比如 &lt;code>页 b&lt;/code>。这时新插入的记录根据键值（也就是聚簇索引中的主键值，二级索引中对应的索引列的值）的大小就会被分配到 &lt;code>页 a&lt;/code> 或者 &lt;code>页 b&lt;/code> 中，而&lt;strong>根节点升级为存储目录项记录的页&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>B+ 树的同一层内节点的目录项记录除页号这个字段以外是唯一的&lt;/strong>。所以对于二级索引的内节点的目录项记录的内容实际上是由三个部分构成的：&lt;/p>
&lt;ul>
&lt;li>索引列的值&lt;/li>
&lt;li>&lt;strong>主键值&lt;/strong>&lt;/li>
&lt;li>页号&lt;/li>
&lt;/ul>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;strong>把主键值也添加到二级索引内节点中的目录项记录&lt;/strong>，这样就能保证 B+ 树每一层节点中各条目录项记录除页号这个字段外是&lt;strong>唯一&lt;/strong>的，因为对于二级索引，&lt;strong>索引列是会有相同的值的，插入数据时，无法判断插入哪个页&lt;/strong>。&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>一个页面最少存储 2 条记录&lt;/strong>。&lt;/p>
&lt;h2>索引的代价&lt;span class="hx-absolute -hx-mt-20" id="索引的代价">&lt;/span>
&lt;a href="#%e7%b4%a2%e5%bc%95%e7%9a%84%e4%bb%a3%e4%bb%b7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>空间上的代价&lt;/li>
&lt;/ul>
&lt;p>每建立一个索引都要为它建立一棵 B+ 树，每一棵 B+ 树的每一个节点都是一个数据页，一个页默认会占用 16KB 的存储空间，一棵很大的 B+ 树会消耗很大的一片存储空间。&lt;/p>
&lt;ul>
&lt;li>时间上的代价&lt;/li>
&lt;/ul>
&lt;p>每次对表中的数据进行增、删、改操作时，都需要去修改各个 B+ 树索引。&lt;strong>B+ 树每层节点都是按照索引列的值从小到大的顺序排序而组成了双向链表&lt;/strong>。不论是叶子节点中的记录，还是非叶&lt;strong>节点中的记录都是按照索引列的值从小到大的顺序而形成了一个单向链表&lt;/strong>。而增、删、改操作可能会对节点和记录的排序造成破坏，所以存储引擎需要&lt;strong>额外的时间进行一些记录移位，页面分裂、页面回收等操作来维护好节点和记录的排序&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>一个表上索引建的越多，就会占用越多的存储空间，在增删改记录的时候性能就越差&lt;/strong>。&lt;/p>
&lt;h2>索引的使用&lt;span class="hx-absolute -hx-mt-20" id="索引的使用">&lt;/span>
&lt;a href="#%e7%b4%a2%e5%bc%95%e7%9a%84%e4%bd%bf%e7%94%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>B+ 树索引适用的条件&lt;span class="hx-absolute -hx-mt-20" id="b-树索引适用的条件">&lt;/span>
&lt;a href="#b-%e6%a0%91%e7%b4%a2%e5%bc%95%e9%80%82%e7%94%a8%e7%9a%84%e6%9d%a1%e4%bb%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>联合索引的各个排序列的排序顺序必须是一致的&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person_info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">auto_increment&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">birthday&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">DATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">phone_number&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">CHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">country&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">varchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_name_birthday_phone_number&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">birthday&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">phone_number&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>二级索引 &lt;code>idx_name_birthday_phone_number&lt;/code>，它是由 3 个列组成的联合索引。所以在这个索引对应的 B+ 树的叶子节点处存储的用户记录只保留 &lt;code>name&lt;/code>、&lt;code>birthday&lt;/code>、&lt;code>phone_number&lt;/code> 这三个列的值以及主键 &lt;code>id&lt;/code> 的值。&lt;/p>
&lt;p>这个 &lt;code>idx_name_birthday_phone_number&lt;/code> 索引对应的 B+ 树中页面和记录的排序方式就是这样的：&lt;/p>
&lt;ul>
&lt;li>先按照 &lt;code>name&lt;/code> 列的值进行排序。&lt;/li>
&lt;li>如果 &lt;code>name&lt;/code> 列的值相同，则按照 &lt;code>birthday&lt;/code> 列的值进行排序。&lt;/li>
&lt;li>如果 &lt;code>birthday&lt;/code> 列的值也相同，则按照 &lt;code>phone_number&lt;/code> 的值进行排序。&lt;/li>
&lt;/ul>
&lt;p>这个排序方式非常重要，因为&lt;strong>只要页面和记录是排好序的，就可以通过二分法来快速定位查找&lt;/strong>。&lt;/p>
&lt;h3>全值匹配&lt;span class="hx-absolute -hx-mt-20" id="全值匹配">&lt;/span>
&lt;a href="#%e5%85%a8%e5%80%bc%e5%8c%b9%e9%85%8d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>当查询条件中的列与索引中的列完全匹配，并且全部使用等值比较（&lt;code>=&lt;/code>）时，称为&lt;strong>全值匹配&lt;/strong>。这种情况下，MySQL 可以最有效地利用索引。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person_info&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Ashburn&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">birthday&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;1990-09-27&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">phone_number&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;15123983239&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>idx_name_birthday_phone_number&lt;/code> 索引包含的 3 个列，查询过程：&lt;/p>
&lt;ol>
&lt;li>B+ 树的数据页和记录是先按照 name 列的值进行排序的，可以先按照 name 列来查找。&lt;/li>
&lt;li>name 列相同的记录又是按照 birthday 进行排序的，可以继续按照 birthday 来查找。&lt;/li>
&lt;li>如果 name 和 birthday 都是相同的，会按照 &lt;code>phone_number&lt;/code> 列的值排序。&lt;/li>
&lt;/ol>
&lt;p>&lt;code>name&lt;/code>、&lt;code>birthday&lt;/code>、&lt;code>phone_number&lt;/code> 这几个搜索列的顺序对查询结果没有影响，因为优化器可以优化语句。&lt;/p>
&lt;h3>匹配左边的列&lt;span class="hx-absolute -hx-mt-20" id="匹配左边的列">&lt;/span>
&lt;a href="#%e5%8c%b9%e9%85%8d%e5%b7%a6%e8%be%b9%e7%9a%84%e5%88%97" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person_info&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Ashburn&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person_info&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Ashburn&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">birthday&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;1990-09-27&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>没有包含全部联合索引的列，只要包含左边的一列或者多列，也可以使用索引。&lt;/p>
&lt;p>因为 B+ 树的联合索引按照索引从左到右的顺序排序的。&lt;/p>
&lt;p>&lt;strong>如果想使用联合索引中尽可能多的列，搜索条件中的各个列必须是联合索引中从最左边连续的列&lt;/strong>。&lt;/p>
&lt;h3>匹配列前缀&lt;span class="hx-absolute -hx-mt-20" id="匹配列前缀">&lt;/span>
&lt;a href="#%e5%8c%b9%e9%85%8d%e5%88%97%e5%89%8d%e7%bc%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>字符串排序的本质就是比较哪个字符串大一点儿，哪个字符串小一点，比较字符串大小就用到了该列的字符集和比较规则。&lt;/p>
&lt;p>比较两个字符串的大小的过程其实是这样的：&lt;/p>
&lt;ul>
&lt;li>先比较字符串的第一个字符，第一个字符小的那个字符串就比较小。&lt;/li>
&lt;li>如果两个字符串的第一个字符相同，那就再比较第二个字符，第二个字符比较小的那个字符串就比较小。&lt;/li>
&lt;li>如果两个字符串的第二个字符也相同，那就接着比较第三个字符，依此类推。&lt;/li>
&lt;/ul>
&lt;p>所以一个排好序的字符串列其实有这样的特点：&lt;/p>
&lt;ul>
&lt;li>先按照字符串的第一个字符进行排序。&lt;/li>
&lt;li>如果第一个字符相同再按照第二个字符进行排序。&lt;/li>
&lt;li>如果第二个字符相同再按照第三个字符进行排序，依此类推。&lt;/li>
&lt;/ul>
&lt;p>也就是说这些字符串的前 n 个字符，也就是前缀都是排好序的，所以对于字符串类型的索引列来说，我们只匹配它的前缀也是可以快速定位记录的，比方说我们想查询名字以&amp;rsquo;As&amp;rsquo;开头的记录，那就可以这么写查询语句：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person_info&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">LIKE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;As%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>但是如果只给出后缀或者中间某个字符串，如 &lt;code>%As%&lt;/code>，就没办法利用索引了。&lt;/p>
&lt;h3>匹配范围值&lt;span class="hx-absolute -hx-mt-20" id="匹配范围值">&lt;/span>
&lt;a href="#%e5%8c%b9%e9%85%8d%e8%8c%83%e5%9b%b4%e5%80%bc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>所有记录都是按照索引列的值从小到大的顺序排好序的&lt;/strong>，所以查找某个范围的值的记录是很简单的。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person_info&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Asa&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Barlow&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>记录是先按 name 列排序的，所以我们上边的查询过程其实是这样的：&lt;/p>
&lt;ul>
&lt;li>找到 name 值为 Asa 的记录。&lt;/li>
&lt;li>找到 name 值为 Barlow 的记录。&lt;/li>
&lt;li>由于所有记录都是由链表连起来的（记录之间用单链表，数据页之间用双链表），所以他们之间的记录都可以很容易的取出来。&lt;/li>
&lt;li>找到这些记录的主键值，再到&lt;strong>聚簇索引中回表&lt;/strong>查找完整的记录。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>如果对多个列同时进行范围查找的话，只有对索引最左边的那个列进行范围查找的时候才能用到 B+ 树索引&lt;/strong>。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person_info&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Asa&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Barlow&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">birthday&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;1980-01-01&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>查询可以分成两个部分：&lt;/p>
&lt;ol>
&lt;li>通过条件 &lt;code>name &amp;gt; 'Asa' AND name &amp;lt; 'Barlow'&lt;/code> 来对 name 进行范围查找，查找的结果可能有多条 name 值不同的记录，&lt;/li>
&lt;li>对这些 name 值不同的记录继续通过 &lt;code>birthday &amp;gt; '1980-01-01'&lt;/code> 条件继续过滤。&lt;/li>
&lt;/ol>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>对于联合索引 &lt;code>idx_name_birthday_phone_number&lt;/code> 来说，&lt;strong>只能用到 name 列的部分，而用不到 birthday 列的部分，因为只有 name 值相同的情况下才能用 birthday 列的值进行排序&lt;/strong>。&lt;/p>
&lt;p>由于 name 值不相同，birthday 列的值肯定是无序的，无法再使用二分查找这种方式来定位了。&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3>精确匹配某一列并范围匹配另外一列&lt;span class="hx-absolute -hx-mt-20" id="精确匹配某一列并范围匹配另外一列">&lt;/span>
&lt;a href="#%e7%b2%be%e7%a1%ae%e5%8c%b9%e9%85%8d%e6%9f%90%e4%b8%80%e5%88%97%e5%b9%b6%e8%8c%83%e5%9b%b4%e5%8c%b9%e9%85%8d%e5%8f%a6%e5%a4%96%e4%b8%80%e5%88%97" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>对于同一个联合索引来说，虽然对多个列都进行范围查找时只能用到最左边那个索引列，但是如果左边的列是精确查找，则右边的列可以进行范围查找，比方说这样：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person_info&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Ashburn&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">birthday&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;1980-01-01&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">birthday&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;2000-12-31&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">phone_number&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;15100000000&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>name = 'Ashburn'&lt;/code>，对 name 列进行精确查找，使用 B+ 树索引。&lt;/p>
&lt;p>&lt;code>birthday &amp;gt; '1980-01-01' AND birthday &amp;lt; '2000-12-31'&lt;/code>，由于 name 列是精确查找，所以通过 &lt;code>name = 'Ashburn'&lt;/code>条件查找后得到的结果的 name 值都是相同的，它们会再按照 birthday 的值进行排序。所以此时对 birthday 列进行范围查找是可以用到 B+ 树索引的。&lt;/p>
&lt;p>&lt;code>phone_number &amp;gt; '15100000000'&lt;/code>，通过 birthday 的范围查找的记录的 birthday 的值可能不同，所以这个条件无法再利用 B+ 树索引了，只能遍历上一步查询得到的记录。&lt;/p>
&lt;h3>用于排序&lt;span class="hx-absolute -hx-mt-20" id="用于排序">&lt;/span>
&lt;a href="#%e7%94%a8%e4%ba%8e%e6%8e%92%e5%ba%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>一般情况下，我们只能把记录都加载到内存中，再用一些排序算法，比如快速排序、归并排序、吧啦吧啦排序等等在内存中对这些记录进行排序，有的时候可能查询的结果集太大以至于不能在内存中进行排序的话，还可能暂时借助磁盘的空间来存放中间结果，排序操作完成后再把排好序的结果集返回到客户端。在 MySQL 中，把这种在内存中或者磁盘上进行排序的方式统称为&lt;strong>文件排序&lt;/strong>。&lt;/p>
&lt;p>如果 &lt;code>ORDER BY&lt;/code> 子句里使用到了我们的索引列，就有可能省去在内存或文件中排序的步骤，比如下边这个简单的查询语句：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person_info&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ORDER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">BY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">birthday&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">phone_number&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">LIMIT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>这个查询的结果集需要先按照 name 值排序，如果记录的 name 值相同，则需要按照 birthday 来排序，如果 birthday 的值相同，则需要按照 &lt;code>phone_number&lt;/code> 排序。大家可以回过头去看我们建立的 &lt;code>idx_name_birthday_phone_number&lt;/code> 索引的示意图，因为这个 B+ 树索引本身就是按照上述规则排好序的，所以直接从索引中提取数据，然后进行回表操作取出该索引中不包含的列就好了。&lt;/p>
&lt;p>注意，&lt;code>ORDER BY&lt;/code> 的子句后边的列的顺序也必须按照索引列的顺序给出，如果给出 &lt;code>ORDER BY phone_number, birthday, name&lt;/code> 的顺序，那也是用不了 B+ 树索引&lt;/p>
&lt;p>同理，&lt;code>ORDER BY name、ORDER BY name, birthday&lt;/code> 这种匹配索引左边的列的形式可以使用部分的 B+ 树索引。当联合索引左边列的值为常量，也可以使用后边的列进行排序&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person_info&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;A&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ORDER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">BY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">birthday&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">phone_number&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">LIMIT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>不可以使用索引进行排序:&lt;/p>
&lt;ul>
&lt;li>&lt;code>ASC&lt;/code>、&lt;code>DESC&lt;/code> 混用&lt;/li>
&lt;li>排序列包含非同一个索引的列&lt;/li>
&lt;li>排序列使用了复杂的表达式 &lt;code>SELECT * FROM person_info ORDER BY UPPER(name) LIMIT 10;&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3>用于分组&lt;span class="hx-absolute -hx-mt-20" id="用于分组">&lt;/span>
&lt;a href="#%e7%94%a8%e4%ba%8e%e5%88%86%e7%bb%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">birthday&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">phone_number&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">COUNT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person_info&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">GROUP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">BY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">birthday&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">phone_number&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>先把记录按照 name 值进行分组，所有 name 值相同的记录划分为一组。&lt;/p>
&lt;p>将每个 name 值相同的分组里的记录再按照 birthday 的值进行分组，将 birthday 值相同的记录放到一个小分组里，所以看起来就像在一个大分组里又化分了好多小分组。&lt;/p>
&lt;p>再将上一步中产生的小分组按照 &lt;code>phone_number&lt;/code> 的值分成更小的分组，所以整体上看起来就像是先把记录分成一个大分组，然后把大分组分成若干个小分组，然后把若干个小分组再细分成更多的小小分组。&lt;/p>
&lt;p>如果没有索引的话，这个分组过程全部需要在内存里实现，而如果有了索引的话，恰巧这个分组顺序又和我们的 B+ 树中的索引列的顺序是一致的，而我们的 B+ 树索引又是按照索引列排好序的，这不正好么，所以可以直接使用 B+ 树索引进行分组。&lt;/p>
&lt;h3>回表的代价&lt;span class="hx-absolute -hx-mt-20" id="回表的代价">&lt;/span>
&lt;a href="#%e5%9b%9e%e8%a1%a8%e7%9a%84%e4%bb%a3%e4%bb%b7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>idx_name_birthday_phone_number&lt;/code> 索引为例&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person_info&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Asa&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Barlow&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>索引 &lt;code>idx_name_birthday_phone_number&lt;/code> 对应的 B+ 树用户记录中只包含 &lt;code>name&lt;/code>、&lt;code>birthday&lt;/code>、&lt;code>phone_number&lt;/code>、&lt;code>id&lt;/code> 这 4 个字段，而查询列表是 &lt;code>*&lt;/code>，意味着要查询表中所有字段。这时需要把从上一步中获取到的每一条记录的 id 字段都到聚簇索引对应的 B+ 树中找到完整的用户记录，也就是我们通常所说的&lt;strong>回表&lt;/strong>，然后把完整的用户记录返回给查询用户。&lt;/p>
&lt;h4>顺序 I/O&lt;span class="hx-absolute -hx-mt-20" id="顺序-io">&lt;/span>
&lt;a href="#%e9%a1%ba%e5%ba%8f-io" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>索引 &lt;code>idx_name_birthday_phone_number&lt;/code> 对应的 B+ 树中的记录首先会按照 &lt;code>name&lt;/code> 列的值进行排序，所以值在 &lt;code>Asa～Barlow&lt;/code> 之间的记录在磁盘中的存储是相连的，集中分布在一个或几个数据页中，我们可以很快的把这些连着的记录从磁盘中读出来，这种读取方式我们也可以称为&lt;strong>顺序 I/O&lt;/strong>&lt;/p>
&lt;h4>随机 I/O&lt;span class="hx-absolute -hx-mt-20" id="随机-io">&lt;/span>
&lt;a href="#%e9%9a%8f%e6%9c%ba-io" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>根据第 1 步中获取到的记录的 &lt;code>id&lt;/code> 字段的值可能并不相连，而在聚簇索引中记录是根据 &lt;code>id&lt;/code>（也就是主键）的顺序排列的，所以根据这些并不连续的 &lt;code>id&lt;/code> 值到聚簇索引中访问完整的用户记录可能分布在不同的数据页中，这样读取完整的用户记录可能要访问更多的数据页，这种读取方式我们也可以称为&lt;strong>随机 I/O&lt;/strong>&lt;/p>
&lt;p>顺序 I/O 比随机 I/O 的性能高很多。&lt;/p>
&lt;p>&lt;strong>需要回表的记录越多，使用二级索引的性能就越低&lt;/strong>。某些查询宁愿使用全表扫描也不使用二级索引。比方说 &lt;code>name&lt;/code> 值在 &lt;code>Asa~Barlow&lt;/code> 之间的用户记录数量占全部记录数量 90% 以上，那么如果使用 &lt;code>idx_name_birthday_phone_number&lt;/code> 索引的话，有 90% 多的 &lt;code>id&lt;/code> 值需要回表，这不是吃力不讨好么，还不如直接去扫描聚簇索引（也就是全表扫描）。&lt;/p>
&lt;p>查询优化器会事先对表中的记录计算一些统计数据，然后再利用这些统计数据根据查询的条件来计算一下需要回表的记录数，&lt;strong>需要回表的记录数越多，就越倾向于使用全表扫描，反之倾向于使用 &lt;code>二级索引 + 回表&lt;/code> 的方式&lt;/strong>。&lt;/p>
&lt;p>回表的记录特别少，优化器就会倾向于使用 &lt;code>二级索引 + 回表&lt;/code> 的方式执行查询。&lt;/p>
&lt;h3>覆盖索引&lt;span class="hx-absolute -hx-mt-20" id="覆盖索引">&lt;/span>
&lt;a href="#%e8%a6%86%e7%9b%96%e7%b4%a2%e5%bc%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>为了彻底告别回表操作带来的性能损耗：&lt;strong>最好在查询列表里只包含索引列&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">birthday&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">phone_number&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person_info&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Asa&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Barlow&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>只查询 name, birthday, phone_number 这三个索引列的值，所以在通过 idx_name_birthday_phone_number 索引得到结果后就不必到聚簇索引中再查找记录的剩余列，这样就&lt;strong>省去了回表操作带来的性能损耗&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>不鼓励用 &lt;code>*&lt;/code> 号作为查询列表，最好把我们需要查询的列依次标明&lt;/strong>。&lt;/p>
&lt;h3>索引下推&lt;span class="hx-absolute -hx-mt-20" id="索引下推">&lt;/span>
&lt;a href="#%e7%b4%a2%e5%bc%95%e4%b8%8b%e6%8e%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>什么是索引下推（Index Condition Pushdown，ICP）？&lt;/p>
&lt;p>索引下推是一种在存储引擎层提前过滤不符合条件的记录的优化手段。没有 ICP 的时候，索引只用来定位数据行的位置，具体 &lt;code>WHERE&lt;/code> 条件由 Server 层来判断。即使部分索引已能判断，仍需回表取数据。有 ICP 的时候 InnoDB 在扫描索引时，就会尽量利用 &lt;code>WHERE&lt;/code> 子句中的条件直接过滤数据，不必回表就能丢掉无效行，减少回表的次数。&lt;/p>
&lt;p>没有使用 ICP 的情况下，MySQL 的查询：&lt;/p>
&lt;ol>
&lt;li>存储引擎读取索引记录；&lt;/li>
&lt;li>根据索引中的主键值，定位并读取完整的行记录；&lt;/li>
&lt;li>存储引擎把记录交给 Server 层去检测该记录是否满足 &lt;code>WHERE&lt;/code> 条件。&lt;/li>
&lt;/ol>
&lt;p>使用 ICP 的情况下，查询过程：&lt;/p>
&lt;ol>
&lt;li>存储引擎读取索引记录（不是完整的行记录）；&lt;/li>
&lt;li>判断 &lt;code>WHERE&lt;/code> 条件部分能否用索引中的列来做检查，条件不满足，则处理下一行索引记录；&lt;/li>
&lt;li>条件满足，使用索引中的主键去定位并读取完整的行记录（回表）；&lt;/li>
&lt;li>存储引擎把记录交给 Server 层，Server 层检测该记录是否满足 &lt;code>WHERE&lt;/code> 条件的其余部分。&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 联合索引 (name,age,position)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">like&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;LiLei%&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">22&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">position&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;manager&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>在 MySQL 5.6 之前的版本没有 ICP，这个查询只能在联合索引里匹配到名字是 &lt;code>'LiLei'&lt;/code> 开头的索引，然后拿这些索引对应的主键逐个回表，到主键索引上找出相应的记录，服务器层再根据 &lt;code>age&lt;/code> 和 &lt;code>position&lt;/code> 的过滤条件进行筛选。这种情况只会走 &lt;code>name&lt;/code> 字段索引，无法很好的利用索引。&lt;/p>
&lt;p>MySQL 5.6 引入了索引下推优化 ICP，上面那个查询在联合索引里匹配到名字是 &lt;code>'LiLei'&lt;/code> 开头的索引之后，同时还会在索引里过滤 &lt;code>age&lt;/code> 和 &lt;code>position&lt;/code> 这两个字段，拿着过滤完剩下的索引对应的主键 &lt;code>id&lt;/code> 再回表查整行数据。&lt;/p>
&lt;h4>为什么范围查找 MySQL 没有用索引下推优化？&lt;span class="hx-absolute -hx-mt-20" id="为什么范围查找-mysql-没有用索引下推优化">&lt;/span>
&lt;a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e8%8c%83%e5%9b%b4%e6%9f%a5%e6%89%be-mysql-%e6%b2%a1%e6%9c%89%e7%94%a8%e7%b4%a2%e5%bc%95%e4%b8%8b%e6%8e%a8%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>可能是 MySQL 认为索引下推需要额外的判断，范围查找过滤的结果集过大，会导致更多的计算，&lt;code>like KK%&lt;/code> 在绝大多数情况来看，过滤后的结果集比较小，所以这里 MySQL 选择给 &lt;code>like KK%&lt;/code> 用了索引下推优化，当然这也不是绝对的，有时 &lt;code>like KK%&lt;/code> 也不一定就会走索引下推。&lt;/p>
&lt;h4>索引下推的使用条件&lt;span class="hx-absolute -hx-mt-20" id="索引下推的使用条件">&lt;/span>
&lt;a href="#%e7%b4%a2%e5%bc%95%e4%b8%8b%e6%8e%a8%e7%9a%84%e4%bd%bf%e7%94%a8%e6%9d%a1%e4%bb%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>索引下推优化只对联合索引生效。索引下推的目的是为了减少回表次数，也就是要减少 IO 操作。对聚簇索引来说，数据和索引是在一起的，不存在回表这一说。&lt;/li>
&lt;li>索引下推优化只对 &lt;code>InnoDB&lt;/code> 存储引擎生效。&lt;/li>
&lt;/ul>
&lt;h3>百万级别或以上的数据如何删除&lt;span class="hx-absolute -hx-mt-20" id="百万级别或以上的数据如何删除">&lt;/span>
&lt;a href="#%e7%99%be%e4%b8%87%e7%ba%a7%e5%88%ab%e6%88%96%e4%bb%a5%e4%b8%8a%e7%9a%84%e6%95%b0%e6%8d%ae%e5%a6%82%e4%bd%95%e5%88%a0%e9%99%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>删除数据的速度和创建的索引数量是成正比的。百万级别的数据删除速度也会很慢。最快的方案是&lt;strong>删除重建索引&lt;/strong>。&lt;/p>
&lt;ol>
&lt;li>想要删除百万数据的时候可以先删除索引。&lt;/li>
&lt;li>然后删除其中无用数据。&lt;/li>
&lt;li>删除完成后重新创建索引(此时数据较少了)创建索引也非常快。&lt;/li>
&lt;li>与之前的直接删除绝对是要快速很多，更别说万一删除中断,一切删除会回滚。那更是坑了。&lt;/li>
&lt;/ol></description></item><item><title>事务</title><link>https://shipengqi.github.io/db-learn/docs/mysql/advance/04_transaction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/db-learn/docs/mysql/advance/04_transaction/</guid><description>
&lt;p>事务的四个特性 ACID：&lt;/p>
&lt;ul>
&lt;li>原子性（Atomicity）：当前事务的操作要么同时成功，要么同时失败。原子性由 undo log 日志来实现。&lt;/li>
&lt;li>一致性（Consistent）：使用事务的最终目的，由其它3个特性以及业务代码正确逻辑来实现。&lt;/li>
&lt;li>隔离性（Isolation）：在事务并发执行时，他们内部的操作不能互相干扰。隔离性由 MySQL 的各种锁以及 MVCC 机制来实现。&lt;/li>
&lt;li>持久性（Durable）：一旦提交了事务，它对数据库的改变就应该是永久性的。持久性由 redo log 日志来实现。&lt;/li>
&lt;/ul>
&lt;p>事务处理是一种机制，用来管理必须成批执行的 MySQL 操作，以保证数据库不包含不完整的操作结果。利用事务处理，可以保证一组操作不会中途停止，它们或者作为整体执行，或者完全不执行（除非明确指示）。如果没有错误发生，整组语句提交（写到）数据库表。如果发生错误，则进行回退（撤销）以恢复数据库到某个已知且安全的状态。&lt;/p>
&lt;p>关于事务处理需要知道的几个术语：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>事务&lt;/strong>（transaction）指一组 SQL 语句；&lt;/li>
&lt;li>&lt;strong>回退&lt;/strong>（rollback）指撤销指定 SQL 语句的过程；&lt;/li>
&lt;li>&lt;strong>提交&lt;/strong>（commit）指将未存储的 SQL 语句结果写入数据库表；&lt;/li>
&lt;li>&lt;strong>保留点&lt;/strong>（savepoint）指事务处理中设置的临时占位符（&lt;code>place- holder&lt;/code>），你可以对它发布回退（与回退整个事务处理不同）&lt;/li>
&lt;/ul>
&lt;h2>语法&lt;span class="hx-absolute -hx-mt-20" id="语法">&lt;/span>
&lt;a href="#%e8%af%ad%e6%b3%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>控制事务处理&lt;span class="hx-absolute -hx-mt-20" id="控制事务处理">&lt;/span>
&lt;a href="#%e6%8e%a7%e5%88%b6%e4%ba%8b%e5%8a%a1%e5%a4%84%e7%90%86" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>管理事务处理的关键在于将 SQL 语句组分解为逻辑块，并明确规定数据何时应该回退，何时不应该回退。&lt;/p>
&lt;p>下面的语句来标识事务的开始：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">START&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TRANSACTION&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">BEGIN&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>BEGIN&lt;/code> 和 &lt;code>START TRANSACTION&lt;/code> 差不多，不过 &lt;strong>&lt;code>START TRANSACTION&lt;/code> 语句后边可以跟随几个修饰符，就是它们几个，&lt;code>START TRANSACTION READ ONLY;&lt;/code>，&lt;code>START TRANSACTION READ ONLY, WITH CONSISTENT SNAPSHOT;&lt;/code>&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;code>READ ONLY&lt;/code>：标识当前事务是一个只读事务，也就是属于该事务的数据库操作只能读取数据，而不能修改数据。&lt;/li>
&lt;li>&lt;code>READ WRITE&lt;/code>：标识当前事务是一个读写事务，也就是属于该事务的数据库操作既可以读取数据，也可以修改数据。&lt;/li>
&lt;li>&lt;code>WITH CONSISTENT SNAPSHOT&lt;/code>：启动一致性读。&lt;/li>
&lt;/ul>
&lt;h4>ROLLBACK&lt;span class="hx-absolute -hx-mt-20" id="rollback">&lt;/span>
&lt;a href="#rollback" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;code>ROLLBACK&lt;/code> 命令用来回退（撤销）MySQL 语句：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ordertotals&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">start&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">transaction&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">delete&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ordertotals&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ordertotals&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">rollback&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ordertotals&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>先执行一条 &lt;code>SELECT&lt;/code> 以显示该表不为空。然后开始一个事务处理，用一条 &lt;code>DELETE&lt;/code> 语句删除 &lt;code>ordertotals&lt;/code> 中的所有行。另一条 &lt;code>SELECT&lt;/code> 语句验证 &lt;code>ordertotals&lt;/code> 确实为空。这时用一条 &lt;code>ROLLBACK&lt;/code> 语句回退 &lt;code>START TRANSACTION&lt;/code> 之后的所有语句，最后一条 &lt;code>SELECT&lt;/code> 语句显示该表不为空。&lt;/p>
&lt;p>&lt;strong>&lt;code>ROLLBACK&lt;/code> 只能在一个事务处理内使用（在执行一条 &lt;code>START TRANSACTION&lt;/code> 命令之后）&lt;/strong>。&lt;/p>
&lt;h5>哪些语句不可以回退&lt;span class="hx-absolute -hx-mt-20" id="哪些语句不可以回退">&lt;/span>
&lt;a href="#%e5%93%aa%e4%ba%9b%e8%af%ad%e5%8f%a5%e4%b8%8d%e5%8f%af%e4%bb%a5%e5%9b%9e%e9%80%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>&lt;code>CREATE&lt;/code> 或 &lt;code>DROP&lt;/code> 操作不能回退。事务处理块中可以使用这两条语句，但如果你执行回退，它们不会被撤销。&lt;/p>
&lt;h4>COMMIT&lt;span class="hx-absolute -hx-mt-20" id="commit">&lt;/span>
&lt;a href="#commit" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;strong>在事务处理块中，提交不会隐式地进行&lt;/strong>。需要使用 &lt;code>COMMIT&lt;/code> 语句显示提交：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">start&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">transaction&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">delete&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">orderitems&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">order_num&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">20005&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">delete&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">orders&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">order_num&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">20005&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">commit&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>当 &lt;code>COMMIT&lt;/code> 或 &lt;code>ROLLBACK&lt;/code> 语句执行后，事务会自动关闭（将来的更改会隐式提交）。&lt;/p>
&lt;/blockquote>
&lt;h4>保留点&lt;span class="hx-absolute -hx-mt-20" id="保留点">&lt;/span>
&lt;a href="#%e4%bf%9d%e7%95%99%e7%82%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>简单的 &lt;code>ROLLBACK&lt;/code> 和 &lt;code>COMMIT&lt;/code> 语句就可以写入或撤销整个事务处理。复杂的事务处理可能需要部分提交或回退。&lt;/p>
&lt;p>为了支持回退部分事务处理，必须能在事务处理块中合适的位置放置占位符。这样，如果需要回退，可以回退到某个占位符。这些占位符称为&lt;strong>保留点&lt;/strong>。&lt;/p>
&lt;p>创建占位符，可使用 &lt;code>SAVEPOINT&lt;/code> 语句：&lt;code>SAVEPOINT delete1;&lt;/code>。每个保留点都取标识它的唯一名字，以便在回退时，MySQL 知道要回退到何处。&lt;/p>
&lt;p>回退到本例给出的保留点，可执行：&lt;code>ROLLBACK TO delete1;&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>保留点在事务处理完成（执行一条 &lt;code>ROLLBACK&lt;/code> 或 &lt;code>COMMIT&lt;/code>）后自动释放。&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SELECT * FROM account&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+--------+---------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> id &lt;span class="p">|&lt;/span> name &lt;span class="p">|&lt;/span> balance &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+--------+---------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> 狗哥 &lt;span class="p">|&lt;/span> &lt;span class="m">11&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> 猫爷 &lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+--------+---------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">2&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; BEGIN&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; UPDATE account SET &lt;span class="nv">balance&lt;/span> &lt;span class="o">=&lt;/span> balance - &lt;span class="m">10&lt;/span> WHERE &lt;span class="nv">id&lt;/span> &lt;span class="o">=&lt;/span> 1&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">1&lt;/span> row affected &lt;span class="o">(&lt;/span>0.01 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Rows matched: &lt;span class="m">1&lt;/span> Changed: &lt;span class="m">1&lt;/span> Warnings: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SAVEPOINT s1&lt;span class="p">;&lt;/span> &lt;span class="c1"># 一个保存点&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SELECT * FROM account&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+--------+---------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> id &lt;span class="p">|&lt;/span> name &lt;span class="p">|&lt;/span> balance &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+--------+---------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> 狗哥 &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> 猫爷 &lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+--------+---------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">2&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; UPDATE account SET &lt;span class="nv">balance&lt;/span> &lt;span class="o">=&lt;/span> balance + &lt;span class="m">1&lt;/span> WHERE &lt;span class="nv">id&lt;/span> &lt;span class="o">=&lt;/span> 2&lt;span class="p">;&lt;/span> &lt;span class="c1"># 更新错了&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">1&lt;/span> row affected &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Rows matched: &lt;span class="m">1&lt;/span> Changed: &lt;span class="m">1&lt;/span> Warnings: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; ROLLBACK TO s1&lt;span class="p">;&lt;/span> &lt;span class="c1"># 回滚到保存点 s1 处&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SELECT * FROM account&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+--------+---------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> id &lt;span class="p">|&lt;/span> name &lt;span class="p">|&lt;/span> balance &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+--------+---------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> 狗哥 &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> 猫爷 &lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+--------+---------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">2&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>自动提交&lt;span class="hx-absolute -hx-mt-20" id="自动提交">&lt;/span>
&lt;a href="#%e8%87%aa%e5%8a%a8%e6%8f%90%e4%ba%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>MySQL 中有一个系统变量 &lt;code>autocommit&lt;/code>：&lt;/p>
&lt;p>默认情况下，如果不显式的使用 &lt;code>START TRANSACTION&lt;/code> 或者 &lt;code>BEGIN&lt;/code> 语句开启一个事务，那么每一条语句都算是一个独立的事务，这种特性称之为事务的&lt;strong>自动提交&lt;/strong>。&lt;/p>
&lt;p>如果想关闭这种自动提交的功能，可以使用下边两种方法：&lt;/p>
&lt;ul>
&lt;li>显式的的使用 &lt;code>START TRANSACTION&lt;/code> 或者 &lt;code>BEGIN&lt;/code> 语句开启一个事务。&lt;/li>
&lt;/ul>
&lt;p>这样在本次事务提交或者回滚前会暂时关闭掉自动提交的功能。&lt;/p>
&lt;p>把系统变量 &lt;code>autocommit&lt;/code> 的值设置为 &lt;code>OFF&lt;/code>，就像这样：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">autocommit&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">OFF&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>这样的话，写入的多条语句就算是属于同一个事务了，直到显式的写出 &lt;code>COMMIT&lt;/code> 语句来把这个事务提交掉，或者显式的写出 &lt;code>ROLLBACK&lt;/code> 语句来把这个事务回滚掉。&lt;/p>
&lt;h2>隐式提交&lt;span class="hx-absolute -hx-mt-20" id="隐式提交">&lt;/span>
&lt;a href="#%e9%9a%90%e5%bc%8f%e6%8f%90%e4%ba%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>当使用 &lt;code>START TRANSACTION&lt;/code> 或者 &lt;code>BEGIN&lt;/code> 语句开启了一个事务，或者把系统变量 &lt;code>autocommit&lt;/code> 的值设置为 &lt;code>OFF&lt;/code> 时，事务就不会进行自动提交，但是如果输入了某些语句之后就会悄悄的提交掉，就像输入了 &lt;code>COMMIT&lt;/code> 语句了一样，这种因为某些特殊的语句而导致事务提交的情况称为&lt;strong>隐式提交&lt;/strong>。&lt;/p>
&lt;p>隐式提交的语句包括：&lt;/p>
&lt;ul>
&lt;li>定义或修改数据库对象的数据定义语言（Data definition language，缩写为：DDL）：&lt;/li>
&lt;/ul>
&lt;p>所谓的数据库对象，指的就是数据库、表、视图、存储过程等等这些东西。当使用 &lt;code>CREATE、ALTER、DROP&lt;/code> 等语句去修改这些所谓的数据库对象时，就会隐式的提交前边语句所属于的事务。&lt;/p>
&lt;ul>
&lt;li>隐式使用或修改 &lt;code>mysql&lt;/code> 数据库中的表：&lt;/li>
&lt;/ul>
&lt;p>当使用 &lt;code>ALTER USER&lt;/code>、&lt;code>CREATE USER&lt;/code>、&lt;code>DROP USER&lt;/code>、&lt;code>GRANT&lt;/code>、&lt;code>RENAME USER&lt;/code>、&lt;code>REVOKE&lt;/code>、&lt;code>SET PASSWORD&lt;/code> 等语句时也会隐式的提交前边语句所属于的事务。&lt;/p>
&lt;ul>
&lt;li>事务控制或关于锁定的语句：&lt;/li>
&lt;/ul>
&lt;p>当在一个事务还没提交或者回滚时就又使用 &lt;code>START TRANSACTION&lt;/code> 或者 &lt;code>BEGIN&lt;/code> 语句开启了另一个事务时，会隐式的提交上一个事务。&lt;/p>
&lt;p>或者当前的 &lt;code>autocommit&lt;/code> 系统变量的值为 &lt;code>OFF&lt;/code>，我们手动把它调为 &lt;code>ON&lt;/code> 时，也会隐式的提交前边语句所属的事务。&lt;/p>
&lt;ul>
&lt;li>加载数据的语句&lt;/li>
&lt;/ul>
&lt;p>比如使用 &lt;code>LOAD DATA&lt;/code> 语句来批量往数据库中导入数据时，也会隐式的提交前边语句所属的事务。&lt;/p>
&lt;ul>
&lt;li>关于 MySQL 复制的一些语句&lt;/li>
&lt;/ul>
&lt;p>使用 &lt;code>START SLAVE&lt;/code>、&lt;code>STOP SLAVE&lt;/code>、&lt;code>RESET SLAVE&lt;/code>、&lt;code>CHANGE MASTER TO&lt;/code> 等语句时也会隐式的提交前边语句所属的事务。&lt;/p>
&lt;ul>
&lt;li>其它的一些语句&lt;/li>
&lt;/ul>
&lt;p>使用 &lt;code>ANALYZE TABLE&lt;/code>、&lt;code>CACHE INDEX&lt;/code>、&lt;code>CHECK TABLE&lt;/code>、&lt;code>FLUSH&lt;/code>、&lt;code>LOAD INDEX INTO CACHE&lt;/code>、&lt;code>OPTIMIZE TABLE&lt;/code>、&lt;code>REPAIR TABLE&lt;/code>、&lt;code>RESET&lt;/code> 等语句也会隐式的提交前边语句所属的事务。&lt;/p></description></item><item><title>事务的隔离级别</title><link>https://shipengqi.github.io/db-learn/docs/mysql/advance/05_isolation-level/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/db-learn/docs/mysql/advance/05_isolation-level/</guid><description>
&lt;h2>事务并发执行遇到的问题&lt;span class="hx-absolute -hx-mt-20" id="事务并发执行遇到的问题">&lt;/span>
&lt;a href="#%e4%ba%8b%e5%8a%a1%e5%b9%b6%e5%8f%91%e6%89%a7%e8%a1%8c%e9%81%87%e5%88%b0%e7%9a%84%e9%97%ae%e9%a2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>当数据库上多个事务并发执行的时候，就可能出现&lt;strong>脏写&lt;/strong>（Dirty Write）、&lt;strong>脏读&lt;/strong>（Dirty Read）、&lt;strong>不可重复读&lt;/strong>（Non-Repeatable Read）、&lt;strong>幻读&lt;/strong>（Phantom Read）的问题。&lt;/p>
&lt;p>问题按照严重性来排序：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>脏写 &amp;gt; 脏读 &amp;gt; 不可重复读 &amp;gt; 幻读&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>脏写&lt;span class="hx-absolute -hx-mt-20" id="脏写">&lt;/span>
&lt;a href="#%e8%84%8f%e5%86%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&amp;ldquo;脏写&amp;quot;是指，&lt;strong>一个事务修改了另一个未提交事务修改过的数据&lt;/strong>。&lt;/p>
&lt;h3>脏读&lt;span class="hx-absolute -hx-mt-20" id="脏读">&lt;/span>
&lt;a href="#%e8%84%8f%e8%af%bb" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&amp;ldquo;脏读&amp;quot;是指，&lt;strong>一个事务读到了另一个未提交事务修改过的数据&lt;/strong>。&lt;/p>
&lt;h3>不可重复读&lt;span class="hx-absolute -hx-mt-20" id="不可重复读">&lt;/span>
&lt;a href="#%e4%b8%8d%e5%8f%af%e9%87%8d%e5%a4%8d%e8%af%bb" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>如果一个事务能读到另一个已经提交的事务修改过的数据，并且其他事务每对该数据进行一次修改并提交后，该事务都能查询得到最新值，那就意味着发生了不可重复读&lt;/strong>。&lt;/p>
&lt;h3>幻读&lt;span class="hx-absolute -hx-mt-20" id="幻读">&lt;/span>
&lt;a href="#%e5%b9%bb%e8%af%bb" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>如果一个事务先根据某些条件查询出一些记录，之后另一个事务又向表中插入了符合这些条件的记录，原先的事务再次按照该条件查询时，能把另一个事务插入的记录也读出来，那就意味着发生了幻读&lt;/strong>。&lt;/p>
&lt;blockquote>
&lt;p>不可重复读的重点是&lt;strong>修改&lt;/strong>，幻读的重点在于&lt;strong>新增&lt;/strong>或者&lt;strong>删除&lt;/strong>。&lt;/p>
&lt;/blockquote>
&lt;h2>四种隔离级别&lt;span class="hx-absolute -hx-mt-20" id="四种隔离级别">&lt;/span>
&lt;a href="#%e5%9b%9b%e7%a7%8d%e9%9a%94%e7%a6%bb%e7%ba%a7%e5%88%ab" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>为了解决事务并发执行遇到的问题，就有了&lt;strong>隔离级别&lt;/strong>的概念。SQL 标准中设立了 4 个隔离级别：&lt;/p>
&lt;ul>
&lt;li>&lt;code>READ UNCOMMITTED&lt;/code>：&lt;strong>读未提交&lt;/strong>是指，一个事务还没提交时，它做的变更就能被别的事务看到。可能发生脏读、不可重复读和幻读问题。&lt;/li>
&lt;li>&lt;code>READ COMMITTED&lt;/code>：&lt;strong>读已提交&lt;/strong>是指，一个事务提交之后，它做的变更才会被其他事务看到。可能发生不可重复读和幻读问题，但是不可以发生脏读问题。&lt;/li>
&lt;li>&lt;code>REPEATABLE READ&lt;/code>：&lt;strong>可重复读&lt;/strong>是指，一个事务执行过程中看到的数据，总是跟这个事务在启动时看到的数据是一致的。可能发生幻读问题，但是不可以发生脏读和不可重复读的问题。&lt;/li>
&lt;li>&lt;code>SERIALIZABLE&lt;/code>：&lt;strong>可串行化&lt;/strong>是指，对于同一行记录，“写”会加“写锁”，“读”会加“读锁”。当出现读写锁冲突的时候，后访问的事务必须等前一个事务执行完成，才能继续执行。&lt;/li>
&lt;/ul>
&lt;p>MySQL 的默认隔离级别为 &lt;code>REPEATABLE READ&lt;/code>。&lt;/p>
&lt;p>&lt;strong>隔离级别越高事务隔离性越好，但性能就越低；隔离级别越低，越严重的问题就越可能发生&lt;/strong>：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>事务隔离级别&lt;/th>
&lt;th>脏读&lt;/th>
&lt;th>不可重复读&lt;/th>
&lt;th>幻读&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>读未提交 (read uncommitted)&lt;/td>
&lt;td>可能&lt;/td>
&lt;td>可能&lt;/td>
&lt;td>可能&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>读已提交 (read committed)&lt;/td>
&lt;td>不可能&lt;/td>
&lt;td>可能&lt;/td>
&lt;td>可能&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>可重复读 (repeatable read)&lt;/td>
&lt;td>不可能&lt;/td>
&lt;td>不可能&lt;/td>
&lt;td>可能&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>串行化 (serializable)&lt;/td>
&lt;td>不可能&lt;/td>
&lt;td>不可能&lt;/td>
&lt;td>不可能&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>MySQL 在 &lt;code>REPEATABLE READ&lt;/code> 隔离级别下，是可以禁止幻读问题的发生的（需要配合间隙锁）&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>MVCC&lt;/strong> (多版本并发控制)：处理快照读。&lt;/li>
&lt;li>&lt;strong>间隙锁&lt;/strong> (Gap Lock)：处理当前读。&lt;/li>
&lt;/ul>
&lt;h3>设置事务的隔离级别&lt;span class="hx-absolute -hx-mt-20" id="设置事务的隔离级别">&lt;/span>
&lt;a href="#%e8%ae%be%e7%bd%ae%e4%ba%8b%e5%8a%a1%e7%9a%84%e9%9a%94%e7%a6%bb%e7%ba%a7%e5%88%ab" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="k">GLOBAL&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="k">SESSION&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TRANSACTION&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ISOLATION&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">LEVEL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">level&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>level&lt;/code> 可选值有 4 个：&lt;code>REPEATABLE READ&lt;/code>，&lt;code>READ COMMITTED&lt;/code>，&lt;code>READ UNCOMMITTED&lt;/code>，&lt;code>SERIALIZABLE&lt;/code>。&lt;/p>
&lt;p>启动参数 &lt;code>transaction-isolation&lt;/code> 可以设置事务的默认隔离级别。&lt;/p>
&lt;h2>MVCC&lt;span class="hx-absolute -hx-mt-20" id="mvcc">&lt;/span>
&lt;a href="#mvcc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>MVCC（Multi-Version Concurrency Control）&lt;strong>多版本并发控制&lt;/strong>，是一种并发控制的方法，一般在数据库管理系统中，实现对数据库的并发访问。&lt;/p>
&lt;p>InnoDB 存储引擎实现了 MVCC，用来解决&lt;strong>不可重复读&lt;/strong>和&lt;strong>幻读&lt;/strong>的问题。&lt;/p>
&lt;h3>版本链&lt;span class="hx-absolute -hx-mt-20" id="版本链">&lt;/span>
&lt;a href="#%e7%89%88%e6%9c%ac%e9%93%be" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>InnoDB 存储引擎它的聚簇索引记录中都包含两个必要的隐藏列：&lt;/p>
&lt;ul>
&lt;li>&lt;code>trx_id&lt;/code>：每次一个事务对某条聚簇索引记录进行改动时，都会把该事务的&lt;strong>事务 id&lt;/strong> 赋值给 &lt;code>trx_id&lt;/code> 隐藏列。&lt;/li>
&lt;li>&lt;code>roll_pointer&lt;/code>：每次对某条聚簇索引记录进行改动时，都会把旧的版本写入到 undo log 中，然后这个隐藏列就相当于一个指针，可以通过它来找到该记录修改前的信息。&lt;/li>
&lt;/ul>
&lt;p>假设插入一条记录，事务 id 为 80，之后另外两个事务 id 分别为 100、200 的事务对这条记录进行更新：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>顺序&lt;/th>
&lt;th>trx 100&lt;/th>
&lt;th>trx 200&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>&lt;code>begin;&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>begin;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&lt;/td>
&lt;td>&lt;code>update hero set name = '关羽' where number = 1;&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&lt;/td>
&lt;td>&lt;code>update hero set name = '张飞' where number = 1;&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>5&lt;/td>
&lt;td>&lt;code>commit;&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>6&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>update hero set name = '赵云' where number = 1;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>7&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>update hero set name = '诸葛' where number = 1;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>8&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;code>commit;&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>每次对记录进行改动，都会记录一条 undo log，每条 undo log 也都有一个 &lt;code>roll_pointer&lt;/code> 属性，可以将这些 undo log 都连起来，串成一个链表。对该记录每次更新后，都会将旧值放到一条 undo log 中，就算是该记录的一个旧版本，随着更新次数的增多，所有的版本都会被 &lt;code>roll_pointer&lt;/code> 属性连接成一个链表，这个链表称之为&lt;strong>版本链&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>版本链的头节点就是当前记录最新的值&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/versions-link.png" alt="versions-link" loading="lazy" />&lt;/p>
&lt;h3>ReadView&lt;span class="hx-absolute -hx-mt-20" id="readview">&lt;/span>
&lt;a href="#readview" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>对于使用 &lt;code>READ UNCOMMITTED&lt;/code> 隔离级别的事务来说，由于可以读到未提交事务修改过的记录，所以直接读取记录的最新版本就好了。&lt;/p>
&lt;p>对于使用 &lt;code>SERIALIZABLE&lt;/code> 隔离级别的事务来说，使用&lt;strong>加锁&lt;/strong>的方式来访问记录。&lt;/p>
&lt;p>对于使用 &lt;code>READ COMMITTED&lt;/code> 和 &lt;code>REPEATABLE READ&lt;/code> 隔离级别的事务来说，都必须保证读到已经提交了的事务修改过的记录，也就是说假如另一个事务已经修改了记录但是尚未提交，是不能直接读取最新版本的记录的，核心问题就是：需要&lt;strong>判断版本链中的哪个版本对于当前事务可见的&lt;/strong>。&lt;/p>
&lt;p>ReadView 中主要包含 4 个比较重要的内容：&lt;/p>
&lt;ul>
&lt;li>&lt;code>m_ids&lt;/code>：表示在生成 ReadView 时当前系统中&lt;strong>活跃的读写事务的事务 id 列表&lt;/strong>。&lt;/li>
&lt;li>&lt;code>min_trx_id&lt;/code>：表示在生成 ReadView 时当前系统中&lt;strong>活跃的读写事务中最小的事务 id&lt;/strong>，也就是 &lt;code>m_ids&lt;/code> 中的最小值。&lt;/li>
&lt;li>&lt;code>max_trx_id&lt;/code>：表示生成 ReadView 时系统中应该分配给&lt;strong>下一个事务的 id 值&lt;/strong>。&lt;/li>
&lt;li>&lt;code>creator_trx_id&lt;/code>：表示生成该 ReadView 的事务的事务 id。&lt;/li>
&lt;/ul>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">事务执行过程中，只有在第一次真正修改记录时（执行 &lt;code>INSERT&lt;/code>、&lt;code>DELETE&lt;/code>、&lt;code>UPDATE&lt;/code> 这些语句或加排它锁操作比如 &lt;code>select...for update&lt;/code> 语句时），才会被分配一个单独的事务 id，否则在一个只读事务中的事务 id 值都默认为 0。&lt;/div>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>如果被访问版本的 &lt;code>trx_id&lt;/code> 与 ReadView 中的 &lt;code>creator_trx_id&lt;/code> 相同，意味着当前事务在&lt;strong>访问它自己修改过的记录&lt;/strong>，所以该版本可以被当前事务访问。&lt;/li>
&lt;li>如果被访问版本的 &lt;code>trx_id&lt;/code> 小于 ReadView 中的 &lt;code>min_trx_id&lt;/code>，表明生成该版本的事务&lt;strong>在当前事务生成 ReadView 前已经提交&lt;/strong>，所以该版本可以被当前事务访问。&lt;/li>
&lt;li>如果被访问版本的 &lt;code>trx_id&lt;/code> 大于或等于 ReadView 中的 &lt;code>max_trx_id&lt;/code> 值，表明生成该版本的事务&lt;strong>在当前事务生成 ReadView 后才开启&lt;/strong>，所以该版本&lt;strong>不可以被当前事务访问&lt;/strong>。&lt;/li>
&lt;li>如果被访问版本的 &lt;code>trx_id&lt;/code> 在 ReadView 的 &lt;code>min_trx_id&lt;/code> 和 &lt;code>max_trx_id&lt;/code> 之间，那就需要判断一下 &lt;code>trx_id&lt;/code> 属性值是不是在 &lt;code>m_ids&lt;/code> 列表中，&lt;strong>如果在，说明创建 ReadView 时生成该版本的事务还是活跃的，该版本不可以被访问；如果不在，说明创建 ReadView 时生成该版本的事务已经被提交，该版本可以被访问&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>如果某个版本的数据对当前事务不可见的话，那就顺着版本链找到下一个版本的数据，继续按照上边的步骤判断可见性，依此类推，直到版本链中的最后一个版本&lt;/strong>。如果最后一个版本也不可见的话，那么就意味着该条记录对该事务完全不可见，查询结果就不包含该记录。&lt;/p>
&lt;p>&lt;code>READ COMMITTED&lt;/code> 和 &lt;code>REPEATABLE READ&lt;/code> 隔离级别的的一个非常大的区别就是它们&lt;strong>生成 ReadView 的时机不同&lt;/strong>。&lt;/p>
&lt;ul>
&lt;li>&lt;code>READ COMMITTD&lt;/code> 在&lt;strong>每一次&lt;/strong>进行普通 &lt;code>SELECT&lt;/code> 操作前都会生成一个 ReadView。&lt;/li>
&lt;li>&lt;code>REPEATABLE READ&lt;/code> 只在&lt;strong>第一次&lt;/strong>进行普通 &lt;code>SELECT&lt;/code> 操作前生成一个 ReadView，之后的查询操作都重复使用这个 ReadView 就好了。&lt;/li>
&lt;/ul>
&lt;h2>大事务的影响&lt;span class="hx-absolute -hx-mt-20" id="大事务的影响">&lt;/span>
&lt;a href="#%e5%a4%a7%e4%ba%8b%e5%8a%a1%e7%9a%84%e5%bd%b1%e5%93%8d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>并发情况下，数据库连接池容易被撑爆。&lt;/li>
&lt;li>定太多的数据，造成大量的阻塞和锁超时。&lt;/li>
&lt;li>执行时间长，容易造成&lt;strong>主从延迟&lt;/strong>。&lt;/li>
&lt;li>回滚所需要的时间比较长，如果大事务中有大量的 &lt;code>update&lt;/code> 操作，回滚时也需要逐个去找 undo log 进行回滚。&lt;/li>
&lt;li>undo log 膨胀，事务未提交，undo log 会一直存在。&lt;/li>
&lt;li>&lt;strong>容易导致死锁&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;h2>事务优化实践原则&lt;span class="hx-absolute -hx-mt-20" id="事务优化实践原则">&lt;/span>
&lt;a href="#%e4%ba%8b%e5%8a%a1%e4%bc%98%e5%8c%96%e5%ae%9e%e8%b7%b5%e5%8e%9f%e5%88%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>将查询等数据准备操作放到事务外，对于 RC 隔离级别，可以将查询放到事务之外，对于 RR 隔离级别，将查询放到事务里面，如果放到外面就无法保证 RR。&lt;/li>
&lt;li>事务中避免远程调用，远程调用要设置超时，防止事务等待时间太久。&lt;/li>
&lt;li>事务中避免一次性处理太多数据，可以拆分成多个事务分次处理。&lt;/li>
&lt;li>&lt;strong>更新等涉及加锁的操作&lt;/strong>尽可能放在事务靠后的位置。更新操作应该在插入操作之后，因为更新操作会对已存在的记录加锁，其他事务可能会使用该记录，会造成不必要的等待。而插入操作虽然也会加锁，但是其他事务不会使用该记录，因为还不存在。&lt;/li>
&lt;li>能异步处理的尽量异步处理。&lt;/li>
&lt;li>应用侧（业务代码）保证数据一致性，非事务执行。如果对性能要求非常高，可以考虑不适用事务。&lt;/li>
&lt;/ul>
&lt;h2>事务问题定位&lt;span class="hx-absolute -hx-mt-20" id="事务问题定位">&lt;/span>
&lt;a href="#%e4%ba%8b%e5%8a%a1%e9%97%ae%e9%a2%98%e5%ae%9a%e4%bd%8d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 查询执行时间超过 1 秒的事务
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">information_schema&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">innodb_trx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TIME_TO_SEC&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">timediff&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">trx_started&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 强制结束事务
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">kill&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">线程&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">就是上面语句查出结果里的&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">trx_mysql_thread_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">字段的值&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>查询需不需要加事务&lt;span class="hx-absolute -hx-mt-20" id="查询需不需要加事务">&lt;/span>
&lt;a href="#%e6%9f%a5%e8%af%a2%e9%9c%80%e4%b8%8d%e9%9c%80%e8%a6%81%e5%8a%a0%e4%ba%8b%e5%8a%a1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;strong>对于 RC 隔离级别来说，查询操作是不需要加事务的&lt;/strong>，因为在不管是在事务内还是在事务外查询，没有什么区别，&lt;strong>读到的都是已提交的数据&lt;/strong>。&lt;/p>
&lt;p>对于 RR 隔离级别来说，如果查询操作是不是在事务内执行的话，可能会出现幻读的问题。对于一些生成报表的业务场景来说，需要&lt;strong>保证数据是在同一时间维度&lt;/strong>，那就需要加事务。&lt;/p></description></item><item><title>锁</title><link>https://shipengqi.github.io/db-learn/docs/mysql/advance/06_lock/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/db-learn/docs/mysql/advance/06_lock/</guid><description>
&lt;h2>锁分类&lt;span class="hx-absolute -hx-mt-20" id="锁分类">&lt;/span>
&lt;a href="#%e9%94%81%e5%88%86%e7%b1%bb" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>从性能上分为&lt;strong>乐观锁&lt;/strong>（用版本对比或 CAS 机制）和&lt;strong>悲观锁&lt;/strong>，
&lt;ul>
&lt;li>乐观锁适合读操作较多的场景。&lt;/li>
&lt;li>悲观锁适合写操作较多的场景，如果在写操作较多的场景使用乐观锁会导致大量的重试，长时间占用 CPU，降低性能。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>从对数据操作的粒度分，分为&lt;strong>表锁&lt;/strong>、&lt;strong>页锁&lt;/strong>、&lt;strong>行锁&lt;/strong>。&lt;/li>
&lt;li>从对数据库操作的类型分，分为&lt;strong>读锁&lt;/strong>和&lt;strong>写锁&lt;/strong>(都属于悲观锁)，还有&lt;strong>意向锁&lt;/strong>。
&lt;ul>
&lt;li>读锁（共享锁，S 锁（&lt;strong>S&lt;/strong>hared））：针对同一份数据，多个读操作可以同时进行而不会互相影响，比如：&lt;code>select * from T where id=1 lock in share mode&lt;/code>&lt;/li>
&lt;li>写锁（排它锁，X 锁(e&lt;strong>X&lt;/strong>clusive)）：当前写操作没有完成前，它会阻断其他写锁和读锁，数据修改操作都会加写锁，比如：&lt;code>select * from T where id=1 for update&lt;/code>&lt;/li>
&lt;li>意向锁（Intention Lock）：又称 I 锁，针对&lt;strong>表锁&lt;/strong>，主要是&lt;strong>为了提高加表锁的效率&lt;/strong>，是 MySQL 数据库自己加的。&lt;strong>当有事务给表的数据行加了共享锁或排他锁时，同时也会给表设置一个标识，代表已经有行锁了，其他事务要想对表加表锁时，就不必逐行判断有没有行锁可能跟表锁冲突了，直接读这个标识就可以确定自己该不该加表锁&lt;/strong>。特别是表中的记录很多时，逐行判断加表锁的方式效率很低。而这个标识就是意向锁。
&lt;ul>
&lt;li>意向共享锁，IS 锁（&lt;strong>I&lt;/strong>ntention &lt;strong>S&lt;/strong>hared）：对整个表加共享锁之前，需要先获取到意向共享锁。&lt;/li>
&lt;li>意向排他锁，IX 锁（&lt;strong>I&lt;/strong>ntention &lt;strong>X&lt;/strong>clusive）：对整个表加排他锁之前，需要先获取到意向排他锁。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>表锁&lt;span class="hx-absolute -hx-mt-20" id="表锁">&lt;/span>
&lt;a href="#%e8%a1%a8%e9%94%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>每次操作锁住整张表。&lt;strong>开销小，加锁快&lt;/strong>；不会出现死锁；锁定粒度大，发生锁冲突的概率最高，并发度最低；一般用在整表数据迁移的场景。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="err">‐‐手动增加表锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">lock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">表名称&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">write&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="err">表名称&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">write&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="err">表名称&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">read&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="err">‐‐查看表上加过的锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">show&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">open&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tables&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="err">‐‐删除表锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">unlock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tables&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>页锁&lt;span class="hx-absolute -hx-mt-20" id="页锁">&lt;/span>
&lt;a href="#%e9%a1%b5%e9%94%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>只有 BDB 存储引擎支持页锁，页锁就是在页的粒度上进行锁定，锁定的数据资源比行锁要多，因为一个页中可以有多个行记录。当使用页锁的时候，会出现数据浪费的现象，但这样的浪费最多也就是一个页上的数据行。页锁的开销介于表锁和行锁之间，会出现死锁。锁定粒度介于表锁和行锁之间，并发度一般。&lt;/p>
&lt;h3>行锁&lt;span class="hx-absolute -hx-mt-20" id="行锁">&lt;/span>
&lt;a href="#%e8%a1%8c%e9%94%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>每次操作锁住一行数据。&lt;strong>开销大，加锁慢&lt;/strong>（行锁需要先到表中找到对应的那行记录，所以说开销大；而表锁是直接在整张表上加一个标记）；会出现死锁；&lt;strong>锁定粒度最小&lt;/strong>，发生锁冲突的概率最低，&lt;strong>并发度最高&lt;/strong>。&lt;/p>
&lt;p>InnoDB 相对于 MYISAM 的最大不同有两点：&lt;/p>
&lt;ul>
&lt;li>InnoDB 支持事务&lt;/li>
&lt;li>InnoDB 支持行级锁&lt;/li>
&lt;/ul>
&lt;p>注意，InnoDB 的行锁实际上是针&lt;strong>对索引字段加的锁&lt;/strong>（在索引对应的索引项上做标记），&lt;strong>不是针对整个行记录加的锁&lt;/strong>。并且该索引不能失效（或者不存在索引），否则会从行锁升级为表锁。&lt;strong>不管是一级索引还是二级索引，只要更新时使用了索引，就会对索引字段加锁，否则就会升级为表锁&lt;/strong>。（&lt;strong>RR 级别会升级为表锁&lt;/strong>，RC 级别不会升级为表锁）&lt;/p>
&lt;p>比如在 RR 级别执行如下 SQL：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="err">‐‐&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">字段无索引&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;lilei&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">update&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>由于 &lt;code>name&lt;/code> 无索引，升级为表锁，则&lt;strong>其它 session 对该表任意一行记录做修改，插入，删除的操作都会被阻塞住&lt;/strong>。&lt;/p>
&lt;h4>关于 RR 级别行锁升级为表锁的原因分析&lt;span class="hx-absolute -hx-mt-20" id="关于-rr-级别行锁升级为表锁的原因分析">&lt;/span>
&lt;a href="#%e5%85%b3%e4%ba%8e-rr-%e7%ba%a7%e5%88%ab%e8%a1%8c%e9%94%81%e5%8d%87%e7%ba%a7%e4%b8%ba%e8%a1%a8%e9%94%81%e7%9a%84%e5%8e%9f%e5%9b%a0%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>因为在 RR 隔离级别下，需要解决幻读问题，当&lt;strong>字段没有索引时，MySQL 无法有效使用间隙锁精确锁定范围&lt;/strong>，只能退而求其次使用表锁来&lt;strong>保证隔离性&lt;/strong>。所以在遍历扫描聚簇索引记录时，为了防止扫描过的索引间隙被其它事务插入记录（幻读问题），从而导致数据不一致，MySQL 的解决方案就是把所有扫描过的索引记录和间隙都锁上，这里要&lt;strong>注意，并不是直接将整张表加表锁，因为不一定能加上表锁，可能会有其它事务锁住了表里的其它行记录&lt;/strong>。&lt;/p>
&lt;p>RC 读已提交级别不会升级为表锁，因为 RC 级别下，&lt;strong>不需要解决幻读问题&lt;/strong>，所以不需要加锁。&lt;/p>
&lt;h3>间隙锁（Gap Lock）&lt;span class="hx-absolute -hx-mt-20" id="间隙锁gap-lock">&lt;/span>
&lt;a href="#%e9%97%b4%e9%9a%99%e9%94%81gap-lock" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>间隙锁，锁的就是&lt;strong>两个值之间的空隙&lt;/strong>，间隙锁是在&lt;strong>可重复读隔离级别下才会生效&lt;/strong>。MySQL 默认隔离级别是 RR，有幻读问题，&lt;strong>间隙锁是可以解决幻读问题的&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/gap-lock.png" alt="gap-lock" loading="lazy" />&lt;/p>
&lt;p>上面的表中，间隙就有 id 为 &lt;code>(1,4)&lt;/code>，&lt;code>(4,112)&lt;/code>，&lt;code>(115,正无穷)&lt;/code> 这三个区间，执行 sql：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">update&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>其他 Session 没法在这个 &lt;code>(4,112)&lt;/code> 这个间隙范围里插入任何数据。&lt;/p>
&lt;p>也就是说，&lt;strong>只要在间隙范围内锁了一条不存在的记录，整个间隙范围都会被锁住&lt;/strong>，这样就能防止其它 Session 在这个间隙范围内插入数据，就解决了可重复读隔离级别的幻读问题。&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/gap-lock1.png" alt="gap-lock1" loading="lazy" />&lt;/p>
&lt;h4>为什么说间隙锁可以解决幻读问题&lt;span class="hx-absolute -hx-mt-20" id="为什么说间隙锁可以解决幻读问题">&lt;/span>
&lt;a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e8%af%b4%e9%97%b4%e9%9a%99%e9%94%81%e5%8f%af%e4%bb%a5%e8%a7%a3%e5%86%b3%e5%b9%bb%e8%af%bb%e9%97%ae%e9%a2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>例如还是下面这些数据：&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/gap-lock.png" alt="gap-lock" loading="lazy" />&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tx_isolation&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;repeatable‐read&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 事务1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">START&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TRANSACTION&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 快照读，看到 6 条记录
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 此时事务 2 插入一条 name=小郭 的新记录并提交
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">insert&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">into&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">values&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;小郭&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">12256487569&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;洛阳&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 仍然看到 6 条记录（快照读）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">update&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;信阳&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 当前读
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 看到 7 条记录
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">COMMIT&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>可以看到，事务 1 最后看到了 7 条记录。还是有幻读问题的。&lt;/p>
&lt;p>但是如果在 &lt;code>(4,112)&lt;/code> 这个区间加一把 &lt;strong>间隙锁&lt;/strong>，这个间隙就不会允许其他事务再插入数据，就不会出现幻读问题了。&lt;/p>
&lt;p>&lt;strong>对于删除的行为&lt;/strong>：&lt;/p>
&lt;p>事务 A 和事务 B 一起开启：&lt;/p>
&lt;ul>
&lt;li>如果事务 A 删除了一条记录 1，并已提交。&lt;/li>
&lt;li>事务 B 去更新记录 1，事务 B 发现记录已经被删除，&lt;strong>更新无效，不会报错&lt;/strong>，只是匹配不到记录，影响行数为 0。&lt;/li>
&lt;li>如果事务 A 删除了一条记录 1，还未提交，那事务 B 会等待锁。&lt;/li>
&lt;/ul>
&lt;h3>临键锁（Next-Key Lock）&lt;span class="hx-absolute -hx-mt-20" id="临键锁next-key-lock">&lt;/span>
&lt;a href="#%e4%b8%b4%e9%94%ae%e9%94%81next-key-lock" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>临键锁 = 间隙锁 + 行锁&lt;/strong>，既能锁住某条记录，又能阻止别的事务将新记录插入被锁记录前边的间隙。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">122&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">update&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>(4,112)&lt;/code> 这个间隙和 &lt;code>112&lt;/code> 这条记录都会被锁住，相当于 &lt;code>(4,112]&lt;/code>。&lt;/p>
&lt;h3>锁定读&lt;span class="hx-absolute -hx-mt-20" id="锁定读">&lt;/span>
&lt;a href="#%e9%94%81%e5%ae%9a%e8%af%bb" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>采用加锁方式解决脏读、不可重复读、幻读这些问题时，读取一条记录时需要获取一下该记录的 S 锁，其实这是不严谨的，有时候想在读取记录时就获取记录的 X 锁，来禁止别的事务读写该记录，MySQL 提供了两种比较特殊的 &lt;code>SELECT&lt;/code> 语句格式：&lt;/p>
&lt;ul>
&lt;li>对读取的记录加 S 锁：&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">LOCK&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">IN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SHARE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">MODE&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>对读取的记录加 X 锁：&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOR&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">UPDATE&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>也就是在普通的 &lt;code>SELECT&lt;/code> 语句后边加 &lt;code>FOR UPDATE&lt;/code>，如果当前事务执行了该语句，那么它会为读取到的记录加 X 锁，这样既不允许别的事务获取这些记录的S锁（比方说别的事务使用 &lt;code>SELECT ... LOCK IN SHARE MODE&lt;/code> 语句来读取这些记录），也不允许获取这些记录的 X 锁。&lt;/p>
&lt;h3>MyISAM 和 InnoDB 的锁&lt;span class="hx-absolute -hx-mt-20" id="myisam-和-innodb-的锁">&lt;/span>
&lt;a href="#myisam-%e5%92%8c-innodb-%e7%9a%84%e9%94%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>MyISAM 在执行查询语句 &lt;code>SELECT&lt;/code> 前，会自动给涉及的所有表加读锁，在执行 &lt;code>update&lt;/code>、&lt;code>insert&lt;/code>、&lt;code>delete&lt;/code> 操作会自动给涉及的表加写锁。MyISAM 没有事务，就算是加的表锁，也只是执行一条 SQL 语句时才会生效，执行完 SQL 语句后，会自动释放锁。&lt;/p>
&lt;p>InnoDB 在执行查询语句 &lt;code>SELECT&lt;/code> 时(非串行隔离级别)，不会加锁。但是 &lt;code>update&lt;/code>、&lt;code>insert&lt;/code>、&lt;code>delete&lt;/code> 操作会加行锁。&lt;/p>
&lt;p>读锁会阻塞写，但是不会阻塞读。而写锁则会把读和写都阻塞。&lt;/p>
&lt;p>InnoDB 存储引擎由于实现了行级锁定，虽然在锁定机制的实现方面所带来的性能损耗可能比表级锁定会要更高一下，但是在整体并发处理能力方面要远远优于MYISAM的表级锁定的。当系统并发量高的时候，InnoDB 的整体性能和 MYISAM 相比就会有比较明显的优势了。&lt;/p>
&lt;h2>锁等待分析&lt;span class="hx-absolute -hx-mt-20" id="锁等待分析">&lt;/span>
&lt;a href="#%e9%94%81%e7%ad%89%e5%be%85%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>通过检查 &lt;code>innodb_row_lock&lt;/code> 状态变量来分析系统上的行锁的争夺情况&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">show&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">status&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">like&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;innodb_row_lock%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>Innodb_row_lock_current_waits&lt;/code>：当前正在等待锁定的数量。&lt;/li>
&lt;li>&lt;code>Innodb_row_lock_time&lt;/code>：从系统启动到现在锁定总时间长度。&lt;/li>
&lt;li>&lt;code>Innodb_row_lock_time_avg&lt;/code>：每次等待所花平均时间。&lt;/li>
&lt;li>&lt;code>Innodb_row_lock_time_max&lt;/code>：从系统启动到现在等待最久的一次所花的时间。&lt;/li>
&lt;li>&lt;code>Innodb_row_lock_waits&lt;/code>：系统启动后到现在总共等待的次数。&lt;/li>
&lt;/ul>
&lt;p>在 MySQL 8.0，这些统计变量不再更新或直接消失。&lt;/p>
&lt;p>在 MySQL 8.0 之后，可以通过 &lt;code>performance_schema&lt;/code> 数据库的表来查看锁的相关信息。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="err">‐‐&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">查看事务&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">information_schema&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">INNODB_TRX&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="err">‐‐&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">查看锁，&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">之后需要换成表&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">performance_schema&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">data_locks&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">information_schema&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">INNODB_LOCKS&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="err">‐‐&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">查看锁等待，&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">之后需要换成表&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">performance_schema&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">data_lock_waits&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">information_schema&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">INNODB_LOCK_WAITS&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="err">‐‐&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">释放锁，&lt;/span>&lt;span class="n">trx_mysql_thread_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">可以从&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">INNODB_TRX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">表里查看到&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">kill&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">trx_mysql_thread_id&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>死锁分析&lt;span class="hx-absolute -hx-mt-20" id="死锁分析">&lt;/span>
&lt;a href="#%e6%ad%bb%e9%94%81%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="err">‐‐&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">查看死锁，&lt;/span>&lt;span class="n">status&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">字段中的内容可以帮助进行死锁分析&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">show&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">engine&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">innodb&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">status&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>示例：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 插入测试数据
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hero&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">country&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">varchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Engine&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">InnoDB&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">utf8&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hero&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">VALUES&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;l刘备&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;蜀&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;z诸葛亮&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;蜀&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;c曹操&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;魏&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;x荀彧&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;魏&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;s孙权&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;吴&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 8.0 之后需要换成变量 transaction_isolation
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tx_isolation&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;repeatable‐read&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- session 1 执行：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">begin&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hero&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">update&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- session 2 执行：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">begin&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hero&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">update&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- session 1 执行：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hero&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">update&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- session 2 执行：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hero&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">update&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 查看近期死锁日志信息，根据 DEADLOCK 关键字搜索，分析：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">show&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">engine&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">innodb&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">status&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>大多数情况 MySQL 可以自动检测死锁并回滚产生死锁的那个事务，但是有些情况 MySQL 没法自动检测死锁，这种情况可以通过日志分析找到对应事务线程 id，可以通过 kill 杀掉。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="line">&lt;span class="cl">&lt;span class="n">mysql&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">SHOW&lt;/span> &lt;span class="n">ENGINE&lt;/span> &lt;span class="n">INNODB&lt;/span> &lt;span class="n">STATUS&lt;/span>&lt;span class="o">\&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">LATEST&lt;/span> &lt;span class="n">DETECTED&lt;/span> &lt;span class="n">DEADLOCK&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2025&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">05&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">14&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">53&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">26&lt;/span> &lt;span class="mh">0x2414&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">***&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">TRANSACTION:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">TRANSACTION&lt;/span> &lt;span class="mi">121629&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ACTIVE&lt;/span> &lt;span class="mi">8&lt;/span> &lt;span class="n">sec&lt;/span> &lt;span class="n">starting&lt;/span> &lt;span class="nb">index&lt;/span> &lt;span class="nb">read&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mysql&lt;/span> &lt;span class="n">tables&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="k">use&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">locked&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">LOCK&lt;/span> &lt;span class="n">WAIT&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="n">lock&lt;/span> &lt;span class="n">struct&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">heap&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="mi">1128&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="n">row&lt;/span> &lt;span class="n">lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">MySQL&lt;/span> &lt;span class="n">thread&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="mi">163&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">OS&lt;/span> &lt;span class="n">thread&lt;/span> &lt;span class="n">handle&lt;/span> &lt;span class="mi">7184&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">query&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="mi">332329&lt;/span> &lt;span class="n">localhost&lt;/span> &lt;span class="o">::&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="n">root&lt;/span> &lt;span class="n">statistics&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">select&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="n">hero&lt;/span> &lt;span class="n">where&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">3&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">update&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">***&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">HOLDS&lt;/span> &lt;span class="n">THE&lt;/span> &lt;span class="n">LOCK&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">S&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">RECORD&lt;/span> &lt;span class="n">LOCKS&lt;/span> &lt;span class="n">space&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="mi">26&lt;/span> &lt;span class="n">page&lt;/span> &lt;span class="k">no&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="n">bits&lt;/span> &lt;span class="mi">72&lt;/span> &lt;span class="nb">index&lt;/span> &lt;span class="n">PRIMARY&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">table&lt;/span> &lt;span class="sb">`asdb`&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="sb">`hero`&lt;/span> &lt;span class="n">trx&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="mi">121629&lt;/span> &lt;span class="n">lock_mode&lt;/span> &lt;span class="n">X&lt;/span> &lt;span class="n">locks&lt;/span> &lt;span class="n">rec&lt;/span> &lt;span class="n">but&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">gap&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Record&lt;/span> &lt;span class="n">lock&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">heap&lt;/span> &lt;span class="k">no&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="n">PHYSICAL&lt;/span> &lt;span class="n">RECORD:&lt;/span> &lt;span class="n">n_fields&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">compact&lt;/span> &lt;span class="nb">format&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">info&lt;/span> &lt;span class="n">bits&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="mi">80000001&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="mo">00000001&lt;/span>&lt;span class="n">daf9&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="mi">81000000&lt;/span>&lt;span class="n">a10110&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">3&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="n">ce58898e5a487&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="n">l&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">4&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="n">e89c80&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">***&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">WAITING&lt;/span> &lt;span class="n">FOR&lt;/span> &lt;span class="n">THIS&lt;/span> &lt;span class="n">LOCK&lt;/span> &lt;span class="n">TO&lt;/span> &lt;span class="n">BE&lt;/span> &lt;span class="n">GRANTED:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">RECORD&lt;/span> &lt;span class="n">LOCKS&lt;/span> &lt;span class="n">space&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="mi">26&lt;/span> &lt;span class="n">page&lt;/span> &lt;span class="k">no&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="n">bits&lt;/span> &lt;span class="mi">72&lt;/span> &lt;span class="nb">index&lt;/span> &lt;span class="n">PRIMARY&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">table&lt;/span> &lt;span class="sb">`asdb`&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="sb">`hero`&lt;/span> &lt;span class="n">trx&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="mi">121629&lt;/span> &lt;span class="n">lock_mode&lt;/span> &lt;span class="n">X&lt;/span> &lt;span class="n">locks&lt;/span> &lt;span class="n">rec&lt;/span> &lt;span class="n">but&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">gap&lt;/span> &lt;span class="n">waiting&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Record&lt;/span> &lt;span class="n">lock&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">heap&lt;/span> &lt;span class="k">no&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="n">PHYSICAL&lt;/span> &lt;span class="n">RECORD:&lt;/span> &lt;span class="n">n_fields&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">compact&lt;/span> &lt;span class="nb">format&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">info&lt;/span> &lt;span class="n">bits&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="mi">80000003&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="mo">00000001&lt;/span>&lt;span class="n">daf9&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="mi">81000000&lt;/span>&lt;span class="n">a1011d&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">3&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="n">ae8afb8e8919be4baae&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="n">z&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">4&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="n">e89c80&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">***&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">TRANSACTION:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">TRANSACTION&lt;/span> &lt;span class="mi">121630&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ACTIVE&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="n">sec&lt;/span> &lt;span class="n">starting&lt;/span> &lt;span class="nb">index&lt;/span> &lt;span class="nb">read&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mysql&lt;/span> &lt;span class="n">tables&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="k">use&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">locked&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">LOCK&lt;/span> &lt;span class="n">WAIT&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="n">lock&lt;/span> &lt;span class="n">struct&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">heap&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="mi">1128&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="n">row&lt;/span> &lt;span class="n">lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">MySQL&lt;/span> &lt;span class="n">thread&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="mi">164&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">OS&lt;/span> &lt;span class="n">thread&lt;/span> &lt;span class="n">handle&lt;/span> &lt;span class="mi">9416&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">query&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="mi">332330&lt;/span> &lt;span class="n">localhost&lt;/span> &lt;span class="o">::&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="n">root&lt;/span> &lt;span class="n">statistics&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">select&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="n">hero&lt;/span> &lt;span class="n">where&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">update&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">***&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">HOLDS&lt;/span> &lt;span class="n">THE&lt;/span> &lt;span class="n">LOCK&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">S&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">RECORD&lt;/span> &lt;span class="n">LOCKS&lt;/span> &lt;span class="n">space&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="mi">26&lt;/span> &lt;span class="n">page&lt;/span> &lt;span class="k">no&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="n">bits&lt;/span> &lt;span class="mi">72&lt;/span> &lt;span class="nb">index&lt;/span> &lt;span class="n">PRIMARY&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">table&lt;/span> &lt;span class="sb">`asdb`&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="sb">`hero`&lt;/span> &lt;span class="n">trx&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="mi">121630&lt;/span> &lt;span class="n">lock_mode&lt;/span> &lt;span class="n">X&lt;/span> &lt;span class="n">locks&lt;/span> &lt;span class="n">rec&lt;/span> &lt;span class="n">but&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">gap&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Record&lt;/span> &lt;span class="n">lock&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">heap&lt;/span> &lt;span class="k">no&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="n">PHYSICAL&lt;/span> &lt;span class="n">RECORD:&lt;/span> &lt;span class="n">n_fields&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">compact&lt;/span> &lt;span class="nb">format&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">info&lt;/span> &lt;span class="n">bits&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="mi">80000003&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="mo">00000001&lt;/span>&lt;span class="n">daf9&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="mi">81000000&lt;/span>&lt;span class="n">a1011d&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">3&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="n">ae8afb8e8919be4baae&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="n">z&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">4&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="n">e89c80&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">***&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">WAITING&lt;/span> &lt;span class="n">FOR&lt;/span> &lt;span class="n">THIS&lt;/span> &lt;span class="n">LOCK&lt;/span> &lt;span class="n">TO&lt;/span> &lt;span class="n">BE&lt;/span> &lt;span class="n">GRANTED:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">RECORD&lt;/span> &lt;span class="n">LOCKS&lt;/span> &lt;span class="n">space&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="mi">26&lt;/span> &lt;span class="n">page&lt;/span> &lt;span class="k">no&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="n">bits&lt;/span> &lt;span class="mi">72&lt;/span> &lt;span class="nb">index&lt;/span> &lt;span class="n">PRIMARY&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">table&lt;/span> &lt;span class="sb">`asdb`&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="sb">`hero`&lt;/span> &lt;span class="n">trx&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="mi">121630&lt;/span> &lt;span class="n">lock_mode&lt;/span> &lt;span class="n">X&lt;/span> &lt;span class="n">locks&lt;/span> &lt;span class="n">rec&lt;/span> &lt;span class="n">but&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">gap&lt;/span> &lt;span class="n">waiting&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Record&lt;/span> &lt;span class="n">lock&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">heap&lt;/span> &lt;span class="k">no&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="n">PHYSICAL&lt;/span> &lt;span class="n">RECORD:&lt;/span> &lt;span class="n">n_fields&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">compact&lt;/span> &lt;span class="nb">format&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">info&lt;/span> &lt;span class="n">bits&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="mi">80000001&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="mo">00000001&lt;/span>&lt;span class="n">daf9&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="mi">81000000&lt;/span>&lt;span class="n">a10110&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">3&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="n">ce58898e5a487&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="n">l&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">4&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">hex&lt;/span> &lt;span class="n">e89c80&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">asc&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">***&lt;/span> &lt;span class="n">WE&lt;/span> &lt;span class="n">ROLL&lt;/span> &lt;span class="n">BACK&lt;/span> &lt;span class="n">TRANSACTION&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">...&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>死锁信息，就是 &lt;code>LATEST DETECTED DEADLOCK&lt;/code> 这一部分。&lt;/p>
&lt;p>第一句：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="ld">2025-05-14 14:53:26&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0x2414&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>死锁发生的时间是：&lt;code>2025-05-14 14:53:26&lt;/code>，后边的一串十六进制 &lt;code>0x2414&lt;/code> 表示的&lt;strong>操作系统为当前 session 分配的线程的线程 id&lt;/strong>。&lt;/p>
&lt;p>然后是关于死锁发生时第一个事务的有关信息：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">***&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">(1) TRANSACTION&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 事务 id 为 121629，事务处于 ACTIVE 状态已经 8 秒了，事务现在正在做的操作就是：“starting index read”&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TRANSACTION 121629, ACTIVE 8 sec starting index read&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 此事务使用了 1 个表，为 1 个表上了锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">mysql tables in use 1, locked 1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 此事务处于 LOCK WAIT 状态，拥有 3 个锁结构，heap size 是为了存储锁结构而申请的内存大小（可以忽略），其中有 2 个行锁的结构&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">LOCK WAIT 3 lock struct(s), heap size 1128, 2 row lock(s)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 本事务所在线程的 id 是 163（MySQL 自己命名的线程 id），该线程在操作系统级别的 id 就是那一长串数字，当前查询的 id 为 332329（MySQL 内部使用，可以忽略），还有用户名主机信息&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">MySQL thread id 163, OS thread handle 7184, query id 332329 localhost ::1 root statistics&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 本事务发生阻塞的语句&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">select * from hero where id=3 for update&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 表示该事务获取到的锁信息&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cp">***&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">(1) HOLDS THE LOCK(S)&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">RECORD LOCKS space id 26 page no 4 n bits 72 index PRIMARY of table `asdb`.`hero` trx id 121629 lock_mode X locks rec but not gap&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">Record lock, heap no 2 PHYSICAL RECORD&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">n_fields 5; compact format; info bits 0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 主键值为 1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 4; hex 80000001; asc ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 6; hex 00000001daf9; asc ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 7; hex 81000000a10110; asc ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 7; hex 6ce58898e5a487; asc l ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">4&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 3; hex e89c80; asc ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 本事务当前在等待获取的锁：&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cp">***&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">(1) WAITING FOR THIS LOCK TO BE GRANTED&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 等待获取的表空间 ID 为 26，页号为 4，也就是表 hero 的P RIMAY 索引中的某条记录的锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 该锁的类型是 X 锁（rec but not gap）&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">RECORD LOCKS space id 26 page no 4 n bits 72 index PRIMARY of table `asdb`.`hero` trx id 121629 lock_mode X locks rec but not gap waiting&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 记录在页面中的 heap_no 为 3，具体的记录信息如下：&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">Record lock, heap no 3 PHYSICAL RECORD&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">n_fields 5; compact format; info bits 0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 这是主键值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 4; hex 80000003; asc ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 这是 trx_id 隐藏列 &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 6; hex 00000001daf9; asc ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 这是 roll_pointer 隐藏列 &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 7; hex 81000000a1011d; asc ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 这是 name 列 &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 10; hex 7ae8afb8e8919be4baae; asc z ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 这是 country 列 &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">4&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 3; hex e89c80; asc ;;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>从这个信息中可以看出，Session 1 中的事务为 2 条记录生成了锁结构，但是其中有一条记录上的 X 锁（rec but not gap）并没有获取到，没有获取到锁的这条记录主键值为 &lt;code>80000003&lt;/code>，这其实是 InnoDB 内部存储使用的格式，其实就代表数字 &lt;code>3&lt;/code>，也就是该事务在等待获取 &lt;code>hero&lt;/code> 表聚簇索引主键值为 &lt;code>3&lt;/code> 的那条记录的 X 锁。&lt;/p>
&lt;p>然后是关于死锁发生时第二个事务的有关信息：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">***&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">(2) TRANSACTION&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TRANSACTION 121630, ACTIVE 5 sec starting index read&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">mysql tables in use 1, locked 1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">LOCK WAIT 3 lock struct(s), heap size 1128, 2 row lock(s)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">MySQL thread id 164, OS thread handle 9416, query id 332330 localhost ::1 root statistics&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">select * from hero where id=1 for update&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 表示该事务获取到的锁信息&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cp">***&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">(2) HOLDS THE LOCK(S)&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">RECORD LOCKS space id 26 page no 4 n bits 72 index PRIMARY of table `asdb`.`hero` trx id 121630 lock_mode X locks rec but not gap&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">Record lock, heap no 3 PHYSICAL RECORD&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">n_fields 5; compact format; info bits 0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 主键值为 3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 4; hex 80000003; asc ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 6; hex 00000001daf9; asc ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 7; hex 81000000a1011d; asc ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 10; hex 7ae8afb8e8919be4baae; asc z ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">4&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 3; hex e89c80; asc ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cp">***&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">(2) WAITING FOR THIS LOCK TO BE GRANTED&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">RECORD LOCKS space id 26 page no 4 n bits 72 index PRIMARY of table `asdb`.`hero` trx id 121630 lock_mode X locks rec but not gap waiting&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">Record lock, heap no 2 PHYSICAL RECORD&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">n_fields 5; compact format; info bits 0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 主键值为 1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 4; hex 80000001; asc ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 6; hex 00000001daf9; asc ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 7; hex 81000000a10110; asc ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 7; hex 6ce58898e5a487; asc l ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">4&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">len 3; hex e89c80; asc ;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 回滚事务&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cp">***&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">WE ROLL BACK TRANSACTION (2)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Session 2 中的事务获取了 &lt;code>hero&lt;/code> 表聚簇索引主键值为 &lt;code>3&lt;/code> 的记录的 X 锁，等待获取 &lt;code>hero&lt;/code> 表聚簇索引主键值为 &lt;code>1&lt;/code> 的记录的 X 锁。&lt;/p>
&lt;h3>分析的思路&lt;span class="hx-absolute -hx-mt-20" id="分析的思路">&lt;/span>
&lt;a href="#%e5%88%86%e6%9e%90%e7%9a%84%e6%80%9d%e8%b7%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>首先看一下发生死锁的事务等待获取锁的语句是什么。&lt;/li>
&lt;li>找到发生死锁的事务中所有的语句之后，对照着事务获取到的锁和正在等待的锁的信息来分析死锁发生过程。&lt;/li>
&lt;/ol>
&lt;h2>死锁检测和锁超时&lt;span class="hx-absolute -hx-mt-20" id="死锁检测和锁超时">&lt;/span>
&lt;a href="#%e6%ad%bb%e9%94%81%e6%a3%80%e6%b5%8b%e5%92%8c%e9%94%81%e8%b6%85%e6%97%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>处理死锁的方式有两种：&lt;/p>
&lt;ul>
&lt;li>死锁检测&lt;/li>
&lt;li>锁超时&lt;/li>
&lt;/ul>
&lt;p>即使启用了 &lt;code>innodb_deadlock_detect=ON&lt;/code> 死锁检测，仍有可能出现非死锁型的锁等待（例如，一个事务长时间持有锁，其他事务只能一直等待），这时才由 &lt;code>innodb_lock_wait_timeout&lt;/code> 锁超时来控制。&lt;/p>
&lt;h3>死锁检测&lt;span class="hx-absolute -hx-mt-20" id="死锁检测">&lt;/span>
&lt;a href="#%e6%ad%bb%e9%94%81%e6%a3%80%e6%b5%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="l">innodb_deadlock_detect=ON&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>innodb_deadlock_detect&lt;/code> 的默认值是 &lt;code>on&lt;/code>，表示开启死锁检测。死锁检测能够在发生死锁的时候，快速发现并进行处理，但是它也是有额外负担的。&lt;/p>
&lt;p>可以想象一下这个过程：每当一个事务被锁的时候，就要看看它所依赖的线程有没有被别人锁住，如此循环，最后判断是否出现了循环等待，也就是死锁。&lt;/p>
&lt;p>&lt;strong>每个新来的被堵住的线程，都要判断会不会由于自己的加入导致了死锁&lt;/strong>，这是一个时间复杂度是 &lt;code>O(n)&lt;/code> 的操作。&lt;strong>假设有 1000 个并发线程要同时更新同一行，那么死锁检测操作就是 （1000*1000）100 万这个量级的&lt;/strong>。虽然最终检测的结果是没有死锁，但是这期间要消耗大量的 CPU 资源。因此，你就会看到 CPU 利用率很高，但是每秒却执行不了几个事务。&lt;/p>
&lt;p>怎么解决由这种热点行更新导致的性能问题？问题的症结在于，死锁检测要耗费大量的 CPU 资源。&lt;/p>
&lt;p>一种就是&lt;strong>如果你能确保这个业务一定不会出现死锁，可以临时把死锁检测关掉&lt;/strong>。但是这种操作本身带有一定的风险，因为业务设计的时候一般不会把死锁当做一个严重错误，毕竟出现死锁了，就回滚，然后通过业务重试一般就没问题了，这是业务无损的。而关掉死锁检测意味着可能会出现大量的超时，这是业务有损的。&lt;/p>
&lt;p>另一个思路是&lt;strong>控制并发度&lt;/strong>。根据上面的分析，如果并发能够控制住，比如同一行同时最多只有 10 个线程在更新，那么死锁检测的成本很低，就不会出现这个问题。一个直接的想法就是，在客户端做并发控制。但是，你会很快发现这个方法不太可行，因为客户端很多。我见过一个应用，有 600 个客户端，这样即使每个客户端控制到只有 5 个并发线程，汇总到数据库服务端以后，峰值并发数也可能要达到 3000。&lt;/p>
&lt;p>可以考虑通过&lt;strong>将一行改成逻辑上的多行来减少锁冲突（分段）&lt;/strong>。以一个影院账户为例，可以考虑放在多条记录上，比如 10 个记录，影院的账户总额等于这 10 个记录的值的总和。这样每次要给影院账户加金额的时候，随机选其中一条记录来加。这样每次冲突概率变成原来的 &lt;code>1/10&lt;/code>，可以减少锁等待个数，也就减少了死锁检测的 CPU 消耗。&lt;/p>
&lt;h3>锁超时&lt;span class="hx-absolute -hx-mt-20" id="锁超时">&lt;/span>
&lt;a href="#%e9%94%81%e8%b6%85%e6%97%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>行锁的超时时间可以通过参数 &lt;code>innodb_lock_wait_timeout&lt;/code> 来设置。&lt;/p>
&lt;p>&lt;code>innodb_lock_wait_timeout&lt;/code> 的默认值是 &lt;code>50s&lt;/code>。当出现死锁以后，第一个被锁住的线程要过 &lt;code>50s&lt;/code> 才会超时退出，然后其他线程才有可能继续执行。对于在线服务来说，这个等待时间往往是无法接受的。&lt;/p>
&lt;p>但是，又不可能直接把这个时间设置成一个很小的值，比如 &lt;code>1s&lt;/code>。这样当出现死锁的时候，确实很快就可以解开，但如果不是死锁，而是简单的锁等待呢？所以，超时时间设置太短的话，会出现很多误伤。要根据业务来设置一个合理的值。&lt;/p>
&lt;h2>锁优化实践&lt;span class="hx-absolute -hx-mt-20" id="锁优化实践">&lt;/span>
&lt;a href="#%e9%94%81%e4%bc%98%e5%8c%96%e5%ae%9e%e8%b7%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>尽可能让所有数据检索都通过索引来完成，&lt;strong>避免无索引行锁升级为表锁&lt;/strong>，&lt;/li>
&lt;li>合理设计索引，尽量缩小锁的范围。&lt;/li>
&lt;li>尽可能&lt;strong>减少检索条件范围，避免间隙锁&lt;/strong>。&lt;/li>
&lt;li>尽量&lt;strong>控制事务大小&lt;/strong>，减少锁定资源量和时间长度，涉及事务加锁的 SQL 尽量放在事务最后执行。&lt;/li>
&lt;li>尽可能用低的事务隔离级别。&lt;/li>
&lt;/ul></description></item><item><title>MySQL 日志机制</title><link>https://shipengqi.github.io/db-learn/docs/mysql/advance/07_log/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/db-learn/docs/mysql/advance/07_log/</guid><description>
&lt;div class="img-zoom">
&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/arch.png" alt="arch">
&lt;/div>
&lt;h2>redo log&lt;span class="hx-absolute -hx-mt-20" id="redo-log">&lt;/span>
&lt;a href="#redo-log" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>redo log 只是为了系统崩溃后恢复脏页用的，先写 redo log，再写数据库表文件的机制，也被称之为 &lt;code>WAL（Write Ahead Logging）&lt;/code>。&lt;/p>
&lt;p>&lt;strong>WAL&lt;/strong>：对数据库做任何修改之前，必须先将对应的修改操作记录到日志文件中，并保证日志已经持久化到磁盘，才能真正对数据页进行修改。&lt;/p>
&lt;p>WAL 的好处：&lt;/p>
&lt;ul>
&lt;li>保证数据的&lt;strong>持久性&lt;/strong>，只要日志已经写入磁盘，重启后可以通过日志重放恢复数据。&lt;/li>
&lt;li>日志是&lt;strong>顺序 I/O&lt;/strong>（追加写入），比随机 I/O 快得多（尤其是机械硬盘时代）。
&lt;ul>
&lt;li>先顺序 I/O 写入日志文件，数据页可后续批量写入数据表文件，减少 I/O 频率（innodb 中是以页为单位来进行磁盘 IO 的，一个页面默认是 16KB，也就是说在该事务提交时不得不将一个完整的页面从内存中刷新到磁盘，哪怕只修改一个字节也要刷新 16KB 的数据到磁盘上）。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>redo log 关键配置&lt;span class="hx-absolute -hx-mt-20" id="redo-log-关键配置">&lt;/span>
&lt;a href="#redo-log-%e5%85%b3%e9%94%ae%e9%85%8d%e7%bd%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>innodb_log_buffer_size&lt;span class="hx-absolute -hx-mt-20" id="innodb_log_buffer_size">&lt;/span>
&lt;a href="#innodb_log_buffer_size" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>设置 redo log buffer 大小参数，默认 &lt;code>16M&lt;/code>，最大值是 &lt;code>4096M&lt;/code>，最小值为 &lt;code>1M&lt;/code>。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">show&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">variables&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">like&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;%innodb_log_buffer_size%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>innodb_log_group_home_dir&lt;span class="hx-absolute -hx-mt-20" id="innodb_log_group_home_dir">&lt;/span>
&lt;a href="#innodb_log_group_home_dir" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>设置 redo log 文件存储位置，默认值为 &lt;code>./&lt;/code>，即 innodb 数据文件存储位置，其中的 &lt;code>ib_logfile0&lt;/code> 和 &lt;code>ib_logfile1&lt;/code> 即为 redo log 文件。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">show&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">variables&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">like&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;%innodb_log_group_home_dir%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>innodb_log_files_in_group&lt;span class="hx-absolute -hx-mt-20" id="innodb_log_files_in_group">&lt;/span>
&lt;a href="#innodb_log_files_in_group" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>磁盘上的 redo log 文件不只一个，而是以一个日志文件组的形式出现的。&lt;code>innodb_log_files_in_group&lt;/code> 设置 redo log 文件组中文件个数，默认值为 2，命名方式如: &lt;code>ib_logfile0&lt;/code>, &lt;code>iblogfile1&lt;/code> &amp;hellip; &lt;code>iblogfileN&lt;/code>。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">show&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">variables&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">like&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;%innodb_log_files_in_group%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>redo log 写入磁盘过程&lt;span class="hx-absolute -hx-mt-20" id="redo-log-写入磁盘过程">&lt;/span>
&lt;a href="#redo-log-%e5%86%99%e5%85%a5%e7%a3%81%e7%9b%98%e8%bf%87%e7%a8%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>在将 redo log 写入日志文件组时，是从 &lt;code>ib_logfile0&lt;/code> 开始写，如果 &lt;code>ib_logfile0&lt;/code> 写满了，就接着 &lt;code>ib_logfile1&lt;/code> 写，同理，&lt;code>ib_logfile1&lt;/code> 写满了就去写 &lt;code>ib_logfile2&lt;/code>，依此类推。如果写到最后一个文件该咋办？那就重新转到 &lt;code>ib_logfile0&lt;/code> 继续写。类似环形的写入，假设现在有四个 redo log 文件，如下图，&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/redo-log-write.png" alt="redo-log-write" loading="lazy" />&lt;/p>
&lt;ul>
&lt;li>&lt;strong>write pos&lt;/strong> 是当前记录的位置，一边写一边后移，写到第 3 号文件末尾后就回到 0 号文件开头。&lt;/li>
&lt;li>&lt;strong>checkpoint&lt;/strong> 是当前要擦除的位置，也是往后推移并且循环的，擦除记录前要把记录更新到&lt;strong>数据文件&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;p>write pos 和 checkpoint 之间的部分就是空着的&lt;strong>可写部分&lt;/strong>，可以用来记录新的操作。如果 write pos 追上 checkpoint，表示 redo log 写满了，这时候不能再执行新的更新，得停下来先擦掉一些记录，把 checkpoint 推进一下。&lt;/p>
&lt;h4>innodb_log_file_size&lt;span class="hx-absolute -hx-mt-20" id="innodb_log_file_size">&lt;/span>
&lt;a href="#innodb_log_file_size" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>设置 redo log 文件大小，默认值为 &lt;code>48M&lt;/code>，最大值为 &lt;code>512G&lt;/code>，注意&lt;strong>最大值指的是所有 redo log 文件之和&lt;/strong>，即 &lt;code>innodb_log_files_in_group * innodb_log_file_size&lt;/code> 不能大于最大值 &lt;code>512G&lt;/code>。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">show&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">variables&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">like&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;%innodb_log_file_size%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>innodb_flush_log_at_trx_commit&lt;span class="hx-absolute -hx-mt-20" id="innodb_flush_log_at_trx_commit">&lt;/span>
&lt;a href="#innodb_flush_log_at_trx_commit" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>这个参数控制 redo log 的写入策略，可选值：&lt;/p>
&lt;ul>
&lt;li>&lt;code>0&lt;/code>：表示每次事务提交时都只是把 redo log 留在 redo log buffer 中，效率最高，但是如果数据库宕机可能会丢失数据。&lt;/li>
&lt;li>&lt;code>1&lt;/code>：默认值，表示每次事务提交时都将 redo log 直接持久化到磁盘，数据最安全，不会因为数据库宕机丢失数据，但是效率稍微差一点，线上系统推荐这个设置。&lt;/li>
&lt;li>&lt;code>2&lt;/code>：这是一个折中的选择，表示每次事务提交时都只是把 redo log 写到操作系统的缓存 Page Cache 里，这种情况如果数据库宕机是不会丢失数据的，但是操作系统如果宕机了，Page Cache 里的数据还没来得及写入磁盘文件的话就会丢失数据。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/redo-log-policy.png" alt="redo-log-policy" loading="lazy" />&lt;/p>
&lt;p>查看 &lt;code>innodb_flush_log_at_trx_commit&lt;/code> 的值：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">show&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">variables&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">like&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;innodb_flush_log_at_trx_commit&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>设置 &lt;code>innodb_flush_log_at_trx_commit&lt;/code> 的值（也可以在 &lt;code>my.ini&lt;/code> 或 &lt;code>my.cnf&lt;/code> 文件里配置）：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">global&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">innodb_flush_log_at_trx_commit&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>redo 日志刷盘时机&lt;span class="hx-absolute -hx-mt-20" id="redo-日志刷盘时机">&lt;/span>
&lt;a href="#redo-%e6%97%a5%e5%bf%97%e5%88%b7%e7%9b%98%e6%97%b6%e6%9c%ba" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;code>innodb_flush_log_at_trx_commit&lt;/code> 是控制&lt;strong>事务提交&lt;/strong>时 redo 日志写入磁盘的策略，还有其他的一些时机也会触发 redo 日志写入磁盘：&lt;/p>
&lt;ul>
&lt;li>redo log buffer 空间不足时。redo log buffer 的大小是有限的（通过系统变量 &lt;code>innodb_log_buffer_size&lt;/code> 指定），如果不停的往这个 buffer 里塞入日志，很快它就会被填满。如果当前写入的 redo log 已经占满了 buffer 总容量的&lt;strong>大约一半左右&lt;/strong>，就会把日志刷新到磁盘上。&lt;/li>
&lt;li>事务提交时。&lt;/li>
&lt;li>后台线程不停的刷刷刷。后台有一个线程，大约每秒都会刷新一次 redo log buffer 中的 redo 日志到磁盘。&lt;/li>
&lt;li>正常关闭服务器时。&lt;/li>
&lt;/ul>
&lt;h2>binlog&lt;span class="hx-absolute -hx-mt-20" id="binlog">&lt;/span>
&lt;a href="#binlog" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>MySQL 整体来看，其实就有两块：一块是 Server 层，它主要做的是 MySQL 功能层面的事情；还有一块是引擎层。&lt;/p>
&lt;p>&lt;strong>redo log 是 InnoDB 引擎特有的日志&lt;/strong>，而 &lt;strong>Server 层也有自己的日志，称为 binlog&lt;/strong>（归档日志）。&lt;/p>
&lt;p>binlog &lt;strong>二进制&lt;/strong>日志记录&lt;strong>保存了所有执行过的修改操作语句，不保存查询操作&lt;/strong>。&lt;/p>
&lt;p>启动 binlog 记录功能，会影响服务器性能，但如果需要恢复数据或主从复制功能，则好处则大于对服务器性能的影响。&lt;/p>
&lt;p>MySQL 5.7 版本中，binlog 默认是关闭的，8.0 版本默认是打开的。&lt;/p>
&lt;p>开启 binlog 记录功能，需要修改配置文件 &lt;code>my.ini(windows)&lt;/code> 或 &lt;code>my.cnf(linux)&lt;/code>，然后重启数据库。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[mysqld]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置 binlog 的存放位置，可以是绝对路径，也可以是相对路径，这里写的相对路径，则 binlog 文件默认会放在 data 数据目录下&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">log_bin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">mysql‐binlog&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Server Id 是数据库服务器 id，随便写一个数都可以，这个 id 用来在 MySQL 集群环境中标记唯一 MySQL 服务器，集群环境中每台 MySQL 服务器的 id 不能一样，否则启动会报错&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">server‐id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 记录 binlog 的格式，有三种格式：STATEMENT、ROW、MIXED，默认是 STATEMENT 格式&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">binlog_format&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">ROW&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 执行自动删除 binlog 日志文件的天数，也就是每个 binlog 文件最多保存的时间。默认为 0，表示不自动删除。一般情况下，需要根据业务设置一个合理的值，这样可以保证 binlog 日志文件不会占用太多的磁盘空间。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">expire_logs_days&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 单个 binlog 日志文件的大小限制，默认为 1GB&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">max_binlog_size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">200M &lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>查看 binlog 配置：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">show&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">variables&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">like&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;%log_bin%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/log-bin-variables.png" alt="log-bin-variables" loading="lazy" />&lt;/p>
&lt;ul>
&lt;li>&lt;code>log_bin&lt;/code>：binlog 日志是否打开状态&lt;/li>
&lt;li>&lt;code>log_bin_basename&lt;/code>：是 binlog 日志的基本文件名，后面会追加标识来表示每一个文件，binlog 日志文件会滚动增加&lt;/li>
&lt;li>&lt;code>log_bin_index&lt;/code>：指定的是 binlog 文件的索引文件，这个文件管理了所有的 binlog 文件的目录。&lt;/li>
&lt;li>&lt;code>sql_log_bin&lt;/code>：SQL 语句是否写入 binlog 文件，&lt;code>ON&lt;/code> 代表需要写入，&lt;code>OFF&lt;/code> 代表不需要写入。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;code>sql_log_bin&lt;/code> 有什么用？&lt;/strong>&lt;/p>
&lt;p>既然开启了 binlog 日志，那为什么还要设置 &lt;code>sql_log_bin&lt;/code> 呢？&lt;/p>
&lt;p>&lt;code>sql_log_bin&lt;/code> 如果修改为 &lt;code>OFF&lt;/code>，则代表所有的 SQL 语句都不会写入 binlog 文件，但是 binlog 文件还是有的。这样就可以在主库上执行一些操作，但不复制到 slave 库上。可以用来模拟主从同步复制异常。&lt;/p>
&lt;h3>binlog 的日志格式&lt;span class="hx-absolute -hx-mt-20" id="binlog-的日志格式">&lt;/span>
&lt;a href="#binlog-%e7%9a%84%e6%97%a5%e5%bf%97%e6%a0%bc%e5%bc%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>binlog_format&lt;/code> 可以设置 binlog 日志的记录格式，MySQL 支持三种格式类型：&lt;/p>
&lt;ul>
&lt;li>&lt;code>STATEMENT&lt;/code>：基于 SQL 语句的复制，每一条会修改数据的 SQL 都会记录到 master 机器的 binlog 中，这种方式日志量小，节约 IO 开销，提高性能，但是对于一些执行过程中才能确定结果的函数，比如 &lt;code>UUID()&lt;/code>、&lt;code>SYSDATE()&lt;/code> 等函数如果随 SQL 同步到 slave 机器去执行，则结果跟 master 机器执行的不一样。&lt;/li>
&lt;li>&lt;code>ROW&lt;/code>：基于行的复制，日志中会记录成每一行数据被修改的形式，然后在 slave 端再对相同的数据进行修改记录下每一行数据修改的细节，可以解决函数、存储过程等在 slave 机器的复制问题，但这种方式日志量较大，性能不如 &lt;code>STATEMENT&lt;/code>。举个例子，假设 &lt;code>update&lt;/code> 语句更新 &lt;code>10&lt;/code> 行数据，&lt;code>STATEMENT&lt;/code> 方式就记录这条 &lt;code>update&lt;/code> 语句，而 &lt;code>Row&lt;/code> 方式会记录被修改的 10 行数据。&lt;/li>
&lt;li>&lt;code>MIXED&lt;/code>：混合模式复制，实际就是前两种模式的结合，在 &lt;code>MIXED&lt;/code> 模式下，MySQL 会根据执行的每一条具体的 SQL 语句来区分对待记录的日志形式，也就是在 &lt;code>STATEMENT&lt;/code> 和 &lt;code>ROW&lt;/code> 之间选择一种，如果 SQL 里有函数或一些在执行时才知道结果的情况，会选择 &lt;code>ROW&lt;/code>，其它情况选择 &lt;code>STATEMENT&lt;/code>，推荐使用这一种。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>当表结构发生变化的时候，会使用 &lt;code>STATEMENT&lt;/code> 合适&lt;/strong>。&lt;/p>
&lt;h3>binlog 的写入机制&lt;span class="hx-absolute -hx-mt-20" id="binlog-的写入机制">&lt;/span>
&lt;a href="#binlog-%e7%9a%84%e5%86%99%e5%85%a5%e6%9c%ba%e5%88%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>binlog 写入磁盘机制主要通过 &lt;code>sync_binlog&lt;/code> 参数控制。与 redo log 类似，&lt;code>sync_binlog&lt;/code> 也有三种取值：&lt;/p>
&lt;ul>
&lt;li>设置为 &lt;code>0&lt;/code>，默认值，表示每次提交事务都只 write 到 Page Cache，由系统自行判断什么时候执行 &lt;code>fsync&lt;/code> 写入磁盘。虽然性能得到提升，但是机器宕机，Page Cache 里面的 binlog 会丢失。&lt;/li>
&lt;li>设置为 &lt;code>1&lt;/code>，表示每次提交事务都会执行 &lt;code>fsync&lt;/code> 写入磁盘，这种方式最安全。&lt;/li>
&lt;li>设置为 &lt;code>N&lt;/code> （&lt;code>N&amp;gt;1&lt;/code>），表示每次提交事务都 write 到 Page Cache，但累积 &lt;code>N&lt;/code> 个事务后才 &lt;code>fsync&lt;/code> 写入磁盘，这种如果机器宕机会丢失 &lt;code>N&lt;/code> 个事务的 binlog。&lt;/li>
&lt;/ul>
&lt;p>binlog 日志文件重新生成的时机：&lt;/p>
&lt;ul>
&lt;li>服务器启动或重新启动。&lt;/li>
&lt;li>服务器刷新日志，执行命令 &lt;code>flush logs&lt;/code>。&lt;/li>
&lt;li>日志文件大小达到 &lt;code>max_binlog_size&lt;/code> 值，默认值为 &lt;code>1GB&lt;/code>。&lt;/li>
&lt;/ul>
&lt;h3>删除 binlog 日志文件&lt;span class="hx-absolute -hx-mt-20" id="删除-binlog-日志文件">&lt;/span>
&lt;a href="#%e5%88%a0%e9%99%a4-binlog-%e6%97%a5%e5%bf%97%e6%96%87%e4%bb%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 删除当前的 binlog 文件
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">reset&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">master&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 删除指定日志文件之前的所有日志文件，下面这个是删除 6 之前的所有日志文件，当前这个文件不删除
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">purge&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">master&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">logs&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">to&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;mysql‐binlog.000006&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 删除指定日期前的日志索引中binlog日志文件
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">purge&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">master&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">logs&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">before&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;2023‐01‐21 14:00:00&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>查看 binlog 日志文件&lt;span class="hx-absolute -hx-mt-20" id="查看-binlog-日志文件">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b-binlog-%e6%97%a5%e5%bf%97%e6%96%87%e4%bb%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>MySQL 提供了 &lt;code>mysqlbinlog&lt;/code> 命令，可以查看 binlog 日志：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看 binlog（命令行方式，不用登录 MySQL）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ mysqlbinlog ‐‐no‐defaults ‐v &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>‐‐base64‐output&lt;span class="o">=&lt;/span>decode‐rows D:/dev/mysql‐5.7.25‐winx64/data/mysql‐binlog.000007
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看 binlog（带查询条件）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ mysqlbinlog ‐‐no‐defaults ‐v &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>‐‐base64‐output&lt;span class="o">=&lt;/span>decode‐rows D:/dev/mysql‐5.7.25‐winx64/data/mysql‐binlog.000007 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>start‐datetime&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;2023‐01‐21 00:00:00&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>stop‐datetime&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;2023‐02‐01 00:00:00&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="nv">startposition&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;5000&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>stop‐position&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;20000&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>查出来的 binlog 日志文件内容如下：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>/*!50530 SET @@SESSION.PSEUDO_SLAVE_MODE=1*/;
/*!50003 SET @OLD_COMPLETION_TYPE=@@COMPLETION_TYPE,COMPLETION_TYPE=0*/;
DELIMITER /*!*/;
# at 4
#230127 21:13:51 server id 1 end_log_pos 123 CRC32 0x084f390f Start: binlog v 4, server v 5.7.25‐
log created 230127 21:13:51 at startup
# Warning: this binlog is either in use or was not closed properly.
ROLLBACK/*!*/;
# at 123
#230127 21:13:51 server id 1 end_log_pos 154 CRC32 0x672ba207 Previous‐GTIDs
# [empty]
# at 154
#230127 21:22:48 server id 1 end_log_pos 219 CRC32 0x8349d010 Anonymous_GTID last_committed=0 sequence_number=1 rbr_only=yes
/*!50718 SET TRANSACTION ISOLATION LEVEL READ COMMITTED*//*!*/;
SET @@SESSION.GTID_NEXT= &amp;#39;ANONYMOUS&amp;#39;/*!*/;
# at 219
#230127 21:22:48 server id 1 end_log_pos 291 CRC32 0xbf49de02 Query thread_id=3 exec_time=0 erro
r_code=0
SET TIMESTAMP=1674825768/*!*/;
SET @@session.pseudo_thread_id=3/*!*/;
SET @@session.foreign_key_checks=1, @@session.sql_auto_is_null=0, @@session.unique_checks=1, @@s
ession.autocommit=1/*!*/;
SET @@session.sql_mode=1342177280/*!*/;
SET @@session.auto_increment_increment=1, @@session.auto_increment_offset=1/*!*/;
/*!\C utf8 *//*!*/;
SET @@session.lc_time_names=0/*!*/;
SET @@session.collation_database=DEFAULT/*!*/;
BEGIN
/*!*/;
# at 291
#230127 21:22:48 server id 1 end_log_pos 345 CRC32 0xc4ab653e Table_map: `test`.`account` mapped to number 99
# at 345
#230127 21:22:48 server id 1 end_log_pos 413 CRC32 0x54a124bd Update_rows: table id 99 flags: ST
MT_END_F
### UPDATE `test`.`account`
### WHERE
### @1=1
### @2=&amp;#39;lilei&amp;#39;
### @3=1000
### SET
### @1=1
### @2=&amp;#39;lilei&amp;#39;
### @3=2000
# at 413
#230127 21:22:48 server id 1 end_log_pos 444 CRC32 0x23355595 Xid = 10
COMMIT/*!*/;
# at 444
...&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>包含具体执行的 SQL 语句以及执行时的相关情况。&lt;/p>
&lt;h3>binlog 日志文件恢复数据&lt;span class="hx-absolute -hx-mt-20" id="binlog-日志文件恢复数据">&lt;/span>
&lt;a href="#binlog-%e6%97%a5%e5%bf%97%e6%96%87%e4%bb%b6%e6%81%a2%e5%a4%8d%e6%95%b0%e6%8d%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 先执行刷新日志的命令生成一个新的 binlog 文件 mysql‐binlog.000008，后面修改操作日志都会记录在最新的这个文件里
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">flush&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">logs&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 执行两条插入语句
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">VALUES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;4&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;zhuge&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;666&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">VALUES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;5&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;zhuge1&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;888&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 假设现在误操作执行了一条删除语句把刚新增的两条数据删掉了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">delete&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>现在需要恢复被删除的两条数据，先查看 binlog 日志文件：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ mysqlbinlog ‐‐no‐defaults ‐v &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>‐‐base64‐output&lt;span class="o">=&lt;/span>decode‐rows D:/dev/mysql‐5.7.25‐winx64/data/mysql‐binlog.000008&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>文件内容：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>...
SET @@SESSION.GTID_NEXT= &amp;#39;ANONYMOUS&amp;#39;/*!*/;
# at 219
#230127 23:32:24 server id 1 end_log_pos 291 CRC32 0x4528234f Query thread_id=5 exec_time=0 error_code=0
SET TIMESTAMP=1674833544/*!*/;
SET @@session.pseudo_thread_id=5/*!*/;
SET @@session.foreign_key_checks=1, @@session.sql_auto_is_null=0, @@session.unique_checks=1, @@session.autocommit=1/*!*/;
SET @@session.sql_mode=1342177280/*!*/;
SET @@session.auto_increment_increment=1, @@session.auto_increment_offset=1/*!*/;
/*!\C utf8 *//*!*/;
SET @@session.character_set_client=33,@@session.collation_connection=33,@@session.collation_server=33/*!*/;
SET @@session.lc_time_names=0/*!*/;
SET @@session.collation_database=DEFAULT/*!*/;
BEGIN
/*!*/;
# at 291
#230127 23:32:24 server id 1 end_log_pos 345 CRC32 0x7482741d Table_map: `test`.`account` mapped to number 99
# at 345
#230127 23:32:24 server id 1 end_log_pos 396 CRC32 0x5e443cf0 Write_rows: table id 99 flags: STMT_END_F
### INSERT INTO `test`.`account`
### SET
### @1=4
### @2=&amp;#39;zhuge&amp;#39;
### @3=666
# at 396
#230127 23:32:24 server id 1 end_log_pos 427 CRC32 0x8a0d8a3c Xid = 56
COMMIT/*!*/;
# at 427
#230127 23:32:40 server id 1 end_log_pos 492 CRC32 0x5261a37e Anonymous_GTID last_committed=1 sequence_number=2 rbr_only=yes
/*!50718 SET TRANSACTION ISOLATION LEVEL READ COMMITTED*//*!*/;
SET @@SESSION.GTID_NEXT= &amp;#39;ANONYMOUS&amp;#39;/*!*/;
# at 492
#230127 23:32:40 server id 1 end_log_pos 564 CRC32 0x01086643 Query thread_id=5 exec_time=0 error_code=0
SET TIMESTAMP=1674833560/*!*/;
BEGIN
/*!*/;
# at 564
#230127 23:32:40 server id 1 end_log_pos 618 CRC32 0xc26b6719 Table_map: `test`.`account` mapped to number 99
# at 618
#230127 23:32:40 server id 1 end_log_pos 670 CRC32 0x8e272176 Write_rows: table id 99 flags: STMT_END_F
### INSERT INTO `test`.`account`
### SET
### @1=5
### @2=&amp;#39;zhuge1&amp;#39;
### @3=888
# at 670
#230127 23:32:40 server id 1 end_log_pos 701 CRC32 0xb5e63d00 Xid = 58
COMMIT/*!*/;
# at 701
#230127 23:34:23 server id 1 end_log_pos 766 CRC32 0xa0844501 Anonymous_GTID last_committed=2 sequence_number=3 rbr_only=yes
/*!50718 SET TRANSACTION ISOLATION LEVEL READ COMMITTED*//*!*/;
SET @@SESSION.GTID_NEXT= &amp;#39;ANONYMOUS&amp;#39;/*!*/;
# at 766
#230127 23:34:23 server id 1 end_log_pos 838 CRC32 0x687bdf88 Query thread_id=7 exec_time=0 error_code=0
SET TIMESTAMP=1674833663/*!*/;
BEGIN
/*!*/;
# at 838
#230127 23:34:23 server id 1 end_log_pos 892 CRC32 0x4f7b7d6a Table_map: `test`.`account` mapped to number 99
# at 892
#230127 23:34:23 server id 1 end_log_pos 960 CRC32 0xc47ac777 Delete_rows: table id 99 flags: STMT_END_F
### DELETE FROM `test`.`account`
### WHERE
### @1=4
### @2=&amp;#39;zhuge&amp;#39;
### @3=666
### DELETE FROM `test`.`account`
### WHERE
### @1=5
### @2=&amp;#39;zhuge1&amp;#39;
### @3=888
# at 960
#230127 23:34:23 server id 1 end_log_pos 991 CRC32 0x386699fe Xid = 65
COMMIT/*!*/;
SET @@SESSION.GTID_NEXT= &amp;#39;AUTOMATIC&amp;#39; /* added by mysqlbinlog */ /*!*/;
DELIMITER ;
# End of log file
...&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>找到两条插入数据的 SQL，每条 SQL 的上下都有 &lt;code>BEGIN&lt;/code> 和 &lt;code>COMMIT&lt;/code>，找到第一条 SQL &lt;code>BEGIN&lt;/code> 前面的文件位置标识 &lt;code>at 219&lt;/code>（这是文件的位置标识），再找到第二条 SQL &lt;code>COMMIT&lt;/code> 后面的文件位置标识 &lt;code>at 701&lt;/code> 。然后可以根据文件位置标识来恢复数据，执行如下 SQL：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysqlbinlog --no-defaults --start-position&lt;span class="o">=&lt;/span>&lt;span class="m">219&lt;/span> --stop-position&lt;span class="o">=&lt;/span>&lt;span class="m">701&lt;/span> --database&lt;span class="o">=&lt;/span>&lt;span class="nb">test&lt;/span> D:/dev/mysql-5.7.25-winx64/data/mysql-binlog.000009 &lt;span class="p">|&lt;/span> mysql -uroot -p123456 -v &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 补充一个根据时间来恢复数据的命令，找到第一条 SQL BEGIN 前面的时间戳标记 SET TIMESTAMP=1674833544，再找到第二条 SQL COMMIT 后面的时间戳标记 SET TIMESTAMP=1674833663，转成 datetime 格式&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysqlbinlog --no-defaults --start-datetime&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;2023-1-27 23:32:24&amp;#34;&lt;/span> --stop-datetime&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;2023-1-27 23:34:23&amp;#34;&lt;/span> --database&lt;span class="o">=&lt;/span>&lt;span class="nb">test&lt;/span> D:/dev/mysql-5.7.25-winx64/data/mysql-binlog.000009 &lt;span class="p">|&lt;/span> mysql -uroot -p123456 -v test&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>执行后删除数据被恢复。如果数据后面还有别的更新，那么就接着找到对应 SQL 的位置标识，然后执行恢复数据的命令即可。如果要恢复整个 binlog 日志文件，那么就不需要过滤参数，直接执行恢复数据的命令即可。&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">注意，如果要恢复大量数据，假设数据库所有数据都被删除了要怎么恢复，如果数据库之前没有备份，所有的 binlog 日志都在的话，就从 binlog 第一个文件开始逐个恢复每个 binlog 文件里的数据，这种一般不太可能，因为 binlog 日志比较大，早期的 binlog 文件会定期删除的，所以一般不可能用 binlog 文件恢复整个数据库的。&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>一般推荐的是&lt;strong>每天(在凌晨后)需要做一次全量数据库备份&lt;/strong>，那么恢复数据库可以用最近的一次全量备份再加上备份时间点之后的 binlog 来恢复数据。备份数据库一般可以用 &lt;code>mysqldump&lt;/code> 命令工具。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysqldump -u root 数据库名&amp;gt;备份文件名&lt;span class="p">;&lt;/span> &lt;span class="c1"># 备份整个数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysqldump -u root 数据库名 表名字&amp;gt;备份文件名&lt;span class="p">;&lt;/span> &lt;span class="c1"># 备份整个表&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql -u root &lt;span class="nb">test&lt;/span> &amp;lt; 备份文件名 &lt;span class="c1"># 恢复整个数据库，test 为数据库名称，需要自己先建一个数据库 test&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>binlog 的 &lt;code>expire_logs_days&lt;/code> 如何设置，一般最好比全量备份的间隔时间长，避免全量备份某天备份失败了，后面的 binlog 日志也丢失了，无法恢复数据。&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3>redo log 和 binlog 的区别&lt;span class="hx-absolute -hx-mt-20" id="redo-log-和-binlog-的区别">&lt;/span>
&lt;a href="#redo-log-%e5%92%8c-binlog-%e7%9a%84%e5%8c%ba%e5%88%ab" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>redo log 是 InnoDB 引擎特有的；binlog 是 MySQL 的 Server 层实现的，所有引擎都可以使用。&lt;/li>
&lt;li>redo log 是物理日志，记录的是“在某个数据页上做了什么修改”；binlog 是逻辑日志，记录的是这个语句的原始逻辑，比如 “给 ID=2 这一行的 c 字段加 1”。&lt;/li>
&lt;li>redo log 是循环写的，空间固定会用完；binlog 是可以追加写入的。“追加写”是指 binlog 文件写到一定大小后会切换到下一个，并不会覆盖以前的日志。&lt;/li>
&lt;/ul>
&lt;h3>为什么需要两阶段提交？&lt;span class="hx-absolute -hx-mt-20" id="为什么需要两阶段提交">&lt;/span>
&lt;a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81%e4%b8%a4%e9%98%b6%e6%ae%b5%e6%8f%90%e4%ba%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>如果只有 redo log 或者只有 binlog，那么事务就不需要两阶段提交。但是如果同时使用了 redo log 和 binlog，那么就需要保证这两种日志之间的一致性。否则，在数据库发生异常重启或者主从切换时，可能会出现数据不一致的情况。&lt;/p>
&lt;p>假设我们有一个事务 T，它修改了两行数据 A 和 B，并且同时开启了 redo log 和 binlog。&lt;/p>
&lt;ul>
&lt;li>如果先写 redo log 再写 binlog，并且在写完 redo log 后数据库发生了宕机，那么在重启后，根据 redo log 可以恢复 A 和 B 的修改，但是 binlog 中没有记录数据 A 和 B 的修改信息，导致备份或者从库中没有 A 和 B 的修改。&lt;/li>
&lt;li>如果先写 binlog 再写 redo log，并且在写完 binlog 后数据库发生了宕机，那么在重启后，根据 redo log 无法恢复 A 和 B 的修改，但是 binlog 中有记录 A 和 B 的修改信息，导致备份或者从库中有 A 和 B 的修改。&lt;/li>
&lt;/ul>
&lt;p>所以如果不使用“两阶段提交”，那么数据库的状态就有可能和用它的日志恢复出来的库的状态不一致。&lt;/p>
&lt;h3>为什么会有 redo log 和 binlog 两份日志？&lt;span class="hx-absolute -hx-mt-20" id="为什么会有-redo-log-和-binlog-两份日志">&lt;/span>
&lt;a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e4%bc%9a%e6%9c%89-redo-log-%e5%92%8c-binlog-%e4%b8%a4%e4%bb%bd%e6%97%a5%e5%bf%97" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>因为最开始 MySQL 里并没有 InnoDB 引擎。MySQL 自带的引擎是 MyISAM，但是 MyISAM 没有 crash-safe 的能力， binlog 只在 Server 层记录逻辑操作，不参与存储引擎的数据页写入和 crash recovery 过程。而 InnoDB 是以插件形式引入 MySQL 的，既然只依靠 binlog 是没有 crash-safe 能力的，所以 InnoDB 使用另外一套日志系统——也就是 redo log 来实现 crash-safe 能力。有了 redo log，InnoDB 就可以保证即使数据库发生异常重启，之前提交的记录都不会丢失，这个能力称为 crash-safe。&lt;/p>
&lt;h2>undo log&lt;span class="hx-absolute -hx-mt-20" id="undo-log">&lt;/span>
&lt;a href="#undo-log" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;strong>事务&lt;/strong>需要保证&lt;strong>原子性&lt;/strong>，也就是事务中的操作要么全部完成，要么什么也不做。但是有时候就是会在事务执行到一半会出现一些的情况，比如：&lt;/p>
&lt;ol>
&lt;li>事务执行过程中可能遇到各种错误，比如服务器本身的错误，操作系统错误，甚至是突然断电导致的错误。&lt;/li>
&lt;li>手动输入 &lt;code>ROLLBACK&lt;/code> 语句结束当前的事务的执行。&lt;/li>
&lt;/ol>
&lt;p>为了保证事务的原子性，就需要把东西改回原先的样子，这个过程就称之为&lt;strong>回滚&lt;/strong>。&lt;/p>
&lt;p>每当对一条记录做改动时（&lt;code>INSERT&lt;/code>、&lt;code>DELETE&lt;/code>、&lt;code>UPDATE&lt;/code>），都需要把回滚时所需的东西都给记下来。例如：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>插入一条记录时，至少要把这条记录的主键值记下来&lt;/strong>，之后回滚的时候只需要把这个主键值对应的记录删掉就好了。&lt;/li>
&lt;li>&lt;strong>删除了一条记录，至少要把这条记录中的内容都记下来&lt;/strong>，这样之后回滚时再把由这些内容组成的记录插入到表中就好了。&lt;/li>
&lt;li>&lt;strong>修改了一条记录，至少要把修改这条记录前的旧值都记录下来&lt;/strong>，这样之后回滚时再把这条记录更新为旧值就好了。&lt;/li>
&lt;/ul>
&lt;p>这些为了回滚而记录的这些日志就称之为 &lt;strong>undo log&lt;/strong>。&lt;/p>
&lt;h3>事务 id 分配的时机&lt;span class="hx-absolute -hx-mt-20" id="事务-id-分配的时机">&lt;/span>
&lt;a href="#%e4%ba%8b%e5%8a%a1-id-%e5%88%86%e9%85%8d%e7%9a%84%e6%97%b6%e6%9c%ba" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>事务执行过程中，只有在第一次真正修改记录时（执行 &lt;code>INSERT&lt;/code>、&lt;code>DELETE&lt;/code>、&lt;code>UPDATE&lt;/code> 这些语句或加排它锁操作比如 &lt;code>select...for update&lt;/code> 语句时），才会被分配一个单独的事务 id，否则在一个只读事务中的事务 id 值都默认为 0。&lt;/p>
&lt;h3>trx_id 和 roll_pointer 隐藏列&lt;span class="hx-absolute -hx-mt-20" id="trx_id-和-roll_pointer-隐藏列">&lt;/span>
&lt;a href="#trx_id-%e5%92%8c-roll_pointer-%e9%9a%90%e8%97%8f%e5%88%97" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>聚簇索引的记录除了会保存完整的用户数据以外，而且还会自动添加名为 &lt;code>trx_id&lt;/code>、&lt;code>roll_pointer&lt;/code> 的隐藏列&lt;/strong>。如果用户没有在表中定义主键以及 UNIQUE 键，还会自动添加一个名为 &lt;code>row_id&lt;/code> 的隐藏列。&lt;/p>
&lt;ul>
&lt;li>&lt;code>trx_id&lt;/code> 就是某个聚簇索引记录被修改时所在的事务对应的&lt;strong>事务 id&lt;/strong>。&lt;/li>
&lt;li>&lt;code>roll_pointer&lt;/code> 就是一个&lt;strong>指向记录对应的 undo log 的一个指针&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;h3>undo log 回滚段&lt;span class="hx-absolute -hx-mt-20" id="undo-log-回滚段">&lt;/span>
&lt;a href="#undo-log-%e5%9b%9e%e6%bb%9a%e6%ae%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>InnoDB 对 undo log 文件的管理采用段的方式，也就是&lt;strong>回滚段&lt;/strong>（rollback segment）。&lt;strong>每个回滚段记录了 &lt;code>1024&lt;/code> 个 undo log segment，每个事务只会使用一个 undo log segment&lt;/strong>。&lt;/p>
&lt;p>在 MySQL 5.5 时只有一个回滚段，那么最大同时支持的事务数量为 1024 个。MySQL 5.6 以后，InnoDB 支持最大 128 个回滚段，故其支持同时在线的事务限制提高到了 &lt;code>128*1024&lt;/code>。&lt;/p>
&lt;p>查看 undo log 相关参数：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">show&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">variables&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">like&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;%innodb_undo%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">show&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">variables&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">like&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;innodb_rollback_segments&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>innodb_undo_directory&lt;/code>：undo log 文件所在的路径。默认值为 &lt;code>./&lt;/code>，即 innodb 数据文件存储位置，目录下 &lt;code>ibdata1&lt;/code> 文件就是 undo log 存储的位置。&lt;/li>
&lt;li>&lt;code>innodb_undo_tablespaces&lt;/code>: undo log 文件的数量，这样回滚段可以较为平均地分布在多个文件中。设置该参数后，会在路径 &lt;code>innodb_undo_directory&lt;/code> 看到 &lt;code>undo&lt;/code> 为前缀的文件。&lt;/li>
&lt;li>&lt;code>innodb_rollback_segments&lt;/code>: undo log 文件内部回滚段的个数，默认值为 &lt;code>128&lt;/code>。&lt;/li>
&lt;/ul>
&lt;h3>undo log 日志什么时候删除&lt;span class="hx-absolute -hx-mt-20" id="undo-log-日志什么时候删除">&lt;/span>
&lt;a href="#undo-log-%e6%97%a5%e5%bf%97%e4%bb%80%e4%b9%88%e6%97%b6%e5%80%99%e5%88%a0%e9%99%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>新增类型&lt;/strong>的，在&lt;strong>事务提交之后就可以清除掉了&lt;/strong>。&lt;/li>
&lt;li>&lt;strong>修改类型&lt;/strong>的，事务提交之后不能立即清除掉，这些&lt;strong>日志会用于 MVCC。只有当没有事务用到该版本信息时才可以清除&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;h2>错误日志&lt;span class="hx-absolute -hx-mt-20" id="错误日志">&lt;/span>
&lt;a href="#%e9%94%99%e8%af%af%e6%97%a5%e5%bf%97" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>MySQL 有一个比较重要的日志是错误日志，它记录了数据库启动和停止，以及运行过程中发生任何严重错误时的相关信息。当数据库出现任何故障导致无法正常使用时，建议首先查看此日志。在 MySQL 数据库中，错误日志功能是默认开启的，而且无法被关闭。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">show&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">variables&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">like&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;%log_error%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>通用查询日志&lt;span class="hx-absolute -hx-mt-20" id="通用查询日志">&lt;/span>
&lt;a href="#%e9%80%9a%e7%94%a8%e6%9f%a5%e8%af%a2%e6%97%a5%e5%bf%97" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>通用查询日志&lt;strong>记录用户的所有操作&lt;/strong>，包括启动和关闭 MySQL 服务、所有用户的连接开始时间和截止时间、发给 MySQL 数据库服务器的所有 SQL 指令等，如 &lt;code>select&lt;/code>、&lt;code>show&lt;/code> 等，无论 SQL 的语法正确还是错误、也无论 SQL 执行成功还是失败，MySQL 都会将其记录下来。&lt;/p>
&lt;p>一般不建议开启，只在需要调试查询问题时开启。因为开启会消耗系统资源并且占用大量的磁盘空间。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">show&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">variables&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">like&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;%general_log%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 打开通用查询日志
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">GLOBAL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">general_log&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">on&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>慢查询日志&lt;span class="hx-absolute -hx-mt-20" id="慢查询日志">&lt;/span>
&lt;a href="#%e6%85%a2%e6%9f%a5%e8%af%a2%e6%97%a5%e5%bf%97" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>慢查询日志是 MySQL 提供的一种日志记录，它用来记录在 MySQL 中响应时间超过阈值的语句，具体指运行时间超过 &lt;code>long_query_time&lt;/code> 值的 SQL 才会被记录到慢查询日志中。&lt;/p>
&lt;p>&lt;strong>如果不是调优需要的话，不建议启动该参数&lt;/strong>，因为开启慢查询日志会或多或少带来一定的性能影响。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">show&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">variables&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">like&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;%slow_query%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>long_query_time&lt;/code>：慢查询日志的阈值，默认值为 &lt;code>10&lt;/code>，单位为秒。意思是记录运行 10 秒以上的语句。&lt;/li>
&lt;li>&lt;code>log_queries_not_using_indexes&lt;/code>：未使用索引的查询也被记录到慢查询日志中（可选项）。&lt;/li>
&lt;li>&lt;code>log_output&lt;/code>：日志存储方式。&lt;code>log_output='FILE'&lt;/code> 表示将日志存入文件，默认值是 &lt;code>'FILE'&lt;/code>。&lt;code>log_output='TABLE'&lt;/code> 表示将日志存入数据库。&lt;/li>
&lt;li>&lt;code>log_slow_admin_statements&lt;/code>：表示，是否将慢管理语句例如ANALYZE TABLE和ALTER TABLE等记入慢查询日志。&lt;/li>
&lt;/ul>
&lt;p>开启慢查询日志：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 1 表示开启，0 表示关闭
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">GLOBAL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">slow_query_log&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>mysqldumpslow&lt;span class="hx-absolute -hx-mt-20" id="mysqldumpslow">&lt;/span>
&lt;a href="#mysqldumpslow" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>MySQL 提供了日志分析工具 &lt;code>mysqldumpslow&lt;/code>，可以用来分析慢查询日志，找出执行时间比较长的 SQL 语句。&lt;/p>
&lt;p>比如，得到返回记录集最多的 10 个 SQL。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysqldumpslow -s r -t &lt;span class="m">10&lt;/span> /database/mysql/mysql06_slow.log&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>得到访问次数最多的 10 个 SQL：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysqldumpslow -s c -t &lt;span class="m">10&lt;/span> /database/mysql/mysql06_slow.log&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>得到按照时间排序的前 10 条里面含有左连接的查询语句：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysqldumpslow -s t -t &lt;span class="m">10&lt;/span> -g “left join” /database/mysql/mysql06_slow.log&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>建议在使用这些命令时结合 &lt;code>|&lt;/code> 和 &lt;code>more&lt;/code> 使用，否则有可能出现刷屏的情况：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysqldumpslow -s r -t &lt;span class="m">20&lt;/span> /mysqldata/mysql/mysql06-slow.log &lt;span class="p">|&lt;/span> more&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>配置选项</title><link>https://shipengqi.github.io/db-learn/docs/mysql/advance/08_config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/db-learn/docs/mysql/advance/08_config/</guid><description>
&lt;p>MySQL Server 的配置一般都有默认值，可以在命令行中指定启动参数，也可以通过配置文件指定。&lt;/p>
&lt;h2>在命令行上使用选项&lt;span class="hx-absolute -hx-mt-20" id="在命令行上使用选项">&lt;/span>
&lt;a href="#%e5%9c%a8%e5%91%bd%e4%bb%a4%e8%a1%8c%e4%b8%8a%e4%bd%bf%e7%94%a8%e9%80%89%e9%a1%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>示例：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysqld --default-storage-engine&lt;span class="o">=&lt;/span>MyISAM&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>--skip-networking&lt;/code> （或 &lt;code>skip_networking&lt;/code>）选项禁止各客户端使用 TCP/IP 网络进行通信。（多个单词之间可以用 &lt;code>-&lt;/code> 连接，
也可以用 &lt;code>_&lt;/code> 连接）&lt;/li>
&lt;li>&lt;code>--default-storage-engine=&amp;lt;engine&amp;gt;&lt;/code> 改变默认存储引擎。&lt;/li>
&lt;/ul>
&lt;p>查看更多启动选项：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysqld --verbose --help
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysqld_safe --help&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>配置文件中使用选项&lt;span class="hx-absolute -hx-mt-20" id="配置文件中使用选项">&lt;/span>
&lt;a href="#%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e4%b8%ad%e4%bd%bf%e7%94%a8%e9%80%89%e9%a1%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>配置文件的路径&lt;span class="hx-absolute -hx-mt-20" id="配置文件的路径">&lt;/span>
&lt;a href="#%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e7%9a%84%e8%b7%af%e5%be%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>Windows 操作系统的配置文件&lt;span class="hx-absolute -hx-mt-20" id="windows-操作系统的配置文件">&lt;/span>
&lt;a href="#windows-%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f%e7%9a%84%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>MySQL 会按照下列路径来寻找配置文件：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>路径&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>%WINDIR%\my.ini&lt;/code>， &lt;code>%WINDIR%\my.cnf&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C:\my.ini&lt;/code>， &lt;code>C:\my.cnf&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>BASEDIR\my.ini&lt;/code>， &lt;code>BASEDIR\my.cnf&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>defaults-extra-file&lt;/code>&lt;/td>
&lt;td>命令行指定的额外配置文件路径&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>%APPDATA%\MySQL\.mylogin.cnf&lt;/code>&lt;/td>
&lt;td>登录路径选项（仅限客户端）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>&lt;code>%WINDIR%&lt;/code> 一般是 &lt;code>C:\WINDOWS&lt;/code>，可以用 &lt;code>echo %WINDIR%&lt;/code> 来查看。&lt;/li>
&lt;li>&lt;code>BASEDIR&lt;/code> 指的是 MySQL 安装目录的路径&lt;/li>
&lt;li>&lt;code>defaults-extra-file&lt;/code> 在命令行上可以这么写 &lt;code>mysqld --defaults-extra-file=C:\Users\xiaohaizi\my_extra_file.txt&lt;/code>&lt;/li>
&lt;li>&lt;code>%APPDATA%&lt;/code> 表示 Windows 应用程序数据目录的值&lt;/li>
&lt;li>&lt;code>.mylogin.cnf&lt;/code> 中只能包含一些用于启动客户端连接服务端的一些选项，包括 &lt;code>host&lt;/code>、&lt;code>user&lt;/code>、&lt;code>password&lt;/code>、&lt;code>port&lt;/code> 和 &lt;code>socket&lt;/code>。&lt;/li>
&lt;/ul>
&lt;h4>UNIX 操作系统的配置文件&lt;span class="hx-absolute -hx-mt-20" id="unix-操作系统的配置文件">&lt;/span>
&lt;a href="#unix-%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f%e7%9a%84%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>MySQL 会按照下列路径来寻找配置文件：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>路径&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>/etc/my.cnf&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>/etc/mysql/my.cnf&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SYSCONFDIR/my.cnf&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>$MYSQL_HOME/my.cnf&lt;/code>&lt;/td>
&lt;td>特定于服务器的选项（仅限服务器）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>defaults-extra-file&lt;/code>&lt;/td>
&lt;td>命令行指定的额外配置文件路径&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>~/.my.cnf&lt;/code>&lt;/td>
&lt;td>用户特定选项&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>~/.mylogin.cnf&lt;/code>&lt;/td>
&lt;td>登录路径选项（仅限客户端）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>&lt;code>SYSCONFDIR&lt;/code> 表示在使用 CMake 构建 MySQL 时使用 &lt;code>SYSCONFDIR&lt;/code> 选项指定的目录。默认情况下，这是位于编译安装目录下的 &lt;code>etc&lt;/code> 目录。&lt;/li>
&lt;li>&lt;code>MYSQL_HOME&lt;/code> 变量的值是我们自己设置的，也可以不设置。&lt;/li>
&lt;/ul>
&lt;h3>配置文件的内容&lt;span class="hx-absolute -hx-mt-20" id="配置文件的内容">&lt;/span>
&lt;a href="#%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e7%9a%84%e5%86%85%e5%ae%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>配置文件中的启动选项分为多个组，每个组有一个组名，用中括号 &lt;code>[]&lt;/code> 扩起来：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>[server]
(具体的启动选项...)
[mysqld]
(具体的启动选项...)
[mysqld_safe]
(具体的启动选项...)
[client]
(具体的启动选项...)
[mysql]
(具体的启动选项...)
[mysqladmin]
(具体的启动选项...)&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>每个组下边可以定义各自的启动选项：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>[server]
option1 # option1，该选项不需要选项值
option2 = value2 # option2，该选项需要选项值
...&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>配置文件中只能使用长形式的选项&lt;/strong>。上面的文件转成命令行格式就是 &lt;code>--option1 --option2=value2&lt;/code>。&lt;/p>
&lt;p>不同的选项组是给不同的启动命令使用的，如 &lt;code>[mysqld]&lt;/code> 和 &lt;code>[mysql]&lt;/code> 组分别应用于 &lt;code>mysqld&lt;/code> 服务端程序和 &lt;code>mysql&lt;/code> 客户端程序。注意：&lt;/p>
&lt;ul>
&lt;li>&lt;code>[server]&lt;/code> 组下边的启动选项将作用于所有的服务器程序。&lt;/li>
&lt;li>&lt;code>[client]&lt;/code> 组下边的启动选项将作用于所有的客户端程序。&lt;/li>
&lt;li>&lt;code>mysqld_safe&lt;/code> 和 &lt;code>mysql.server&lt;/code> 这两个程序在启动时都会读取 &lt;code>[mysqld]&lt;/code> 选项组中的选项。&lt;/li>
&lt;/ul>
&lt;h4>特定版本的选项组&lt;span class="hx-absolute -hx-mt-20" id="特定版本的选项组">&lt;/span>
&lt;a href="#%e7%89%b9%e5%ae%9a%e7%89%88%e6%9c%ac%e7%9a%84%e9%80%89%e9%a1%b9%e7%bb%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>可以在选项组的名称后加上特定的 MySQL 版本号，比如对于 &lt;code>[mysqld]&lt;/code> 选项组来说，我们可以定义一个 &lt;code>[mysqld-5.7]&lt;/code> 的选项组，它的含义
和 &lt;code>[mysqld]&lt;/code> 一样，只不过只有版本号为 &lt;code>5.7&lt;/code> 的 &lt;code>mysqld&lt;/code> 程序才能使用这个选项组中的选项。&lt;/p>
&lt;h4>配置文件的优先级&lt;span class="hx-absolute -hx-mt-20" id="配置文件的优先级">&lt;/span>
&lt;a href="#%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e7%9a%84%e4%bc%98%e5%85%88%e7%ba%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;strong>如果在多个配置文件中设置了相同的启动选项，那以最后一个配置文件中的为准&lt;/strong>。文件的顺序按照上面的表格从上到下的顺序。&lt;/p>
&lt;h4>同一个配置文件中多个组的优先级&lt;span class="hx-absolute -hx-mt-20" id="同一个配置文件中多个组的优先级">&lt;/span>
&lt;a href="#%e5%90%8c%e4%b8%80%e4%b8%aa%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e4%b8%ad%e5%a4%9a%e4%b8%aa%e7%bb%84%e7%9a%84%e4%bc%98%e5%85%88%e7%ba%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>比如 &lt;code>mysqld&lt;/code> 可以访问 &lt;code>[mysqld]&lt;/code>、&lt;code>[server]&lt;/code> 组，如果在同一个配置文件中，比如 &lt;code>~/.my.cnf&lt;/code>，在这些组里出现了同样的配置项，比如这样：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>[server]
default-storage-engine=InnoDB
[mysqld]
default-storage-engine=MyISAM&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>以最后一组中的启动选项为准&lt;/strong>，比如上面的文件 &lt;code>default-storage-engine&lt;/code> 就以 &lt;code>[mysqld]&lt;/code> 组中的配置项为准。&lt;/p>
&lt;h4>defaults-file&lt;span class="hx-absolute -hx-mt-20" id="defaults-file">&lt;/span>
&lt;a href="#defaults-file" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>如果不想让 MySQL 到默认的路径下搜索配置文件（就是上表中列出的那些），可以在命令行指定 &lt;code>defaults-file&lt;/code> 选项 &lt;code>mysqld --defaults-file=/tmp/myconfig.txt&lt;/code>。这样，在程序启动的时候将只在 &lt;code>/tmp/myconfig.txt&lt;/code> 路径下搜索配置文件。如果文件不存在或无法访问，则会发生错误。&lt;/p>
&lt;p>使用 &lt;code>defaults-extra-file&lt;/code> 可以指定额外的配置文件搜索路径。&lt;/p>
&lt;h4>命令行和配置文件的优先级&lt;span class="hx-absolute -hx-mt-20" id="命令行和配置文件的优先级">&lt;/span>
&lt;a href="#%e5%91%bd%e4%bb%a4%e8%a1%8c%e5%92%8c%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e7%9a%84%e4%bc%98%e5%85%88%e7%ba%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;strong>如果同一个启动选项既出现在命令行中，又出现在配置文件中，那么以命令行中的启动选项为准&lt;/strong>。&lt;/p>
&lt;h2>系统变量&lt;span class="hx-absolute -hx-mt-20" id="系统变量">&lt;/span>
&lt;a href="#%e7%b3%bb%e7%bb%9f%e5%8f%98%e9%87%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;code>SHOW VARIABLES [LIKE 匹配的模式];&lt;/code> 查看 MySQL 服务器程序支持的系统变量以及它们的当前值。&lt;/p>
&lt;p>&lt;strong>大部分系统变量的值可以在服务端程序运行过程中进行动态修改而无需停止并重启服务器&lt;/strong>。&lt;/p>
&lt;h3>设置系统变量&lt;span class="hx-absolute -hx-mt-20" id="设置系统变量">&lt;/span>
&lt;a href="#%e8%ae%be%e7%bd%ae%e7%b3%bb%e7%bb%9f%e5%8f%98%e9%87%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>通过启动选项设置&lt;span class="hx-absolute -hx-mt-20" id="通过启动选项设置">&lt;/span>
&lt;a href="#%e9%80%9a%e8%bf%87%e5%90%af%e5%8a%a8%e9%80%89%e9%a1%b9%e8%ae%be%e7%bd%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>通过命令行添加启动选项和配置文件。例如：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">mysqld --default-storage-engine&lt;span class="o">=&lt;/span>MyISAM --max-connections&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>或者&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>[server]
default-storage-engine=MyISAM
max-connections=10&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>max-connections&lt;/code> 表示允许同时连入的客户端数量。&lt;/p>
&lt;h4>服务器程序运行过程中设置&lt;span class="hx-absolute -hx-mt-20" id="服务器程序运行过程中设置">&lt;/span>
&lt;a href="#%e6%9c%8d%e5%8a%a1%e5%99%a8%e7%a8%8b%e5%ba%8f%e8%bf%90%e8%a1%8c%e8%bf%87%e7%a8%8b%e4%b8%ad%e8%ae%be%e7%bd%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>设置不同作用范围的系统变量&lt;span class="hx-absolute -hx-mt-20" id="设置不同作用范围的系统变量">&lt;/span>
&lt;a href="#%e8%ae%be%e7%bd%ae%e4%b8%8d%e5%90%8c%e4%bd%9c%e7%94%a8%e8%8c%83%e5%9b%b4%e7%9a%84%e7%b3%bb%e7%bb%9f%e5%8f%98%e9%87%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>了针对不同的客户端设置不同的系统变量：&lt;/p>
&lt;ul>
&lt;li>&lt;code>GLOBAL&lt;/code>：全局变量，影响服务器的整体操作。&lt;/li>
&lt;li>&lt;code>SESSION&lt;/code>：会话变量，影响某个客户端连接的操作。（&lt;code>SESSION&lt;/code> 有个别名叫 &lt;code>LOCAL&lt;/code>）&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>通过启动选项设置的系统变量的作用范围都是 &lt;code>GLOBAL&lt;/code> 的&lt;/strong>，也就是对所有客户端都有效的，因为在系统启动的时候还没有客户端程序连接进来。&lt;/p>
&lt;p>通过客户端程序设置系统变量的语法：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">SET &lt;span class="o">[&lt;/span>GLOBAL&lt;span class="p">|&lt;/span>SESSION&lt;span class="o">]&lt;/span> &lt;span class="nv">系统变量名&lt;/span> &lt;span class="o">=&lt;/span> 值&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 或者&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">SET &lt;span class="o">[&lt;/span>@@&lt;span class="o">(&lt;/span>GLOBAL&lt;span class="p">|&lt;/span>SESSION&lt;span class="o">)&lt;/span>.&lt;span class="o">]&lt;/span>&lt;span class="nv">var_name&lt;/span> &lt;span class="o">=&lt;/span> XXX&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>比如在服务端进程运行过程中把作用范围为 &lt;code>GLOBAL&lt;/code> 的系统变量 &lt;code>default_storage_engine&lt;/code> 的值修改为 &lt;code>MyISAM&lt;/code>，也就是想让之后新连接到服务器的客户端都用 &lt;code>MyISAM&lt;/code> 作为默认的存储引擎：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">语句一：SET GLOBAL &lt;span class="nv">default_storage_engine&lt;/span> &lt;span class="o">=&lt;/span> MyISAM&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">语句二：SET @@GLOBAL.default_storage_engine &lt;span class="o">=&lt;/span> MyISAM&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>只对本客户端生效：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">语句一：SET SESSION &lt;span class="nv">default_storage_engine&lt;/span> &lt;span class="o">=&lt;/span> MyISAM&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">语句二：SET @@SESSION.default_storage_engine &lt;span class="o">=&lt;/span> MyISAM&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">语句三：SET &lt;span class="nv">default_storage_engine&lt;/span> &lt;span class="o">=&lt;/span> MyISAM&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>&lt;code>SESSION&lt;/code> 是默认的作用范围&lt;/strong>。&lt;/p>
&lt;blockquote>
&lt;p>如果某个客户端改变了某个系统变量在 &lt;code>GLOBAL&lt;/code> 作用范围的值，并不会影响该系统变量在当前已经连接的客户端作用范围为 &lt;code>SESSION&lt;/code> 的值，只会影响后续连入的客户端在作用范围为 &lt;code>SESSION&lt;/code> 的值。&lt;/p>
&lt;/blockquote>
&lt;p>注意：&lt;/p>
&lt;ul>
&lt;li>有一些系统变量只具有 &lt;code>GLOBAL&lt;/code> 作用范围，如 &lt;code>max_connections&lt;/code>。&lt;/li>
&lt;li>有一些系统变量只具有 &lt;code>SESSION&lt;/code> 作用范围，如 &lt;code>insert_id&lt;/code>，表示在对某个包含 &lt;code>AUTO_INCREMENT&lt;/code> 列的表进行插入时，该列初始的值。&lt;/li>
&lt;li>有些系统变量是只读的，并不能设置值。如 version，表示当前 MySQL 的版本。&lt;/li>
&lt;/ul>
&lt;h2>状态变量&lt;span class="hx-absolute -hx-mt-20" id="状态变量">&lt;/span>
&lt;a href="#%e7%8a%b6%e6%80%81%e5%8f%98%e9%87%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>MySQL 服务器程序中维护了很多关于程序运行状态的变量，它们被称为&lt;strong>状态变量&lt;/strong>。&lt;strong>它们的值只能由服务器程序自己来设置&lt;/strong>。状态变量也有 &lt;code>GLOBAL&lt;/code> 和 &lt;code>SESSION&lt;/code> 两个作用范围的，所以查看状态变量的语句可以这么写：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SHOW&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="k">GLOBAL&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="k">SESSION&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">STATUS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="k">LIKE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">匹配的模式&lt;/span>&lt;span class="p">];&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>字符集</title><link>https://shipengqi.github.io/db-learn/docs/mysql/advance/09_character/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/db-learn/docs/mysql/advance/09_character/</guid><description>
&lt;h2>字符集和比较规则简介&lt;span class="hx-absolute -hx-mt-20" id="字符集和比较规则简介">&lt;/span>
&lt;a href="#%e5%ad%97%e7%ac%a6%e9%9b%86%e5%92%8c%e6%af%94%e8%be%83%e8%a7%84%e5%88%99%e7%ae%80%e4%bb%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>字符集简介&lt;span class="hx-absolute -hx-mt-20" id="字符集简介">&lt;/span>
&lt;a href="#%e5%ad%97%e7%ac%a6%e9%9b%86%e7%ae%80%e4%bb%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>计算机中只能存储二进制数据，如何存储字符串？当然是&lt;strong>建立字符与二进制数据的映射关系&lt;/strong>，建立这个关系要搞清楚两件事儿：&lt;/p>
&lt;ul>
&lt;li>要把哪些字符映射成二进制数据？也就是界定清楚字符范围。&lt;/li>
&lt;li>怎么映射？将一个字符映射成一个二进制数据的过程也叫做&lt;strong>编码&lt;/strong>，将一个二进制数据映射到一个字符的过程叫做&lt;strong>解码&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>字符集&lt;/strong>就是来描述某个字符范围的编码规则。&lt;/p>
&lt;h3>比较规则简介&lt;span class="hx-absolute -hx-mt-20" id="比较规则简介">&lt;/span>
&lt;a href="#%e6%af%94%e8%be%83%e8%a7%84%e5%88%99%e7%ae%80%e4%bb%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>怎么比较两个字符？最容易的就是直接比较这两个字符对应的二进制编码的大小。如，字符 &amp;lsquo;a&amp;rsquo; 的编码为 &lt;code>0x01&lt;/code>，字符 &amp;lsquo;b&amp;rsquo; 的编码为 &lt;code>0x02&lt;/code>，所以 &amp;lsquo;a&amp;rsquo; 小于 &amp;lsquo;b&amp;rsquo;。&lt;/p>
&lt;p>二进制比较规则很简单，但有时候并不符合现实需求，比如在有些场景对于英文字符不区分大小写。这时候可以这样指定比较规则：&lt;/p>
&lt;ol>
&lt;li>将两个大小写不同的字符全都转为大写或者小写。&lt;/li>
&lt;li>再比较这两个字符对应的二进制数据。&lt;/li>
&lt;/ol>
&lt;p>但是实际生活中的字符不止英文字符一种，比如汉字有几万之多，&lt;strong>同一种字符集可以有多种比较规则&lt;/strong>。&lt;/p>
&lt;h3>为什么会有乱码&lt;span class="hx-absolute -hx-mt-20" id="为什么会有乱码">&lt;/span>
&lt;a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e4%bc%9a%e6%9c%89%e4%b9%b1%e7%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>字符 &lt;code>'我'&lt;/code> 在 &lt;code>utf8&lt;/code> 字符集编码下的字节串长这样：&lt;code>0xE68891&lt;/code>，如果一个程序把这个字节串发送到另一个程序里，另一个程序用不同的字符集去解码这个字节串，假设使用的是 &lt;code>gbk&lt;/code> 字符集来解释这串字节，解码过程就是这样的：&lt;/p>
&lt;ol>
&lt;li>首先看第一个字节 &lt;code>0xE6&lt;/code>，它的值大于 &lt;code>0x7F&lt;/code>（十进制：127），说明是两字节编码，继续读一字节后是 &lt;code>0xE688&lt;/code>，然后从 &lt;code>gbk&lt;/code> 编码表中查找字节为 &lt;code>0xE688&lt;/code> 对应的字符，发现是字符&lt;code>'鎴'&lt;/code>&lt;/li>
&lt;li>继续读一个字节 &lt;code>0x91&lt;/code>，它的值也大于 &lt;code>0x7F&lt;/code>，再往后读一个字节发现木有了，所以这是半个字符。&lt;/li>
&lt;li>所以 &lt;code>0xE68891&lt;/code> 被 &lt;code>gbk&lt;/code> 字符集解释成一个字符 &lt;code>'鎴'&lt;/code> 和半个字符。&lt;/li>
&lt;/ol>
&lt;p>如果对于同一个字符串编码和解码使用的字符集不一样，就会产生乱码。&lt;/p>
&lt;h2>MySQL 中支持的字符集和排序规则&lt;span class="hx-absolute -hx-mt-20" id="mysql-中支持的字符集和排序规则">&lt;/span>
&lt;a href="#mysql-%e4%b8%ad%e6%94%af%e6%8c%81%e7%9a%84%e5%ad%97%e7%ac%a6%e9%9b%86%e5%92%8c%e6%8e%92%e5%ba%8f%e8%a7%84%e5%88%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>字符集的查看&lt;span class="hx-absolute -hx-mt-20" id="字符集的查看">&lt;/span>
&lt;a href="#%e5%ad%97%e7%ac%a6%e9%9b%86%e7%9a%84%e6%9f%a5%e7%9c%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>查看当前 MySQL 中支持的字符集 &lt;code>show (character set|charset) [like 匹配的模式];&lt;/code>。&lt;code>character set&lt;/code> 和 &lt;code>charset&lt;/code> 是一个意思。&lt;/p>
&lt;h3>比较规则查看&lt;span class="hx-absolute -hx-mt-20" id="比较规则查看">&lt;/span>
&lt;a href="#%e6%af%94%e8%be%83%e8%a7%84%e5%88%99%e6%9f%a5%e7%9c%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>查看 MySQL 中支持的比较规则 &lt;code>show collation [like 匹配的模式];&lt;/code>。&lt;/p>
&lt;p>查看 &lt;code>utf8&lt;/code> 字符集下的比较规则：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; show collation like &lt;span class="s1">&amp;#39;utf8\_%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------------+---------+-----+---------+----------+---------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> Collation &lt;span class="p">|&lt;/span> Charset &lt;span class="p">|&lt;/span> Id &lt;span class="p">|&lt;/span> Default &lt;span class="p">|&lt;/span> Compiled &lt;span class="p">|&lt;/span> Sortlen &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------------+---------+-----+---------+----------+---------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_general_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">33&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_bin &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">83&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_unicode_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">192&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_icelandic_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">193&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_latvian_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">194&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_romanian_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">195&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_slovenian_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">196&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_polish_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">197&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_estonian_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">198&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_spanish_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">199&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_swedish_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">200&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_turkish_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">201&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_czech_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">202&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_danish_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">203&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_lithuanian_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">204&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_slovak_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">205&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_spanish2_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">206&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_roman_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">207&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_persian_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">208&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_esperanto_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">209&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_hungarian_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">210&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_sinhala_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">211&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_german2_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">212&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_croatian_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">213&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_unicode_520_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">214&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_vietnamese_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">215&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8_general_mysql500_ci &lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> &lt;span class="m">223&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------------+---------+-----+---------+----------+---------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>比较规则名称都是以 utf8 开头的，后边紧跟着该比较规则主要作用于哪种语言，名称后缀意味着该比较规则是否区分语言中的重音、大小写啥的：&lt;/p>
&lt;ul>
&lt;li>&lt;code>_ai&lt;/code>，accent insensitive，不区分重音&lt;/li>
&lt;li>&lt;code>_as&lt;/code>，accent sensitive，区分重音&lt;/li>
&lt;li>&lt;code>_ci&lt;/code>，case insensitive，不区分大小写&lt;/li>
&lt;li>&lt;code>_cs&lt;/code>，case sensitive，区分大小写&lt;/li>
&lt;li>&lt;code>_bin&lt;/code>，binary，以二进制方式比较&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>每种字符集对应多种种比较规则，每种字符集都有一种默认的比较规则&lt;/strong>（&lt;code>Default&lt;/code> 列的值为 &lt;code>YES&lt;/code> 的）。&lt;/p>
&lt;h2>字符集和比较规则的应用&lt;span class="hx-absolute -hx-mt-20" id="字符集和比较规则的应用">&lt;/span>
&lt;a href="#%e5%ad%97%e7%ac%a6%e9%9b%86%e5%92%8c%e6%af%94%e8%be%83%e8%a7%84%e5%88%99%e7%9a%84%e5%ba%94%e7%94%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>MySQL 有 4 个级别的字符集和比较规则，分别是：&lt;/p>
&lt;ul>
&lt;li>服务器级别&lt;/li>
&lt;li>数据库级别&lt;/li>
&lt;li>表级别&lt;/li>
&lt;li>列级别&lt;/li>
&lt;/ul>
&lt;h3>服务器级别&lt;span class="hx-absolute -hx-mt-20" id="服务器级别">&lt;/span>
&lt;a href="#%e6%9c%8d%e5%8a%a1%e5%99%a8%e7%ba%a7%e5%88%ab" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>MySQL 提供了两个系统变量来表示服务器级别的字符集和比较规则：&lt;/p>
&lt;ul>
&lt;li>&lt;code>character_set_server&lt;/code> 服务器级别的字符集。&lt;/li>
&lt;li>&lt;code>collation_server&lt;/code> 服务器级别的比较规则。&lt;/li>
&lt;/ul>
&lt;h3>数据库级别&lt;span class="hx-absolute -hx-mt-20" id="数据库级别">&lt;/span>
&lt;a href="#%e6%95%b0%e6%8d%ae%e5%ba%93%e7%ba%a7%e5%88%ab" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>创建和修改数据库的时候可以指定该数据库的字符集和比较规则，具体语法如下：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">create&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">database&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">数据库名&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">character&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">字符集名称&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">collate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">比较规则名称&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">alter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">database&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">数据库名&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">character&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">字符集名称&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">collate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">比较规则名称&lt;/span>&lt;span class="p">];&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>DEFAULT&lt;/code> 可以省略。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="n">mysql&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DATABASE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">charset_demo_db&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">CHARACTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">gb2312&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">COLLATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">gb2312_chinese_ci&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Query&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">OK&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">row&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">affected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">01&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sec&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>上面语句表示创建一个名叫 &lt;code>charset_demo_db&lt;/code> 的数据库，指定它的字符集为 &lt;code>gb2312&lt;/code>，比较规则为 &lt;code>gb2312_chinese_ci&lt;/code>。&lt;/p>
&lt;p>查看当前数据库使用的字符集和比较规则（先使用 &lt;code>use&lt;/code> 语句选择当前数据库）：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">show&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">variables&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">like&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;character_set_database&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>character_set_database&lt;/code> 当前数据库的字符集。&lt;/li>
&lt;li>&lt;code>collation_database&lt;/code> 当前数据库的比较规则。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>character_set_database&lt;/code> 和 &lt;code>collation_database&lt;/code> 这两个系统变量是&lt;strong>只读&lt;/strong>的，不能修改。&lt;/p>
&lt;/blockquote>
&lt;p>如果&lt;strong>数据库没有指定字符集和比较规则&lt;/strong>，那么会&lt;strong>使用服务器级别的字符集和比较规则&lt;/strong>。&lt;/p>
&lt;h3>表级别&lt;span class="hx-absolute -hx-mt-20" id="表级别">&lt;/span>
&lt;a href="#%e8%a1%a8%e7%ba%a7%e5%88%ab" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>指定表的字符集和比较规则，语法如下：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">create&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">表名&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">列的信息&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">character&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">字符集名称&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="k">collate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">比较规则名称&lt;/span>&lt;span class="p">]]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">alter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">表名&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">character&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">字符集名称&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="k">collate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">比较规则名称&lt;/span>&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>比如创建一个名为 &lt;code>t&lt;/code> 的表，并指定这个表的字符集和比较规则：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="n">mysql&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">create&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">col&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">varchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">character&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">utf8&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">collate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">utf8_general_ci&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Query&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">OK&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">rows&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">affected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">03&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sec&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>如果&lt;strong>表没有指定字符集和比较规则&lt;/strong>，那么&lt;strong>使用该表所在数据库的字符集和比较规则&lt;/strong>。&lt;/p>
&lt;h3>列级别&lt;span class="hx-absolute -hx-mt-20" id="列级别">&lt;/span>
&lt;a href="#%e5%88%97%e7%ba%a7%e5%88%ab" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>同一个表中的不同的列也可以有不同的字符集和比较规则&lt;/strong>。指定列的字符集和比较规则，语法如下：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cretae&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">表名&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">列名&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">字符串类型&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">character&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">字符集名称&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="k">collate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">比较规则名称&lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="err">其他列&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">alter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">表名&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">modify&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">列名&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">字符串类型&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">character&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">字符集名称&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="k">collate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">比较规则名称&lt;/span>&lt;span class="p">];&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>比如我们修改一下表 &lt;code>t&lt;/code> 中列 &lt;code>col&lt;/code> 的字符集和比较规则可以这么写：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="n">mysql&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">alter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">modify&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">col&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">varchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">character&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">gbk&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">collate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">gbk_chinese_ci&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Query&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">OK&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">rows&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">affected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">04&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sec&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Records&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Duplicates&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Warnings&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>如果&lt;strong>没有指定该列的字符集和比较规则&lt;/strong>，那么会&lt;strong>使用该列所在表的字符集和比较规则&lt;/strong>。&lt;/p>
&lt;blockquote>
&lt;p>在转换列的字符集时，如果转换前列中存储的数据不能用转换后的字符集进行表示，就会发生错误。如，之前列的字符集是 &lt;code>utf8&lt;/code>，并存储了一些汉字，现在把列的字符集转换为 &lt;code>ascii&lt;/code> 的话就会出错，因为 &lt;code>ascii&lt;/code> 字符集并不能表示汉字字符。&lt;/p>
&lt;/blockquote>
&lt;h3>仅修改字符集或仅修改比较规则&lt;span class="hx-absolute -hx-mt-20" id="仅修改字符集或仅修改比较规则">&lt;/span>
&lt;a href="#%e4%bb%85%e4%bf%ae%e6%94%b9%e5%ad%97%e7%ac%a6%e9%9b%86%e6%88%96%e4%bb%85%e4%bf%ae%e6%94%b9%e6%af%94%e8%be%83%e8%a7%84%e5%88%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>由于字符集和比较规则是互相有联系的，如果只修改了字符集，比较规则也会跟着变化，如果只修改了比较规则，字符集也会跟着变化，具体规则如下：&lt;/p>
&lt;ul>
&lt;li>只修改字符集，则比较规则将变为修改后的字符集默认的比较规则。&lt;/li>
&lt;li>只修改比较规则，则字符集将变为修改后的比较规则对应的字符集。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>不论哪个级别的字符集和比较规则，这两条规则都适用&lt;/strong>。&lt;/p>
&lt;h3>客户端和服务器通信中的字符集&lt;span class="hx-absolute -hx-mt-20" id="客户端和服务器通信中的字符集">&lt;/span>
&lt;a href="#%e5%ae%a2%e6%88%b7%e7%ab%af%e5%92%8c%e6%9c%8d%e5%8a%a1%e5%99%a8%e9%80%9a%e4%bf%a1%e4%b8%ad%e7%9a%84%e5%ad%97%e7%ac%a6%e9%9b%86" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>字符集转换&lt;span class="hx-absolute -hx-mt-20" id="字符集转换">&lt;/span>
&lt;a href="#%e5%ad%97%e7%ac%a6%e9%9b%86%e8%bd%ac%e6%8d%a2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>字符 &lt;code>'我'&lt;/code> 在 &lt;code>utf8&lt;/code> 字符集编码下的字节串长这样：&lt;code>0xE68891&lt;/code>。&lt;/p>
&lt;p>如果接收 &lt;code>0xE68891&lt;/code> 这个字节串的程序按照 &lt;code>utf8&lt;/code> 字符集进行解码，然后又把它按照 &lt;code>gbk&lt;/code> 字符集进行编码，最后编码后的字节串就是 &lt;code>0xCED2&lt;/code>，把这个过程称为&lt;strong>字符集的转换&lt;/strong>，也就是字符串 &lt;code>'我'&lt;/code> 从 &lt;code>utf8&lt;/code> 字符集转换为 &lt;code>gbk&lt;/code> 字符集。&lt;/p>
&lt;h4>MySQL 中字符集的转换&lt;span class="hx-absolute -hx-mt-20" id="mysql-中字符集的转换">&lt;/span>
&lt;a href="#mysql-%e4%b8%ad%e5%ad%97%e7%ac%a6%e9%9b%86%e7%9a%84%e8%bd%ac%e6%8d%a2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>从客户端发往服务端的请求本质上就是一个字符串，服务端向客户端返回的结果本质上也是一个字符串，而字符串其实是使用某种字符集编码的二进制数据。这个字符串可不是使用一种字符集的编码方式一条道走到黑的，&lt;strong>从发送请求到返回结果这个过程中伴随着多次字符集的转换&lt;/strong>，在这个过程中会用到 3 个系统变量：&lt;/p>
&lt;ul>
&lt;li>&lt;code>character_set_client&lt;/code> 服务端解码请求时使用的字符集&lt;/li>
&lt;li>&lt;code>character_set_connection&lt;/code> 服务端处理请求时会把请求字符串从 &lt;code>character_set_client&lt;/code> 转为 &lt;code>character_set_connection&lt;/code>&lt;/li>
&lt;li>&lt;code>character_set_results&lt;/code> 服务端向客户端返回数据时使用的字符集&lt;/li>
&lt;/ul>
&lt;p>这三个系统变量的值可能默认都是 &lt;code>utf8&lt;/code>。为了体现出字符集在请求处理过程中的变化，这里特意修改一个系统变量的值：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="nb">set&lt;/span> &lt;span class="nv">character_set_connection&lt;/span> &lt;span class="o">=&lt;/span> gbk&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>所以现在系统变量 &lt;code>character_set_client&lt;/code> 和 &lt;code>character_set_results&lt;/code> 的值还是 &lt;code>utf8&lt;/code>，而 &lt;code>character_set_connection&lt;/code> 的值为 &lt;code>gbk&lt;/code>。现在假设客户端发送的请求是下边这个字符串：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;我&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>分析字符 &lt;code>'我'&lt;/code> 在这个过程中字符集的转换。请求从发送到结果返回过程中字符集的变化：&lt;/p>
&lt;ol>
&lt;li>客户端发送请求所使用的字符集&lt;/li>
&lt;/ol>
&lt;p>一般情况下客户端所使用的字符集和当前操作系统一致，不同操作系统使用的字符集可能不一样，如下：&lt;/p>
&lt;ul>
&lt;li>类 &lt;code>Unix&lt;/code> 系统使用的是 &lt;code>utf8&lt;/code>&lt;/li>
&lt;li>&lt;code>Windows&lt;/code> 使用的是 &lt;code>gbk&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>例如在使用的 &lt;code>linux&lt;/code> 操作系统时，客户端使用的就是 &lt;code>utf8&lt;/code> 字符集。所以字符 &lt;code>'我'&lt;/code> 在发送给服务端的请求中的字节形式就是：&lt;code>0xE68891&lt;/code>。&lt;/p>
&lt;ol start="2">
&lt;li>
&lt;p>服务端接收到客户端发送来的请求其实是一串二进制的字节，它会认为这串字节采用的字符集是 &lt;code>character_set_client&lt;/code>，然后把这串字节转换为 &lt;code>character_set_connection&lt;/code> 字符集编码的字符。由于计算机上 &lt;code>chacharacter_set_client&lt;/code> 的值是 &lt;code>utf8&lt;/code>，首先会按照 &lt;code>utf8&lt;/code> 字符集对字节串 &lt;code>0xE68891&lt;/code> 进行解码，得到的字符串就是 &lt;code>'我'&lt;/code>，然后按照 &lt;code>character_set_connection&lt;/code> 代表的字符集，也就是 &lt;code>gbk&lt;/code> 进行编码，得到的结果就是字节串 &lt;code>0xCED2&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>因为表 &lt;code>t&lt;/code> 的列 &lt;code>col&lt;/code> 采用的是 &lt;code>gbk&lt;/code> 字符集，与 &lt;code>character_set_connection&lt;/code> 一致，所以直接到列中找字节值为 &lt;code>0xCED2&lt;/code> 的记录，最后找到了一条记录。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>如果某个列使用的字符集和 &lt;code>character_set_connection&lt;/code> 代表的字符集不一致的话，还需要再进行一次字符集转换&lt;/strong>。&lt;/p>
&lt;ol start="4">
&lt;li>
&lt;p>上一步骤找到的记录中的 &lt;code>col&lt;/code> 列其实是一个字节串 &lt;code>0xCED2&lt;/code>，&lt;code>col&lt;/code> 列是采用 &lt;code>gbk&lt;/code> 进行编码的，所以首先会将这个字节串使用 &lt;code>gbk&lt;/code> 进行解码，得到字符串&lt;code>'我'&lt;/code>，然后再把这个字符串使用 &lt;code>character_set_results&lt;/code> 代表的字符集，也就是 &lt;code>utf8&lt;/code> 进行编码，得到了新的字节串：&lt;code>0xE68891&lt;/code>，然后发送给客户端。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>由于客户端是用的字符集是 &lt;code>utf8&lt;/code>，所以可以顺利的将 &lt;code>0xE68891&lt;/code> 解释成字符&lt;code>'我'&lt;/code>，从而显示到我们的显示器上。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>几点需要注意的地方：&lt;/p>
&lt;ul>
&lt;li>假设你的客户端采用的字符集和 &lt;code>character_set_client&lt;/code> 不一样的话，这就会出现意想不到的情况。&lt;/li>
&lt;li>假设你的客户端采用的字符集和 &lt;code>character_set_results&lt;/code> 不一样的话，这就可能会出现客户端无法解码结果集的情况&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>通常都把 &lt;code>character_set_client&lt;/code>、&lt;code>character_set_connection&lt;/code>、&lt;code>character_set_results&lt;/code> 这三个系统变量设置成和客户端使用的字符集一致的情况，这样减少了很多无谓的字符集转换&lt;/strong>。&lt;/p>
&lt;/blockquote>
&lt;p>MySQL 提供了一条非常简便的语句:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NAMES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">字符集名&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>效果与下面的三条语句的执行效果一样：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">character_set_client&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">字符集名&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">character_set_connection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">字符集名&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">character_set_results&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">字符集名&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>也可以写到配置文件里：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>[client]
default-character-set=utf8&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>如果使用的是 Windows 系统，那应该设置成 &lt;code>gbk&lt;/code>。&lt;/p>
&lt;/blockquote>
&lt;h4>比较规则的应用&lt;span class="hx-absolute -hx-mt-20" id="比较规则的应用">&lt;/span>
&lt;a href="#%e6%af%94%e8%be%83%e8%a7%84%e5%88%99%e7%9a%84%e5%ba%94%e7%94%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;strong>比较规则&lt;/strong>的作用通常体现在&lt;strong>比较字符串大小的表达式&lt;/strong>以及&lt;strong>对某个字符串列进行排序&lt;/strong>中，所以有时候也称为&lt;strong>排序规则&lt;/strong>。比方说表 &lt;code>t&lt;/code> 的列 &lt;code>col&lt;/code> 使用的字符集是 &lt;code>gbk&lt;/code>，使用的比较规则是 &lt;code>gbk_chinese_ci&lt;/code>，我们向里边插入几条记录：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; INSERT INTO t&lt;span class="o">(&lt;/span>col&lt;span class="o">)&lt;/span> VALUES&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;A&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;B&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">4&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Records: &lt;span class="m">4&lt;/span> Duplicates: &lt;span class="m">0&lt;/span> Warnings: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>查询的时候按照 &lt;code>col&lt;/code> 列排序一下：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SELECT * FROM t ORDER BY col&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> col &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> a &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> A &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> b &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> B &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> 我 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">5&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>可以看到在默认的比较规则 &lt;code>gbk_chinese_ci&lt;/code> 中是不区分大小写的，我们现在把列 &lt;code>col&lt;/code> 的比较规则修改为 &lt;code>gbk_bin&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; ALTER TABLE t MODIFY col VARCHAR&lt;span class="o">(&lt;/span>10&lt;span class="o">)&lt;/span> COLLATE gbk_bin&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">5&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.02 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Records: &lt;span class="m">5&lt;/span> Duplicates: &lt;span class="m">0&lt;/span> Warnings: &lt;span class="m">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>gbk_bin&lt;/code> 是直接比较字符的编码，所以是区分大小写的，我们再看一下排序后的查询结果：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SELECT * FROM t ORDER BY col&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> s &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> A &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> B &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> a &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> b &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> 我 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">5&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>查询成本和扫描区间</title><link>https://shipengqi.github.io/db-learn/docs/mysql/advance/10_cost/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/db-learn/docs/mysql/advance/10_cost/</guid><description>
&lt;p>MySQL 查询优化器决策&lt;strong>是否使用某个索引执行查询时的依据是使用该索引的成本是否足够低&lt;/strong>，而&lt;strong>成本很大程度上取决于需要扫描的二级索引记录数量占表中所有记录数量的比例&lt;/strong>。&lt;/p>
&lt;p>需要扫描的二级索引记录越多，需要执行的回表操作也就越多。如果需要扫描的二级索引记录占全部记录的比例达到某个范围，那优化器就可能选择使用全表扫描的方式执行查询（一个极端的例子就是扫描全部的二级索引记录，那么将对所有的二级索引记录执行回表操作，显然还不如直接全表扫描）。&lt;/p>
&lt;h2>扫描区间和边界条件&lt;span class="hx-absolute -hx-mt-20" id="扫描区间和边界条件">&lt;/span>
&lt;a href="#%e6%89%ab%e6%8f%8f%e5%8c%ba%e9%97%b4%e5%92%8c%e8%be%b9%e7%95%8c%e6%9d%a1%e4%bb%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>示例：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UNSIGNED&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AUTO_INCREMENT&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">key1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">common_field&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_key1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Engine&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">InnoDB&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">utf8&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 插入一些数据
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">VALUES&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">80&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">53&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">63&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">99&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">66&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">66&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">90&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>如果使用 &lt;code>idx_key1&lt;/code> 执行该查询的话，那么就需要扫描 &lt;code>key1&lt;/code> 值在 &lt;code>(20, 50)&lt;/code> 这个区间中的所有二级索引记录，&lt;code>(20, 50)&lt;/code> 就是 &lt;code>idx_key1&lt;/code> 执行上述查询时的&lt;strong>扫描区间&lt;/strong>，把 &lt;code>key1 &amp;gt; 20 AND key1 &amp;lt; 50&lt;/code> 称作形成该扫描区间的&lt;strong>边界条件&lt;/strong>。&lt;/p>
&lt;p>只要索引列和常数使用 &lt;code>=&lt;/code>、&lt;code>&amp;lt;=&amp;gt;&lt;/code>、&lt;code>IN&lt;/code>、&lt;code>NOT IN&lt;/code>、&lt;code>IS NULL&lt;/code>、&lt;code>IS NOT NULL&lt;/code>、&lt;code>&amp;gt;&lt;/code>、&lt;code>&amp;lt;&lt;/code>、&lt;code>&amp;gt;=&lt;/code>、&lt;code>&amp;lt;=&lt;/code>、&lt;code>BETWEEN&lt;/code>、&lt;code>!=&lt;/code> 或者 &lt;code>LIKE&lt;/code> 操作符连接起来，就可以产生所谓的扫描区间。&lt;/p>
&lt;ul>
&lt;li>&lt;code>IN&lt;/code> 操作符的语义和若干个等值匹配操作符 &lt;code>=&lt;/code> 之间用 &lt;code>OR&lt;/code> 连接起来的语义是一样的，它们都会产生多个单点扫描区间，比如下边这两个语句的语义上的效果是一样的：&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">single_table&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">IN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">single_table&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">OR&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>优化器会将 &lt;code>IN&lt;/code> 子句中的条件看成是 2 个范围区间（虽然这两个区间中都仅仅包含一个值）：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>[&amp;#39;a&amp;#39;, &amp;#39;a&amp;#39;]
[&amp;#39;b&amp;#39;, &amp;#39;b&amp;#39;]&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>!=&lt;/code> 产生的扫描区间：&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">single_table&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>对应的扫描区间就是：&lt;code>(-∞, 'a')&lt;/code> 和 &lt;code>('a', +∞)&lt;/code>。&lt;/p>
&lt;ul>
&lt;li>&lt;code>LIKE&lt;/code> 操作符比较特殊，例如 &lt;code>key1 LIKE 'a%'&lt;/code> 形成的扫描区间相当于是 &lt;code>['a', 'b')&lt;/code>。&lt;/li>
&lt;/ul>
&lt;h2>IS NULL、IS NOT NULL、!= 到底能不能用索引？&lt;span class="hx-absolute -hx-mt-20" id="is-nullis-not-null-到底能不能用索引">&lt;/span>
&lt;a href="#is-nullis-not-null-%e5%88%b0%e5%ba%95%e8%83%bd%e4%b8%8d%e8%83%bd%e7%94%a8%e7%b4%a2%e5%bc%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;code>s1&lt;/code> 表的聚簇索引示意图：&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/id-index-demo.png" alt="id-index-demo" loading="lazy" />&lt;/p>
&lt;p>&lt;code>idx_key1&lt;/code> 二级索引示意图：&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/id-key-index-demo.png" alt="id-key-index-demo" loading="lazy" />&lt;/p>
&lt;p>图中可以看出，&lt;strong>值为 &lt;code>NULL&lt;/code> 的二级索引记录都被放到了 B+ 树的最左边&lt;/strong>，InnoDB 的设计：&lt;code>We define the SQL null to be the smallest possible value of a field.&lt;/code> ，也就是认为 &lt;strong>&lt;code>NULL&lt;/code>值是最小的&lt;/strong>。&lt;/p>
&lt;h3>IS NULL&lt;span class="hx-absolute -hx-mt-20" id="is-null">&lt;/span>
&lt;a href="#is-null" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>示例：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">IS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>优化器在真正执行查询前，会首先少量的访问一下索引，调查一下 &lt;code>key1&lt;/code> 在 &lt;code>[NULL, NULL]&lt;/code> 这个区间的记录有多少条。上面的示意图中可以看出需要扫描的二级索引记录占总记录条数的比例是 &lt;code>3/16&lt;/code>。它觉得这个查询使用二级索引来执行比较靠谱，所以会使用这个 &lt;code>idx_key1&lt;/code> 索引来执行查询。&lt;/p>
&lt;h3>IS NOT NULL&lt;span class="hx-absolute -hx-mt-20" id="is-not-null">&lt;/span>
&lt;a href="#is-not-null" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">IS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>NULL&lt;/code> 作为最小值对待，上面的扫描区间就是 &lt;code>(NULL, +∞)&lt;/code> 是开区间，也就意味这不包括 &lt;code>NULL&lt;/code> 值。需要扫描的二级索引记录占总记录条数的比例是 &lt;code>13/16&lt;/code>，跟显然这个比例已经非常大了，所以会使用全表扫描的方式来执行查询。&lt;/p>
&lt;p>现在更新一下数据：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">UPDATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">80&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>更新后的 &lt;code>idx_key1&lt;/code> 索引示意图：&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/id-key-index-demo2.png" alt="id-key-index-demo2" loading="lazy" />&lt;/p>
&lt;p>再执行查询：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">IS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>优化器经过调查得知，需要扫描的二级索引记录占总记录条数的比例是 &lt;code>3/16&lt;/code>，它觉得这个查询使用二级索引来执行比较靠谱，所以会使用这个 &lt;code>idx_key1&lt;/code> 索引来执行查询。&lt;/p>
&lt;h3>!=&lt;span class="hx-absolute -hx-mt-20" id="heading">&lt;/span>
&lt;a href="#heading" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">80&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>优化器在真正执行查询前，会首先少量的访问一下索引，调查一下 &lt;code>key1&lt;/code> 在 &lt;code>(NULL, 80)&lt;/code> 和 &lt;code>(80, +∞)&lt;/code> 这两个区间内记录有多少条：&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/id-key-index-demo2.png" alt="id-key-index-demo2" loading="lazy" />&lt;/p>
&lt;p>可以看出，需要扫描的二级索引记录占总记录条数的比例是 &lt;code>2/16&lt;/code>，它觉得这个查询使用二级索引来执行比较靠谱，所以会使用这个 &lt;code>idx_key1&lt;/code> 索引来执行查询。&lt;/p>
&lt;h2>总结&lt;span class="hx-absolute -hx-mt-20" id="总结">&lt;/span>
&lt;a href="#%e6%80%bb%e7%bb%93" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;strong>成本决定执行计划，跟使用什么查询条件并没有什么关系&lt;/strong>。优化器会首先针对可能使用到的二级索引划分几个扫描区间，然后分别调查这些区间内有多少条记录，在这些扫描区间内的二级索引记录的总和占总共的记录数量的比例达到某个值时，优化器将放弃使用二级索引执行查询，转而采用全表扫描。&lt;/p></description></item><item><title>Group By</title><link>https://shipengqi.github.io/db-learn/docs/mysql/advance/11_group_by/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/db-learn/docs/mysql/advance/11_group_by/</guid><description>
&lt;p>准备数据：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">student_score&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nb">number&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">subject&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">score&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TINYINT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">number&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">subject&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ENGINE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">InnoDB&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">utf8&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 插入一些数据后，表中数据如下：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">mysql&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">student_score&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">----------+-----------+-----------------------------+-------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">number&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">subject&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">score&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">----------+-----------+-----------------------------+-------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">20180101&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">杜子腾&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">母猪的产后护理&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">78&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">20180101&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">杜子腾&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">论萨达姆的战争准备&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">88&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">20180102&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">杜琦燕&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">母猪的产后护理&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">20180102&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">杜琦燕&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">论萨达姆的战争准备&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">98&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">20180103&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">范统&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">母猪的产后护理&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">59&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">20180103&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">范统&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">论萨达姆的战争准备&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">61&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">20180104&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">史珍香&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">母猪的产后护理&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">55&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">20180104&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">史珍香&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">论萨达姆的战争准备&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">46&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">----------+-----------+-----------------------------+-------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">rows&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sec&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>GROUP BY 是在干什么？&lt;span class="hx-absolute -hx-mt-20" id="group-by-是在干什么">&lt;/span>
&lt;a href="#group-by-%e6%98%af%e5%9c%a8%e5%b9%b2%e4%bb%80%e4%b9%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>MySQL 中提供了一系列的聚集函数，例如：&lt;/p>
&lt;ul>
&lt;li>&lt;code>COUNT&lt;/code>：统计记录数。&lt;/li>
&lt;li>&lt;code>MAX&lt;/code>：查询某列的最大值。&lt;/li>
&lt;li>&lt;code>MIN&lt;/code>：查询某列的最小值。&lt;/li>
&lt;li>&lt;code>SUM&lt;/code>：某列数据的累加总和。&lt;/li>
&lt;li>&lt;code>AVG&lt;/code>：某列数据的平均数。&lt;/li>
&lt;/ul>
&lt;p>如果想查看一下 &lt;code>student_score&lt;/code> 表中所有人的平均成绩就可以这么写：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SELECT AVG&lt;span class="o">(&lt;/span>score&lt;span class="o">)&lt;/span> FROM student_score&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> AVG&lt;span class="o">(&lt;/span>score&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> 73.1250 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>如果只想查看 &lt;code>《母猪的产后护理》&lt;/code> 这个科目的平均成绩，那加个 &lt;code>WHERE&lt;/code> 子句就好了：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SELECT AVG&lt;span class="o">(&lt;/span>score&lt;span class="o">)&lt;/span> FROM student_score WHERE &lt;span class="nv">subject&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;母猪的产后护理&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> AVG&lt;span class="o">(&lt;/span>score&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> 73.0000 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>那么如果这个 &lt;code>student_score&lt;/code> 表中存储了 20 门科目的成绩信息，那如何得到这 20 门课程的平均成绩呢？单独写 20 个查询语句？&lt;/p>
&lt;p>可以按照某个列将表中的数据进行分组，比方说现在按照 &lt;code>subject&lt;/code> 列对表中数据进行分组，那么所有的记录就会被分成 2 组：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 母猪的产后护理 组&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------+-----------+-----------------------------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> number &lt;span class="p">|&lt;/span> name &lt;span class="p">|&lt;/span> subject &lt;span class="p">|&lt;/span> score &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------+-----------+-----------------------------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">20180101&lt;/span> &lt;span class="p">|&lt;/span> 杜子腾 &lt;span class="p">|&lt;/span> 母猪的产后护理 &lt;span class="p">|&lt;/span> &lt;span class="m">78&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">20180102&lt;/span> &lt;span class="p">|&lt;/span> 杜琦燕 &lt;span class="p">|&lt;/span> 母猪的产后护理 &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">20180103&lt;/span> &lt;span class="p">|&lt;/span> 范统 &lt;span class="p">|&lt;/span> 母猪的产后护理 &lt;span class="p">|&lt;/span> &lt;span class="m">59&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">20180104&lt;/span> &lt;span class="p">|&lt;/span> 史珍香 &lt;span class="p">|&lt;/span> 母猪的产后护理 &lt;span class="p">|&lt;/span> &lt;span class="m">55&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------+-----------+-----------------------------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 论萨达姆的战争准备 组&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------+-----------+-----------------------------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> number &lt;span class="p">|&lt;/span> name &lt;span class="p">|&lt;/span> subject &lt;span class="p">|&lt;/span> score &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------+-----------+-----------------------------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">20180101&lt;/span> &lt;span class="p">|&lt;/span> 杜子腾 &lt;span class="p">|&lt;/span> 论萨达姆的战争准备 &lt;span class="p">|&lt;/span> &lt;span class="m">88&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">20180102&lt;/span> &lt;span class="p">|&lt;/span> 杜琦燕 &lt;span class="p">|&lt;/span> 论萨达姆的战争准备 &lt;span class="p">|&lt;/span> &lt;span class="m">98&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">20180103&lt;/span> &lt;span class="p">|&lt;/span> 范统 &lt;span class="p">|&lt;/span> 论萨达姆的战争准备 &lt;span class="p">|&lt;/span> &lt;span class="m">61&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">20180104&lt;/span> &lt;span class="p">|&lt;/span> 史珍香 &lt;span class="p">|&lt;/span> 论萨达姆的战争准备 &lt;span class="p">|&lt;/span> &lt;span class="m">46&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------+-----------+-----------------------------+-------+&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>分组的子句就是 &lt;code>GROUP BY&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SELECT subject, AVG&lt;span class="o">(&lt;/span>score&lt;span class="o">)&lt;/span> FROM student_score GROUP BY subject&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------------------------+------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> subject &lt;span class="p">|&lt;/span> AVG&lt;span class="o">(&lt;/span>score&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------------------------+------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> 母猪的产后护理 &lt;span class="p">|&lt;/span> 73.0000 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> 论萨达姆的战争准备 &lt;span class="p">|&lt;/span> 73.2500 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------------------------+------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">2&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>报错&lt;span class="hx-absolute -hx-mt-20" id="报错">&lt;/span>
&lt;a href="#%e6%8a%a5%e9%94%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SELECT subject, name, AVG&lt;span class="o">(&lt;/span>score&lt;span class="o">)&lt;/span> FROM student_score GROUP BY subject&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ERROR &lt;span class="m">1055&lt;/span> &lt;span class="o">(&lt;/span>42000&lt;span class="o">)&lt;/span>: Expression &lt;span class="c1">#2 of SELECT list is not in GROUP BY clause and contains nonaggregated column &amp;#39;test.student_score.name&amp;#39; which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>为什么会报错？&lt;strong>使用 &lt;code>GROUP BY&lt;/code> 子句是想把记录分为若干组，然后再对各个组分别调用聚集函数去做一些统计工作&lt;/strong>。&lt;/p>
&lt;p>本例 SQL 的查询列表中有一个 &lt;code>name&lt;/code> 列，&lt;strong>既不是分组的列，也不是聚集函数的列&lt;/strong>。&lt;/p>
&lt;p>那么从各个分组中的记录中取一个记录的 &lt;code>name&lt;/code> 列？该取哪条记录为好呢？比方说对于&lt;code>'母猪的产后护理'&lt;/code>这个分组中的记录来说，&lt;code>name&lt;/code> 列的值应该取 &lt;code>杜子腾&lt;/code>，还是&lt;code>杜琦燕&lt;/code>，还是&lt;code>范统&lt;/code>，还是 &lt;code>史珍香&lt;/code> 呢？这个不知道，所以把非分组列放到查询列表中会引起争议，导致结果不确定，所以 MySQL 才会报错。&lt;/p>
&lt;p>如果一定要把非分组列也放到查询列表中，可以修改 &lt;code>sql_mode&lt;/code> 的系统变量：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SHOW VARIABLES LIKE &lt;span class="s1">&amp;#39;sql_mode&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---------------+-------------------------------------------------------------------------------------------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> Variable_name &lt;span class="p">|&lt;/span> Value &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---------------+-------------------------------------------------------------------------------------------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> sql_mode &lt;span class="p">|&lt;/span> ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---------------+-------------------------------------------------------------------------------------------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.02 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>其中一个称之为 &lt;code>ONLY_FULL_GROUP_BY&lt;/code> 的值，把这个值从 &lt;code>sql_mode&lt;/code> 系统变量中移除，就不会报错了：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="nb">set&lt;/span> &lt;span class="nv">sql_mode&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item></channel></rss>