<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Database Learning – 实战</title><link>https://shipengqi.github.io/db-learn/docs/mysql/practice/</link><description>Recent content in 实战 on Database Learning</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><atom:link href="https://shipengqi.github.io/db-learn/docs/mysql/practice/index.xml" rel="self" type="application/rss+xml"/><item><title>表设计</title><link>https://shipengqi.github.io/db-learn/docs/mysql/practice/01_table_design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/db-learn/docs/mysql/practice/01_table_design/</guid><description>
&lt;p>在选择数据类型时，一般应该遵循下面两步：&lt;/p>
&lt;ol>
&lt;li>确定合适的大类型：数字、字符串、时间、二进制；&lt;/li>
&lt;li>确定具体的类型：有无符号、取值范围、变长定长等。&lt;/li>
&lt;/ol>
&lt;p>在 MySQL 数据类型设置方面，尽量用&lt;strong>更小的数据类型，它们通常有更好的性能，花费更少的硬件资源&lt;/strong>。&lt;/p>
&lt;h2>数值&lt;span class="hx-absolute -hx-mt-20" id="数值">&lt;/span>
&lt;a href="#%e6%95%b0%e5%80%bc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>signed 和 unsigned&lt;span class="hx-absolute -hx-mt-20" id="signed-和-unsigned">&lt;/span>
&lt;a href="#signed-%e5%92%8c-unsigned" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>在整型类型中，有 &lt;code>signed&lt;/code> 和 &lt;code>unsigned&lt;/code> 属性，默认为 &lt;code>signed&lt;/code>。&lt;/p>
&lt;p>表结构设计中时：&lt;/p>
&lt;ol>
&lt;li>如果整形数据确定没有负数，如主键 ID，建议指定为 &lt;code>unsigned&lt;/code> 无符号类型，容量可以扩大一倍。&lt;/li>
&lt;li>其他情况不建议刻意去用 &lt;code>unsigned&lt;/code> 属性，因为在做一些数据分析时，&lt;code>unsigned&lt;/code> 会导致一些问题。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>MySQL 要求 &lt;code>unsigned&lt;/code> 数值相减之后依然为 &lt;code>unsigned&lt;/code>，否则就会报错&lt;/strong>。在一些统计计算的 SQL 中，可能会出现 &lt;code>unsigned&lt;/code> 数值相减之后为负数的情况，这时就会报错。&lt;/p>
&lt;p>为了避免这个错误，需要对数据库参数 &lt;code>sql_mode&lt;/code> 设置为 &lt;code>NO_UNSIGNED_SUBTRACTION&lt;/code>，允许相减的结果为 &lt;code>signed&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sql_mode&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;NO_UNSIGNED_SUBTRACTION&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>整型类型与自增设计&lt;span class="hx-absolute -hx-mt-20" id="整型类型与自增设计">&lt;/span>
&lt;a href="#%e6%95%b4%e5%9e%8b%e7%b1%bb%e5%9e%8b%e4%b8%8e%e8%87%aa%e5%a2%9e%e8%ae%be%e8%ae%a1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>整型类型最常见的就是在业务中用来表示某件物品的数量。例如销售数量、库存数量、购买次数等。&lt;/li>
&lt;li>另一个重要的使用用法是作为表的主键。&lt;/li>
&lt;/ul>
&lt;p>整型结合属性 &lt;code>auto_increment&lt;/code>，可以实现&lt;strong>自增&lt;/strong>功能，但在表结构设计时用自增做主键，要注意以下两点：&lt;/p>
&lt;ul>
&lt;li>用 &lt;code>BIGINT&lt;/code> 做主键，而不是 &lt;code>INT&lt;/code>，不要为了节省 4 个字节使用 &lt;code>INT&lt;/code>，当达到上限时，再进行表结构的变更，要付出巨大的代价。当达到 &lt;code>INT&lt;/code> 上限后，再次进行自增插入时，会报重复错误，MySQL 数据库并不会自动将其重置为 &lt;code>1&lt;/code>。&lt;/li>
&lt;li>MySQL 8.0 版本前自增值是&lt;strong>不持久化的&lt;/strong>，可能会有回溯现象。&lt;/li>
&lt;/ul>
&lt;h4>回溯现象&lt;span class="hx-absolute -hx-mt-20" id="回溯现象">&lt;/span>
&lt;a href="#%e5%9b%9e%e6%ba%af%e7%8e%b0%e8%b1%a1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SELECT * FROM t&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> a &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">3&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.01 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; DELETE FROM t WHERE &lt;span class="nv">a&lt;/span> &lt;span class="o">=&lt;/span> 3&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">1&lt;/span> row affected &lt;span class="o">(&lt;/span>0.02 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SHOW CREATE TABLE t&lt;span class="se">\G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************** 1. row ***************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Table: t
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Create Table: CREATE TABLE &lt;span class="sb">`&lt;/span>t&lt;span class="sb">`&lt;/span> &lt;span class="o">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`&lt;/span>a&lt;span class="sb">`&lt;/span> int NOT NULL AUTO_INCREMENT,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PRIMARY KEY &lt;span class="o">(&lt;/span>&lt;span class="sb">`&lt;/span>a&lt;span class="sb">`&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">)&lt;/span> &lt;span class="nv">ENGINE&lt;/span>&lt;span class="o">=&lt;/span>InnoDB &lt;span class="nv">AUTO_INCREMENT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">4&lt;/span> DEFAULT &lt;span class="nv">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>utf8mb4 &lt;span class="nv">COLLATE&lt;/span>&lt;span class="o">=&lt;/span>utf8mb4_general_ci
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>可以看到，在删除自增为 3 的这条记录后，下一个自增值依然为 4（&lt;code>AUTO_INCREMENT=4&lt;/code>），这里并没有错误。但若这时数据库发生重启，那数据库启动后，表 t 的自增起始值将再次变为 3，即自增值发生回溯。&lt;/p>
&lt;p>若要彻底解决这个问题，有 2 种方法：&lt;/p>
&lt;ol>
&lt;li>升级 MySQL 版本到 8.0 版本，每张表的自增值会持久化；&lt;/li>
&lt;li>为了之后更好的分布式架构扩展性，不建议使用自增整型类型做主键，更为推荐的是字符串类型，例如 UUID。&lt;/li>
&lt;/ol>
&lt;h3>资金字段设计&lt;span class="hx-absolute -hx-mt-20" id="资金字段设计">&lt;/span>
&lt;a href="#%e8%b5%84%e9%87%91%e5%ad%97%e6%ae%b5%e8%ae%be%e8%ae%a1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>通常在表结构设计中，用户的工资、账户的余额等精确到小数点后 2 位的业务（精确到&lt;strong>分&lt;/strong>），可以使用 &lt;code>DECIMAL&lt;/code> 类型（例如 &lt;code>DECIMAL(8,2)&lt;/code>）。&lt;/p>
&lt;p>&lt;strong>在海量互联网业务的设计标准中，并不推荐用 &lt;code>DECIMAL&lt;/code> 类型，更推荐将 DECIMAL 转化为整型类型&lt;/strong>。也就是说，资金类型更推荐使用用分单位存储，而不是用元单位存储。如 1 元在数据库中用整型类型 100 存储。&lt;/p>
&lt;h4>金额字段为什么不使用 DECIMAL 类型？&lt;span class="hx-absolute -hx-mt-20" id="金额字段为什么不使用-decimal-类型">&lt;/span>
&lt;a href="#%e9%87%91%e9%a2%9d%e5%ad%97%e6%ae%b5%e4%b8%ba%e4%bb%80%e4%b9%88%e4%b8%8d%e4%bd%bf%e7%94%a8-decimal-%e7%b1%bb%e5%9e%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>金额字段的取值范围如果用 DECIMAL 表示的，如何定义长度？因为类型 &lt;strong>DECIMAL 是个变长字段&lt;/strong>，如果定义为 &lt;code>DECIMAL(8,2)&lt;/code> ，那么存储最大值为 &lt;code>999999.99&lt;/code>，百万级的资金存储，这是远远不够的。&lt;/p>
&lt;p>用户的金额至少要存储百亿的字段，而统计局的 GDP 金额字段则可能达到数十万亿级别。用类型 &lt;code>DECIMAL&lt;/code> 定义，不好统一。而如果使用 &lt;code>BIGINT&lt;/code> 来存储金额，用&lt;strong>分&lt;/strong>来做单位（小数点中的数据呢，可以交由前端进行处理并展示），可以轻松存储千兆级别的金额。&lt;/p>
&lt;ul>
&lt;li>存储高效：所有金额相关字段都是定长字段，占用 8 个字节。&lt;/li>
&lt;li>扩展性强：轻松支持百亿级甚至万亿级金额存储。&lt;/li>
&lt;li>计算高效：整型运算比 DECIMAL 的二进制转换计算更快。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>在数据库设计中，非常强调定长存储，因为定长存储的性能更好&lt;/strong>。&lt;/p>
&lt;h3>IP 地址字段设计&lt;span class="hx-absolute -hx-mt-20" id="ip-地址字段设计">&lt;/span>
&lt;a href="#ip-%e5%9c%b0%e5%9d%80%e5%ad%97%e6%ae%b5%e8%ae%be%e8%ae%a1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>IP 也是可以使用整型来存储的，因为 IP 地址本身是一个&lt;strong>变长字段&lt;/strong>，如果&lt;strong>使用 &lt;code>INT&lt;/code> 存储，就是占用固定的 4 个字节&lt;/strong>（IP 地址最大为 &lt;code>255.255.255.255&lt;/code>，二进制形式 &lt;code>11111111 11111111 11111111 11111111&lt;/code>）。这种方法比使用字符串更节省空间且查询效率更高。&lt;/p>
&lt;p>存储 IP 地址的表结构：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">network_logs&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AUTO_INCREMENT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ip_address&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UNSIGNED&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 存储转换后的 IP 整数值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 其他字段...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INDEX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ip_address&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 为提高查询效率添加索引
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>一定要使用 &lt;code>INT UNSIGNED&lt;/code> 类型，使用 &lt;code>INT UNSIGNED&lt;/code> 可以存储 0 到 4294967295 的值，正好对应 IPv4 的 32 位地址空间&lt;/strong>。所以这种方法只适用于 IPv4 地址，IPv6 地址需要其他存储方式。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 将IP字符串转为整型
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">INET_ATON&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;192.168.1.1&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 返回: 3232235777
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 将整型转为 IP 字符串
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">INET_NTOA&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3232235777&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 返回: &amp;#39;192.168.1.1&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 插入记录
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">network_logs&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ip_address&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">VALUES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">INET_ATON&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;192.168.1.1&amp;#39;&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 查询记录
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 查询特定IP
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">network_logs&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ip_address&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">INET_ATON&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;192.168.1.1&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 查询时显示IP字符串格式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">INET_NTOA&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ip_address&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ip&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">network_logs&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>也可以在&lt;strong>应用程序中先转换再存储，减少数据库的计算负担&lt;/strong>。&lt;/p>
&lt;h4>性能优势&lt;span class="hx-absolute -hx-mt-20" id="性能优势">&lt;/span>
&lt;a href="#%e6%80%a7%e8%83%bd%e4%bc%98%e5%8a%bf" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>存储空间：整型(4 字节) vs 字符串(&lt;code>7-15&lt;/code>字节)&lt;/li>
&lt;li>查询效率：整型比较比字符串比较快得多&lt;/li>
&lt;li>索引效率：整型索引更小更高效&lt;/li>
&lt;/ul>
&lt;h3>小数类型&lt;span class="hx-absolute -hx-mt-20" id="小数类型">&lt;/span>
&lt;a href="#%e5%b0%8f%e6%95%b0%e7%b1%bb%e5%9e%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>浮点类型 &lt;code>Float&lt;/code> 和 &lt;code>Double&lt;/code>，不是高精度，也不是 SQL 标准的类型，&lt;strong>不推荐使用&lt;/strong>。&lt;/p>
&lt;p>小数类型使用 &lt;code>DECIMAL&lt;/code> 类型。如果存储的数值范围超过 &lt;code>DECIMAL&lt;/code> 的范围，可以&lt;strong>将数值拆成整数和小数并分开存储&lt;/strong>。&lt;/p>
&lt;h2>字符串&lt;span class="hx-absolute -hx-mt-20" id="字符串">&lt;/span>
&lt;a href="#%e5%ad%97%e7%ac%a6%e4%b8%b2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>大部分场景中，对于字符串使用类型 &lt;code>VARCHAR&lt;/code> 就足够了。&lt;/p>
&lt;ul>
&lt;li>字符串的长度相差较大用 &lt;code>VARCHAR&lt;/code>；字符串短，且所有值都接近一个长度用 &lt;code>CHAR&lt;/code>。&lt;/li>
&lt;li>尽量少用 &lt;code>BLOB&lt;/code> 和 &lt;code>TEXT&lt;/code>，如果实在要用可以考虑将 &lt;code>BLOB&lt;/code> 和 &lt;code>TEXT&lt;/code> 字段单独存一张表，用 &lt;code>id&lt;/code> 关联。&lt;/li>
&lt;/ul>
&lt;h3>utf8&lt;span class="hx-absolute -hx-mt-20" id="utf8">&lt;/span>
&lt;a href="#utf8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>&lt;code>utf8&lt;/code> 字符集&lt;/strong>：是 Unicode 字符集的一种编码方案，收录地球上能想到的所有字符，而且还在不断扩充。这种字符集兼容 ASCII 字符集，采用变长编码方式，编码一个字符需要使用 &lt;code>1~4&lt;/code> 个字节。&lt;/p>
&lt;p>&lt;code>utf8&lt;/code> 字符集表示一个字符需要使用 &lt;code>1~4&lt;/code> 个字节，但是我们常用的一些字符使用 &lt;code>1~3&lt;/code> 个字节就可以表示了。而在一个字符所用最大字节长度在某些方面会影响系统的存储和性能，所以MySQL 定义了两个概念：&lt;/p>
&lt;ul>
&lt;li>&lt;code>utf8mb3&lt;/code>：阉割过的 &lt;code>utf8&lt;/code> 字符集，只使用 &lt;code>1~3&lt;/code> 个字节表示字符。无法存储需要 4 字节编码的字符，如表情符号、其他补充字符等。&lt;/li>
&lt;li>&lt;code>utf8mb4&lt;/code>：正宗的 &lt;code>utf8&lt;/code> 字符集，使用 &lt;code>1~4&lt;/code> 个字节表示字符。&lt;/li>
&lt;/ul>
&lt;p>MySQL &lt;strong>8.0 和以上版本&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>字符集默认为 &lt;code>utf8mb4&lt;/code>。&lt;/li>
&lt;li>&lt;code>utf8&lt;/code> 默认指向的也是 &lt;code>utf8mb4&lt;/code>。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>8.0 之前的版本&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>字符集默认为 &lt;code>latin1&lt;/code>。&lt;/li>
&lt;li>&lt;code>utf8&lt;/code> 默认指向的也是 &lt;code>utf8mb3&lt;/code>。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>如果主要涉及英文和少量特殊符号，并且不打算使用表情符号或任何特殊 Unicode 字符，那么使用 &lt;code>utf8mb3&lt;/code> 就足够了&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>如果需要支持多种语言（国际化），包括那些使用大量特殊字符（如表情符号）的语言，那么使用 &lt;code>utf8mb4&lt;/code>&lt;/strong>。&lt;/p>
&lt;h3>字符集排序规则&lt;span class="hx-absolute -hx-mt-20" id="字符集排序规则">&lt;/span>
&lt;a href="#%e5%ad%97%e7%ac%a6%e9%9b%86%e6%8e%92%e5%ba%8f%e8%a7%84%e5%88%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>MySQL 支持&lt;strong>多种字符集，每个字符集都会有默认的排序规则&lt;/strong>。可以用命令 &lt;code>SHOW CHARSET&lt;/code> （&lt;code>CHARACTER SET&lt;/code> 和 &lt;code>CHARSET&lt;/code> 是同义词）来查看：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SHOW CHARSET LIKE &lt;span class="s1">&amp;#39;utf8%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---------+---------------+--------------------+--------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> Charset &lt;span class="p">|&lt;/span> Description &lt;span class="p">|&lt;/span> Default collation &lt;span class="p">|&lt;/span> Maxlen &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---------+---------------+--------------------+--------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8 &lt;span class="p">|&lt;/span> UTF-8 Unicode &lt;span class="p">|&lt;/span> utf8_general_ci &lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8mb4 &lt;span class="p">|&lt;/span> UTF-8 Unicode &lt;span class="p">|&lt;/span> utf8mb4_0900_ai_ci &lt;span class="p">|&lt;/span> &lt;span class="m">4&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---------+---------------+--------------------+--------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">2&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.01 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SHOW COLLATION LIKE &lt;span class="s1">&amp;#39;utf8mb4%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------------------------+---------+-----+---------+----------+---------+---------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> Collation &lt;span class="p">|&lt;/span> Charset &lt;span class="p">|&lt;/span> Id &lt;span class="p">|&lt;/span> Default &lt;span class="p">|&lt;/span> Compiled &lt;span class="p">|&lt;/span> Sortlen &lt;span class="p">|&lt;/span> Pad_attribute &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------------------------+---------+-----+---------+----------+---------+---------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8mb4_0900_ai_ci &lt;span class="p">|&lt;/span> utf8mb4 &lt;span class="p">|&lt;/span> &lt;span class="m">255&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="p">|&lt;/span> NO PAD &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8mb4_0900_as_ci &lt;span class="p">|&lt;/span> utf8mb4 &lt;span class="p">|&lt;/span> &lt;span class="m">305&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="p">|&lt;/span> NO PAD &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8mb4_0900_as_cs &lt;span class="p">|&lt;/span> utf8mb4 &lt;span class="p">|&lt;/span> &lt;span class="m">278&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="p">|&lt;/span> NO PAD &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8mb4_0900_bin &lt;span class="p">|&lt;/span> utf8mb4 &lt;span class="p">|&lt;/span> &lt;span class="m">309&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> NO PAD &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> utf8mb4_bin &lt;span class="p">|&lt;/span> utf8mb4 &lt;span class="p">|&lt;/span> &lt;span class="m">46&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> Yes &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> PAD SPACE &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">......&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>其中 &lt;strong>Default collation&lt;/strong> 列表示这种字符集中一种默认的比较规则。排序规则&lt;/p>
&lt;ul>
&lt;li>以 &lt;code>_ci&lt;/code> 结尾，表示不区分大小写（Case Insentive）&lt;/li>
&lt;li>&lt;code>_cs&lt;/code> 表示大小写敏感&lt;/li>
&lt;li>&lt;code>_bin&lt;/code> 表示通过存储字符的二进制进行比较。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>绝大部分业务的表结构设计无须设置排序规则为大小写敏感&lt;/strong>。&lt;/p>
&lt;h4>正确修改字符集&lt;span class="hx-absolute -hx-mt-20" id="正确修改字符集">&lt;/span>
&lt;a href="#%e6%ad%a3%e7%a1%ae%e4%bf%ae%e6%94%b9%e5%ad%97%e7%ac%a6%e9%9b%86" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">emoji_test&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CHARSET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">utf8mb4&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>上面的 SQL 将表的字符集修改为 &lt;code>utf8mb4&lt;/code>，下次&lt;strong>新增列时，若不显式地指定字符集，新列的字符集会变更为 &lt;code>utf8mb4&lt;/code>&lt;/strong>，但对于&lt;strong>已经存在的列，其默认字符集并不做修改&lt;/strong>。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SHOW CREATE TABLE emoji_test&lt;span class="se">\G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************** 1. row ***************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Table: emoji_test
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Create Table: CREATE TABLE &lt;span class="sb">`&lt;/span>emoji_test&lt;span class="sb">`&lt;/span> &lt;span class="o">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`&lt;/span>a&lt;span class="sb">`&lt;/span> varchar&lt;span class="o">(&lt;/span>100&lt;span class="o">)&lt;/span> CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PRIMARY KEY &lt;span class="o">(&lt;/span>&lt;span class="sb">`&lt;/span>a&lt;span class="sb">`&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">)&lt;/span> &lt;span class="nv">ENGINE&lt;/span>&lt;span class="o">=&lt;/span>InnoDB DEFAULT &lt;span class="nv">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>utf8mb4 &lt;span class="nv">COLLATE&lt;/span>&lt;span class="o">=&lt;/span>utf8mb4_0900_ai_ci
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>表的列 &lt;code>a&lt;/code> 的字符集依然是 &lt;code>utf8&lt;/code>。&lt;/p>
&lt;p>所以，正确修改列字符集的命令应该使用 &lt;code>ALTER TABLE ... CONVERT TO&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; ALTER TABLE emoji_test CONVERT TO CHARSET utf8mb4&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.94 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Records: &lt;span class="m">0&lt;/span> Duplicates: &lt;span class="m">0&lt;/span> Warnings: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SHOW CREATE TABLE emoji_test&lt;span class="se">\G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************** 1. row ***************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Table: emoji_test
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Create Table: CREATE TABLE &lt;span class="sb">`&lt;/span>emoji_test&lt;span class="sb">`&lt;/span> &lt;span class="o">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`&lt;/span>a&lt;span class="sb">`&lt;/span> varchar&lt;span class="o">(&lt;/span>100&lt;span class="o">)&lt;/span> CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PRIMARY KEY &lt;span class="o">(&lt;/span>&lt;span class="sb">`&lt;/span>a&lt;span class="sb">`&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">)&lt;/span> &lt;span class="nv">ENGINE&lt;/span>&lt;span class="o">=&lt;/span>InnoDB DEFAULT &lt;span class="nv">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>utf8mb4 &lt;span class="nv">COLLATE&lt;/span>&lt;span class="o">=&lt;/span>utf8mb4_0900_ai_ci
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>性别或状态等枚举类型设计&lt;span class="hx-absolute -hx-mt-20" id="性别或状态等枚举类型设计">&lt;/span>
&lt;a href="#%e6%80%a7%e5%88%ab%e6%88%96%e7%8a%b6%e6%80%81%e7%ad%89%e6%9e%9a%e4%b8%be%e7%b1%bb%e5%9e%8b%e8%ae%be%e8%ae%a1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>设计表结构时，你会遇到一些固定选项值的字段。例如，性别字段（Sex），只有男或女；又或者状态字段（State），有效的值为运行、停止、重启等有限状态。&lt;/p>
&lt;p>&lt;strong>不推荐使用 &lt;code>ENUM&lt;/code> 类型&lt;/strong>，因为 &lt;code>ENUM&lt;/code> 类型并非 SQL 标准的数据类型，而是 MySQL 所独有的一种字符串类型。抛出的错误提示也并不直观。&lt;/p>
&lt;p>通常情况下，&lt;strong>枚举&lt;/strong>类型，可以使用 &lt;code>unsigned tinyint&lt;/code> 类型替代，占用 1 个字节，取值范围是 &lt;code>0~255&lt;/code>。&lt;/p>
&lt;p>例如，性别字段，可以使用 &lt;code>unsigned tinyint&lt;/code> 类型替代，其中 &lt;code>0&lt;/code> 表示男，&lt;code>1&lt;/code> 表示女。&lt;/p>
&lt;h4>CHECK 约束功能&lt;span class="hx-absolute -hx-mt-20" id="check-约束功能">&lt;/span>
&lt;a href="#check-%e7%ba%a6%e6%9d%9f%e5%8a%9f%e8%83%bd" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>MySQL 8.0.16 版本开始，数据库原生提供了 CHECK 约束功能，用来检查字段值是否符合指定的条件。&lt;strong>通过 CHECK 约束，可以实现枚举类型的功能&lt;/strong>。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; SHOW CREATE TABLE User&lt;span class="se">\G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************** 1. row ***************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Table: User
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Create Table: CREATE TABLE &lt;span class="sb">`&lt;/span>User&lt;span class="sb">`&lt;/span> &lt;span class="o">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`&lt;/span>id&lt;span class="sb">`&lt;/span> bigint NOT NULL AUTO_INCREMENT,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`&lt;/span>sex&lt;span class="sb">`&lt;/span> char&lt;span class="o">(&lt;/span>1&lt;span class="o">)&lt;/span> COLLATE utf8mb4_general_ci DEFAULT NULL,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PRIMARY KEY &lt;span class="o">(&lt;/span>&lt;span class="sb">`&lt;/span>id&lt;span class="sb">`&lt;/span>&lt;span class="o">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CONSTRAINT &lt;span class="sb">`&lt;/span>user_chk_1&lt;span class="sb">`&lt;/span> CHECK &lt;span class="o">(((&lt;/span>&lt;span class="sb">`&lt;/span>sex&lt;span class="sb">`&lt;/span> &lt;span class="o">=&lt;/span> _utf8mb4&lt;span class="s1">&amp;#39;M&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> or &lt;span class="o">(&lt;/span>&lt;span class="sb">`&lt;/span>sex&lt;span class="sb">`&lt;/span> &lt;span class="o">=&lt;/span> _utf8mb4&lt;span class="s1">&amp;#39;F&amp;#39;&lt;/span>&lt;span class="o">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">)&lt;/span> &lt;span class="nv">ENGINE&lt;/span>&lt;span class="o">=&lt;/span>InnoDB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; INSERT INTO User VALUES &lt;span class="o">(&lt;/span>NULL,&lt;span class="s1">&amp;#39;M&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">1&lt;/span> row affected &lt;span class="o">(&lt;/span>0.07 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; INSERT INTO User VALUES &lt;span class="o">(&lt;/span>NULL,&lt;span class="s1">&amp;#39;Z&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ERROR &lt;span class="m">3819&lt;/span> &lt;span class="o">(&lt;/span>HY000&lt;span class="o">)&lt;/span>: Check constraint &lt;span class="s1">&amp;#39;user_chk_1&amp;#39;&lt;/span> is violated.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>示例中的约束定义 &lt;code>user_chk_1&lt;/code> 表示列 sex 的取值范围，只能是 &lt;code>M&lt;/code> 或者 &lt;code>F&lt;/code>。插入非法数据 Z 时，看到 MySQL 显式地抛出了违法约束的提示。&lt;/p>
&lt;p>通过 CHECK 约束，实现枚举类型可以避免 &lt;code>tinyint&lt;/code> 实现的两个问题：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>表达不清&lt;/strong>：在具体存储时，0 表示女，还是 1 表示女呢？每个业务可能有不同的潜规则；&lt;/li>
&lt;li>&lt;strong>脏数据&lt;/strong>：因为是 &lt;code>tinyint&lt;/code>，因此除了 0 和 1，用户完全可以插入 2、3、4 这样的数值，最终表中可能存在无效数据，如果后期再进行清理，代价就非常大了。&lt;/li>
&lt;/ol>
&lt;h3>账户密码存储设计&lt;span class="hx-absolute -hx-mt-20" id="账户密码存储设计">&lt;/span>
&lt;a href="#%e8%b4%a6%e6%88%b7%e5%af%86%e7%a0%81%e5%ad%98%e5%82%a8%e8%ae%be%e8%ae%a1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>密码不能明文存储，通常的做法是对密码进行加密存储。&lt;/p>
&lt;p>不要直接使用 MD5 算法，虽然 MD5 算法并不可逆，但是可以通过暴力破解的方式，计算出所有可能的字符串对应的 MD5 值。&lt;/p>
&lt;p>所以，在设计密码存储使用，还需要加&lt;strong>盐&lt;/strong>（salt），每个公司的盐值都是不同的，因此计算出的值也是不同的。若盐值为 &lt;code>psalt&lt;/code>，则密码 &lt;code>12345678&lt;/code> 在数据库中的值为：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>password = MD5（‘psalt12345678’）&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>这是一种固定盐值的加密算法，其中存在三个主要问题：&lt;/p>
&lt;ol>
&lt;li>若 salt 值被（离职）员工&lt;strong>泄漏&lt;/strong>，则外部黑客依然存在暴利破解的可能性；&lt;/li>
&lt;li>对于&lt;strong>相同密码，其密码存储值相同&lt;/strong>，一旦一个用户密码泄漏，其他相同密码的用户的密码也将被泄漏；&lt;/li>
&lt;li>固定使用 MD5 加密算法，一旦 MD5 算法被破解，则影响很大。&lt;/li>
&lt;/ol>
&lt;p>所以一个真正好的密码存储设计，应该是：&lt;strong>动态盐 + 非固定加密算法&lt;/strong>。例如密码的存储格式为：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>$salt$cryption_algorithm$value&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>$salt&lt;/code>：表示动态盐，&lt;strong>每次用户注册时业务产生不同的盐值&lt;/strong>，并存储在数据库中。若做得再精细一点，可以&lt;strong>动态盐值 + 用户注册日期&lt;/strong>合并为一个更为动态的盐值。&lt;/li>
&lt;li>&lt;code>$cryption_algorithm&lt;/code>：表示加密的算法，如 v1 表示 MD5 加密算法，v2 表示 AES256 加密算法，v3 表示 AES512 加密算法等。&lt;/li>
&lt;li>&lt;code>$value&lt;/code>：表示加密后的字符串。&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">CREATE TABLE User &lt;span class="o">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> id BIGINT NOT NULL AUTO_INCREMENT,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> name VARCHAR&lt;span class="o">(&lt;/span>255&lt;span class="o">)&lt;/span> NOT NULL,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sex CHAR&lt;span class="o">(&lt;/span>1&lt;span class="o">)&lt;/span> NOT NULL,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> password VARCHAR&lt;span class="o">(&lt;/span>1024&lt;span class="o">)&lt;/span> NOT NULL,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CHECK &lt;span class="o">(&lt;/span>&lt;span class="nv">sex&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;M&amp;#39;&lt;/span> OR &lt;span class="nv">sex&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;F&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PRIMARY KEY&lt;span class="o">(&lt;/span>id&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">SELECT * FROM User&lt;span class="se">\G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************** 1. row ***************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">id: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">name: David
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sex: M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">password: &lt;span class="nv">$fgfaef$v1$2198687&lt;/span>f6db06c9d1b31a030ba1ef074
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************** 2. row ***************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">id: &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">name: Amy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sex: F
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">password: &lt;span class="nv">$zpelf$v2$0&lt;/span>x860E4E3B2AA4005D8EE9B7653409C4B133AF77AEF53B815D31426EC6EF78D882&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>上面的例子中，用户 David 和 Amy 密码都是 12345678，然而由于使用了动态盐和动态加密算法，两者存储的内容完全不同。&lt;/p>
&lt;h2>日期和时间&lt;span class="hx-absolute -hx-mt-20" id="日期和时间">&lt;/span>
&lt;a href="#%e6%97%a5%e6%9c%9f%e5%92%8c%e6%97%b6%e9%97%b4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>在做表结构设计时，对日期字段的存储，开发人员通常会有 3 种选择：&lt;code>DATETIME&lt;/code>、&lt;code>TIMESTAMP&lt;/code>、&lt;code>INT&lt;/code>。&lt;/p>
&lt;p>&lt;strong>建议使用类型 &lt;code>DATETIME&lt;/code>&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>为什么不使用 &lt;code>INT&lt;/code> 类型？&lt;/strong>&lt;/p>
&lt;p>&lt;code>INT&lt;/code> 类型就是直接存储 &amp;lsquo;1970-01-01 00:00:00&amp;rsquo; 到现在的毫秒数，本质和 &lt;code>TIMESTAMP&lt;/code> 一样。而且 &lt;code>INT&lt;/code> 存储日期&lt;strong>可读性，运维性太差&lt;/strong>了。&lt;/p>
&lt;p>有些同学会认为 &lt;code>INT&lt;/code> 比 &lt;code>TIMESTAMP&lt;/code> 性能更好。但是，当前每个 CPU 每秒可执行上亿次的计算，所以无须为这种转换的性能担心。&lt;/p>
&lt;p>&lt;strong>为什么不使用 &lt;code>TIMESTAMP&lt;/code> 类型？&lt;/strong>&lt;/p>
&lt;p>虽然 &lt;code>TIMESTAMP&lt;/code> 占用 4 个字节，比 &lt;code>DATETIME&lt;/code> 小一半的存储空间。但是 &lt;code>TIMESTAMP&lt;/code> 的最大值 &amp;lsquo;2038-01-19 03:14:07&amp;rsquo; 已经很接近了，要慎重考虑。&lt;/p>
&lt;p>&lt;code>TIMESTAMP&lt;/code> 虽然有时区属性的优势，对于 &lt;code>DATETIME&lt;/code> 的时区问题，可以由前端或者服务端做一次转化，不一定非要在数据库中解决。&lt;/p>
&lt;p>&lt;strong>&lt;code>TIMESTAMP&lt;/code> 的性能问题&lt;/strong>，&lt;/p>
&lt;p>虽然从毫秒数转换到类型 &lt;code>TIMESTAMP&lt;/code> 本身需要的 CPU 指令并不多，这并不会带来直接的性能问题。但是如果使用默认的操作系统时区，则每次通过时区计算时间时，要调用操作系统底层系统函数 &lt;code>__tz_convert()&lt;/code>，而这个函数需要额外的加锁操作，以确保这时操作系统时区没有修改。所以，当大规模并发访问时，由于热点资源竞争，会产生两个问题。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>性能不如 &lt;code>DATETIME&lt;/code>&lt;/strong>： &lt;code>DATETIME&lt;/code> 不存在时区转化问题。&lt;/li>
&lt;li>&lt;strong>性能抖动&lt;/strong>： 海量并发时，存在性能抖动问题。&lt;/li>
&lt;/ul>
&lt;p>可以通过&lt;strong>设置显式的时区&lt;/strong>，来优化 &lt;code>TIMESTAMP&lt;/code>。比如在配置文件中显示地设置时区，而不要使用系统时区：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[mysqld]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">time_zone&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;+08:00&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>日期字段推荐使用 &lt;code>DATETIME&lt;/code>，没有时区转化。即便使用 &lt;code>TIMESTAMP&lt;/code>，也需要在数据库中显式地配置时区，而不是用系统时区&lt;/strong>。&lt;/p>
&lt;h2>JSON 数据类型&lt;span class="hx-absolute -hx-mt-20" id="json-数据类型">&lt;/span>
&lt;a href="#json-%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>用户登录设计&lt;span class="hx-absolute -hx-mt-20" id="用户登录设计">&lt;/span>
&lt;a href="#%e7%94%a8%e6%88%b7%e7%99%bb%e5%bd%95%e8%ae%be%e8%ae%a1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>JSON 类型比较适合存储一些修改较少、相对静态的数据&lt;/strong>，比如用户登录信息的存储：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">DROP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">IF&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">EXISTS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserLogin&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserLogin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">BIGINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">loginInfo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JSON&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>由于现在业务的登录方式越来越多样化，如同一账户支持手机、微信、QQ 账号登录，所以这里可以用 JSON 类型存储登录的信息。&lt;/p>
&lt;p>插入下面的数据：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">@&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> &amp;#34;cellphone&amp;#34; : &amp;#34;13918888888&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> &amp;#34;wxchat&amp;#34; : &amp;#34;破产码农&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> &amp;#34;QQ&amp;#34; : &amp;#34;82946772&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserLogin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">VALUES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">@&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">@&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> &amp;#34;cellphone&amp;#34; : &amp;#34;15026888888&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserLogin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">VALUES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">@&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>上面的例子中，用户 1 登录有三种方式：手机验证码登录、微信登录、QQ 登录，而用户 2 只有手机验证码登录。&lt;/p>
&lt;p>而如果不采用 JSON 数据类型，就要用下面的方式建表：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserLogin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">BIGINT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cellphone&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">wechat&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">QQ&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>上面传统的方式存在两个问题：&lt;/p>
&lt;ol>
&lt;li>有些列可能是比较稀疏的，一些列可能大部分都是 NULL 值；&lt;/li>
&lt;li>如果要新增一种登录类型，如微博登录，则需要添加新列，而 JSON 类型无此烦恼。&lt;/li>
&lt;/ol>
&lt;p>使用 JSON 类型，再配合 JSON 字段处理函数，实现更加简便。其中，最常见的 JSON 字段处理函数就是 &lt;strong>&lt;code>JSON_EXTRACT&lt;/code>，它用来从 JSON 数据中提取所需要的字段内容&lt;/strong>。&lt;/p>
&lt;p>例如查询用户的手机和微信信息：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">JSON_UNQUOTE&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JSON_EXTRACT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loginInfo&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;$.cellphone&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cellphone&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">JSON_UNQUOTE&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JSON_EXTRACT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loginInfo&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;$.wxchat&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">wxchat&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserLogin&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">--------+-------------+--------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cellphone&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">wxchat&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">--------+-------------+--------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">13918888888&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">破产码农&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">15026888888&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">--------+-------------+--------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">rows&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">01&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sec&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>MySQL 还提供了 &lt;code>-&amp;gt;&amp;gt;&lt;/code> 表达式，和 &lt;code>JSON_EXTRACT&lt;/code>、&lt;code>JSON_UNQUOTE&lt;/code> 的效果完全一样：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">loginInfo&lt;/span>&lt;span class="o">-&amp;gt;&amp;gt;&lt;/span>&lt;span class="s2">&amp;#34;$.cellphone&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cellphone&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">loginInfo&lt;/span>&lt;span class="o">-&amp;gt;&amp;gt;&lt;/span>&lt;span class="s2">&amp;#34;$.wxchat&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">wxchat&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserLogin&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>当 JSON 数据量非常大，用户希望对 JSON 数据进行有效检索时，可以利用 MySQL 的&lt;strong>函数索引&lt;/strong>功能对 JSON 中的某个字段进行索引。&lt;/p>
&lt;p>比如在上面的用户登录示例中，假设用户必须绑定唯一手机号，且希望未来能用手机号码进行用户检索时，可以创建下面的索引：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserLogin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">COLUMN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cellphone&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loginInfo&lt;/span>&lt;span class="o">-&amp;gt;&amp;gt;&lt;/span>&lt;span class="s2">&amp;#34;$.cellphone&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserLogin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">UNIQUE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INDEX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_cellphone&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cellphone&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>首先创建了一个虚拟列 &lt;code>cellphone&lt;/code>，这个列是由函数 &lt;code>loginInfo-&amp;gt;&amp;gt;&amp;quot;$.cellphone&amp;quot;&lt;/code> 计算得到的。&lt;/li>
&lt;li>在这个虚拟列上创建一个唯一索引 &lt;code>idx_cellphone&lt;/code>。&lt;/li>
&lt;/ol>
&lt;p>通过虚拟列 &lt;code>cellphone&lt;/code> 进行查询，就可以看到优化器会使用到新创建的 &lt;code>idx_cellphone&lt;/code> 索引：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserLogin&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cellphone&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;13918888888&amp;#39;&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="k">G&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">***************************&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">row&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">***************************&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">select_type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SIMPLE&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">table&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserLogin&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">partitions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">const&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">possible_keys&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_cellphone&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_cellphone&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">key_len&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1023&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ref&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">const&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">rows&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">filtered&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Extra&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">row&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">warning&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sec&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>用户画像设计&lt;span class="hx-absolute -hx-mt-20" id="用户画像设计">&lt;/span>
&lt;a href="#%e7%94%a8%e6%88%b7%e7%94%bb%e5%83%8f%e8%ae%be%e8%ae%a1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>用户画像（也就是对用户打标签）比如：&lt;/p>
&lt;ul>
&lt;li>在电商行业中，根据用户的穿搭喜好，推荐相应的商品；&lt;/li>
&lt;li>在音乐行业中，根据用户喜欢的音乐风格和常听的歌手，推荐相应的歌曲；&lt;/li>
&lt;li>在金融行业，根据用户的风险喜好和投资经验，推荐相应的理财产品。&lt;/li>
&lt;/ul>
&lt;p>就可以使用 JSON 类型在数据库中存储用户画像信息，并结合 JSON 数组类型和多值索引的特点进行高效查询。假设有张画像定义表：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Tags&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">tagId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">bigint&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">auto_increment&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">tagName&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">varchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">primary&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">key&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tagId&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Tags&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">-------+--------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tagId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tagName&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">-------+--------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">70&lt;/span>&lt;span class="err">后&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">80&lt;/span>&lt;span class="err">后&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">90&lt;/span>&lt;span class="err">后&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="err">后&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">爱运动&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">高学历&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">小资&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">有房&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">有车&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">常看电影&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">爱网购&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">爱外卖&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">-------+--------------+&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>表 Tags 是一张画像定义表，用于描述当前定义有多少个标签，接着给每个用户打标签，比如用户 David，他的标签是 80 后、高学历、小资、有房、常看电影；用户 Tom，90 后、常看电影、爱外卖。&lt;/p>
&lt;p>若不用 JSON 数据类型进行标签存储，通常会将用户标签通过字符串，加上分割符的方式，在一个字段中存取用户所有的标签：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">+-------+---------------------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span>用户 &lt;span class="p">|&lt;/span>标签 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-------+---------------------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span>David &lt;span class="p">|&lt;/span>80后 ； 高学历 ； 小资 ； 有房 ；常看电影 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span>Tom &lt;span class="p">|&lt;/span>90后 ；常看电影 ； 爱外卖 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-------+---------------------------------------+&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>缺点&lt;/strong>：不好搜索特定画像的用户，另外分隔符也是一种自我约定，在数据库中其实可以任意存储其他数据，最终产生脏数据。&lt;/p>
&lt;p>JSON 数据类型就能很好解决这个问题：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">DROP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">IF&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">EXISTS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserTag&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserTag&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">bigint&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">userTags&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JSON&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserTag&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">VALUES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;[2,6,8,10]&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserTag&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">VALUES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;[3,10,12]&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>MySQL 8.0.17 版本开始支持 Multi-Valued Indexes，用于在 JSON 数组上创建索引，并通过函数 member of、json_contains、json_overlaps 来快速检索索引数据。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">ALTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserTag&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">ADD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INDEX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_user_tags&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="k">cast&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">userTags&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="s2">&amp;#34;$&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unsigned&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">array&lt;/span>&lt;span class="p">)));&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>如果想要查询用户画像为常看电影的用户，可以使用函数 MEMBER OF：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserTag&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MEMBER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">OF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">userTags&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="s2">&amp;#34;$&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="k">G&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">***************************&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">row&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">***************************&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">select_type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SIMPLE&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">table&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserTag&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">partitions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ref&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">possible_keys&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_user_tags&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_user_tags&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">key_len&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ref&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">const&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">rows&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">filtered&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Extra&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">Using&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">row&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">warning&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sec&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserTag&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MEMBER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">OF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">userTags&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="s2">&amp;#34;$&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">--------+---------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">userTags&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">--------+---------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">--------+---------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">rows&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sec&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>如果想要查询画像为 80 后，且常看电影的用户，可以使用函数 JSON_CONTAINS：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserTag&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JSON_CONTAINS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">userTags&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="s2">&amp;#34;$&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;[2,10]&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="k">G&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">***************************&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">row&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">***************************&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">select_type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SIMPLE&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">table&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserTag&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">partitions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">possible_keys&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_user_tags&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_user_tags&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">key_len&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ref&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">rows&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">filtered&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Extra&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">Using&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">row&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">warning&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sec&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserTag&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JSON_CONTAINS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">userTags&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="s2">&amp;#34;$&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;[2,10]&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">--------+---------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">userTags&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">--------+---------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">--------+---------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">row&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sec&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>如果想要查询画像为 80 后或 90 后，且常看电影的用户，则可以使用函数 JSON_OVERLAP：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserTag&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JSON_OVERLAPS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">userTags&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="s2">&amp;#34;$&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;[2,3,10]&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="k">G&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">***************************&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">row&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">***************************&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">select_type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SIMPLE&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">table&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserTag&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">partitions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">possible_keys&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_user_tags&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_user_tags&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">key_len&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ref&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">rows&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">filtered&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Extra&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">Using&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">row&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">warning&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sec&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserTag&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JSON_OVERLAPS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">userTags&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="s2">&amp;#34;$&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;[2,3,10]&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">--------+---------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">userTags&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">--------+---------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="c1">--------+---------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">rows&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">01&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sec&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">@&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> &amp;#34;cellphone&amp;#34;: &amp;#34;188888888888&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> &amp;#34;wxchat&amp;#34;: &amp;#34;this.&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> &amp;#34;QQ&amp;#34;: &amp;#34;166666666&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">}&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserLogin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">VALUES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">@&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">JSON_UNQUOTE&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JSON_EXTRACT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loginInfo&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;$.cellphone&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cellphone&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">JSON_UNQUOTE&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JSON_EXTRACT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loginInfo&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;$.wxchat&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">wxchat&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserLogin&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>使用 &lt;code>-&amp;gt;&amp;gt;&lt;/code> 表达式，效果一样：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">loginInfo&lt;/span>&lt;span class="o">-&amp;gt;&amp;gt;&lt;/span>&lt;span class="s2">&amp;#34;$.cellphone&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cellphone&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">loginInfo&lt;/span>&lt;span class="o">-&amp;gt;&amp;gt;&lt;/span>&lt;span class="s2">&amp;#34;$.wxchat&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">wxchat&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserLogin&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>大类型&lt;span class="hx-absolute -hx-mt-20" id="大类型">&lt;/span>
&lt;a href="#%e5%a4%a7%e7%b1%bb%e5%9e%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>尽量少用 &lt;code>BLOB&lt;/code> 和 &lt;code>TEXT&lt;/code> 等大类型，如果实在要用可以考虑将 &lt;code>BLOB&lt;/code> 和 &lt;code>TEXT&lt;/code> 字段单独存一张表，用 &lt;code>id&lt;/code> 关联。&lt;/p></description></item><item><title>索引设计</title><link>https://shipengqi.github.io/db-learn/docs/mysql/practice/02_index_design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/db-learn/docs/mysql/practice/02_index_design/</guid><description>
&lt;p>索引设计的核心思想就是&lt;strong>尽量利用一两个复杂的多字段联合索引，抗下 80% 以上的查询&lt;/strong>，然后用一两个辅助索引尽量抗下剩余的一些非典型查询，保证这种大数据量表的查询尽可能多的都能充分利用索引，这样就能保证查询速度和性能了。&lt;/p>
&lt;h2>代码先行，索引后上&lt;span class="hx-absolute -hx-mt-20" id="代码先行索引后上">&lt;/span>
&lt;a href="#%e4%bb%a3%e7%a0%81%e5%85%88%e8%a1%8c%e7%b4%a2%e5%bc%95%e5%90%8e%e4%b8%8a" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>一般应该等到主体业务功能开发完毕，把涉及到该表相关 SQL 都要拿出来分析之后再建立索引。&lt;/p>
&lt;h2>联合索引尽量覆盖条件&lt;span class="hx-absolute -hx-mt-20" id="联合索引尽量覆盖条件">&lt;/span>
&lt;a href="#%e8%81%94%e5%90%88%e7%b4%a2%e5%bc%95%e5%b0%bd%e9%87%8f%e8%a6%86%e7%9b%96%e6%9d%a1%e4%bb%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>可以设计一个或者两三个联合索引(尽量少建单值索引)，让每一个联合索引都尽量去包含 SQL 语句里的 &lt;code>where&lt;/code>、&lt;code>order by&lt;/code>、&lt;code>group by&lt;/code> 的字段，还要确保这些联合索引的字段顺序尽量满足 SQL 查询的最左前缀原则。&lt;/p>
&lt;p>联合索引中的某个字段如果是&lt;strong>范围查找，最好把这个字段放在联合索引的最后面&lt;/strong>。因为&lt;strong>一般情况下，范围查找之后的字段就无法走索引了&lt;/strong>。&lt;/p>
&lt;p>示例：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 联合索引 (province,city,sex)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">province&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">xx&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">city&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">xx&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">xx&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">xx&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>上面的语句 &lt;code>age&lt;/code> 是一个范围查找字段，所以最好把它放在联合索引的最后面，即 &lt;code>(province,city,sex,age)&lt;/code>。但是由于上面的 SQL 并没有用到 &lt;code>sex&lt;/code> 字段，会导致 &lt;code>age&lt;/code> 无法走索引，所以可以优化为：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 加上 sex in (&amp;#39;female&amp;#39;,&amp;#39;male&amp;#39;) 的条件
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">province&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">xx&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">city&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">xx&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;female&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;male&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">xx&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">xx&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>假设还有一个筛选条件，要筛选最近一周登录过的用户，对应后台 SQL 可能是这样：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">province&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">xx&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">city&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">xx&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">sex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;female&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;male&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="n">xx&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="n">xx&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">latest_login_time&lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">xx&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>latest_login_time&lt;/code> 也是一个范围查找字段，如果把它放在联合索引里，如 &lt;code>(province,city,sex,hobby,age,latest_login_time)&lt;/code>，&lt;code>age&lt;/code> 和 &lt;code>latest_login_time&lt;/code> 两个范围查找，显然是不行的。可以换一种思路，设计一个字段 &lt;code>is_login_in_latest_7_days&lt;/code>，用户如果一周内有登录值就为 1，否则为 0，那么就可以把索引设计成 &lt;code>(province,city,sex,hobby,is_login_in_latest_7_days,age)&lt;/code> 来满足上面那种场景。&lt;/p>
&lt;h2>只为用于搜索、排序或分组的列创建索引&lt;span class="hx-absolute -hx-mt-20" id="只为用于搜索排序或分组的列创建索引">&lt;/span>
&lt;a href="#%e5%8f%aa%e4%b8%ba%e7%94%a8%e4%ba%8e%e6%90%9c%e7%b4%a2%e6%8e%92%e5%ba%8f%e6%88%96%e5%88%86%e7%bb%84%e7%9a%84%e5%88%97%e5%88%9b%e5%bb%ba%e7%b4%a2%e5%bc%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>不要在小基数字段上建立索引&lt;span class="hx-absolute -hx-mt-20" id="不要在小基数字段上建立索引">&lt;/span>
&lt;a href="#%e4%b8%8d%e8%a6%81%e5%9c%a8%e5%b0%8f%e5%9f%ba%e6%95%b0%e5%ad%97%e6%ae%b5%e4%b8%8a%e5%bb%ba%e7%ab%8b%e7%b4%a2%e5%bc%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>索引基数是指这个字段在表里总共有多少个不同的值，比如一张表总共 100 万行记录，其中有个性别字段，其值不是‘男’就是‘女’，那么该字段的基数就是 2。对这种小基数字段建立索引的话，还不如全表扫描。因为索引树里就包含‘男’和‘女’两种值，根本没法进行快速的二分查找，那用索引就没有太大的意义了。&lt;/p>
&lt;h2>索引列的类型尽量小&lt;span class="hx-absolute -hx-mt-20" id="索引列的类型尽量小">&lt;/span>
&lt;a href="#%e7%b4%a2%e5%bc%95%e5%88%97%e7%9a%84%e7%b1%bb%e5%9e%8b%e5%b0%bd%e9%87%8f%e5%b0%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>尽量对字段类型较小的列设计索引，因为字段类型较小的话，占用磁盘空间也会比较小。&lt;/p>
&lt;p>以整数类型为例，有 &lt;code>TINYINT&lt;/code>、&lt;code>MEDIUMINT&lt;/code>、&lt;code>INT&lt;/code>、&lt;code>BIGINT&lt;/code> 这么几种，它们占用的存储空间依次递增，我们这里所说的&lt;strong>类型大小指的就是该类型表示的数据范围的大小&lt;/strong>。&lt;/p>
&lt;p>在表示的整数范围允许的情况下，&lt;strong>尽量让索引列使用较小的类型&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>数据类型越小，在查询时进行的比较操作越快。&lt;/li>
&lt;li>数据类型越小，&lt;strong>索引占用的存储空间就越少，在一个数据页内就可以放下更多的记录，从而减少磁盘 I/O 带来的性能损耗，也就意味着可以把更多的数据页缓存在内存中，从而加快读写效率&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;h2>长字符串可以采用前缀索引&lt;span class="hx-absolute -hx-mt-20" id="长字符串可以采用前缀索引">&lt;/span>
&lt;a href="#%e9%95%bf%e5%ad%97%e7%ac%a6%e4%b8%b2%e5%8f%af%e4%bb%a5%e9%87%87%e7%94%a8%e5%89%8d%e7%bc%80%e7%b4%a2%e5%bc%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>假设字符串很长，那存储一个字符串就需要占用很大的存储空间。&lt;/p>
&lt;p>例如，&lt;code>varchar(100)&lt;/code> 这种大字段建立索引，可以稍微优化下，比如针对这个字段的前 20 个字符建立索引，就是说，对这个字段里的每个值的前 20 个字符放在索引树里。&lt;/p>
&lt;p>这样在根据 name 字段来搜索记录时虽然不能精确的定位到记录的位置，但是能定位到相应前缀所在的位置，然后根据前缀相同的记录的主键值回表查询完整的字符串值，再对比就好了。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person_info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">birthday&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">DATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">phone_number&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">CHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">country&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">varchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_name_birthday_phone_number&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">birthday&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">phone_number&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>但是对于 &lt;code>order by name&lt;/code>，那么此时 &lt;code>name&lt;/code> 因为在索引树里仅仅包含了前 20 个字符，无法对后边的字符不同的记录进行排序，&lt;code>group by&lt;/code> 也是同理。&lt;/p>
&lt;h2>主键插入顺序&lt;span class="hx-absolute -hx-mt-20" id="主键插入顺序">&lt;/span>
&lt;a href="#%e4%b8%bb%e9%94%ae%e6%8f%92%e5%85%a5%e9%a1%ba%e5%ba%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>据页和记录又是按照记录主键值从小到大的顺序进行排序，所以如果插入的记录的主键值是依次增大的话，那每插满一个数据页就换到下一个数据页继续插，而如果插入的主键值忽大忽小的话，可能需要&lt;strong>页面分裂和记录移位&lt;/strong>。意味着：&lt;strong>性能损耗&lt;/strong>。&lt;/p>
&lt;p>最好让插入的记录的主键值依次递增，这样就不会发生这样的性能损耗了。所以建议：&lt;strong>让主键具有 AUTO_INCREMENT，让存储引擎自己为表生成主键&lt;/strong>，而不是手动插入。&lt;/p>
&lt;h2>优先 where&lt;span class="hx-absolute -hx-mt-20" id="优先-where">&lt;/span>
&lt;a href="#%e4%bc%98%e5%85%88-where" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>在 &lt;code>where&lt;/code> 和 &lt;code>order by&lt;/code> 出现索引设计冲突时，到底是针对 &lt;code>where&lt;/code> 去设计索引，还是针对 &lt;code>order by&lt;/code> 设计索引？&lt;/p>
&lt;p>一般是让 &lt;code>where&lt;/code> 条件去使用索引来快速筛选出来一部分指定的数据，接着再进行排序。&lt;strong>因为大多数情况基于索引进行 &lt;code>where&lt;/code> 筛选往往可以最快速度筛选出你要的少部分数据，然后做排序的成本可能会小很多&lt;/strong>。&lt;/p>
&lt;h2>基于慢 SQL 查询做优化&lt;span class="hx-absolute -hx-mt-20" id="基于慢-sql-查询做优化">&lt;/span>
&lt;a href="#%e5%9f%ba%e4%ba%8e%e6%85%a2-sql-%e6%9f%a5%e8%af%a2%e5%81%9a%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>可以根据监控后台的一些慢 SQL，针对这些慢 SQL 查询做特定的索引优化。参考 &lt;a href="https://note.youdao.com/ynoteshare/index.html?id=c71f1e66b7f91dab989a9d3a7c8ceb8e&amp;amp;type=note&amp;amp;_time=1747366858606" target="_blank" rel="noopener">SQL 慢查询&lt;/a>。&lt;/p></description></item><item><title>Explain 和查询优化</title><link>https://shipengqi.github.io/db-learn/docs/mysql/practice/03_index_optimization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/db-learn/docs/mysql/practice/03_index_optimization/</guid><description>
&lt;h2>Explain 分析&lt;span class="hx-absolute -hx-mt-20" id="explain-分析">&lt;/span>
&lt;a href="#explain-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;code>Explain&lt;/code> 关键字可以模拟优化器执行 SQL 语句，分析查询语句或是结构的性能瓶颈。&lt;/p>
&lt;p>在 &lt;code>select&lt;/code> 语句之前增加 &lt;code>explain&lt;/code> 关键字，MySQL 会在查询上设置一个标记，执行查询会返回执行计划的信息，而不是执行这条 SQL。&lt;/p>
&lt;p>注意：如果 &lt;code>from&lt;/code> 中包含子查询，仍会执行该子查询，将结果放入临时表中。&lt;/p>
&lt;p>创建示例表：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">DROP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">IF&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">EXISTS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">actor&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">actor&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">varchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">45&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">update_time&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">datetime&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ENGINE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">InnoDB&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">utf8&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">actor&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">update_time&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">VALUES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;2017-12-22 15:27:18&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;2017-12-22 15:27:18&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;2017-12-22 15:27:18&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">DROP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">IF&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">EXISTS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">film&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">film&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AUTO_INCREMENT&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">varchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">idx_name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ENGINE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">InnoDB&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">utf8&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">film&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">VALUES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;film0&amp;#39;&lt;/span>&lt;span class="p">),(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;film1&amp;#39;&lt;/span>&lt;span class="p">),(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;film2&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">DROP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">IF&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">EXISTS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">film_actor&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">film_actor&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">film_id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">actor_id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">remark&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">varchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">idx_film_actor_id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">film_id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">actor_id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ENGINE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">InnoDB&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">utf8&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">film_actor&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">film_id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">actor_id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">VALUES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">),(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">),(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Explain 列&lt;span class="hx-absolute -hx-mt-20" id="explain-列">&lt;/span>
&lt;a href="#explain-%e5%88%97" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>id&lt;span class="hx-absolute -hx-mt-20" id="id">&lt;/span>
&lt;a href="#id" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;code>select&lt;/code> 查询的序列号，有几个 &lt;code>select&lt;/code> 就有几个 &lt;code>id&lt;/code>，并且 &lt;code>id&lt;/code> 的顺序是按 &lt;code>select&lt;/code> 出现的顺序增长的。&lt;code>id&lt;/code> 列越大执行优先级越高，&lt;code>id&lt;/code> 相同则从上往下执行，&lt;code>id&lt;/code> 为 &lt;code>NULL&lt;/code> 最后执行。&lt;/p>
&lt;h4>select_type&lt;span class="hx-absolute -hx-mt-20" id="select_type">&lt;/span>
&lt;a href="#select_type" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>表示对应行是简单还是复杂的查询。&lt;/p>
&lt;ol>
&lt;li>&lt;code>simple&lt;/code>：简单的 select 查询，查询中不包含子查询或者 &lt;code>UNION&lt;/code>。&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">explain&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">film&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/explain-simple-select.png" alt="explain-simple-select" loading="lazy" />&lt;/p>
&lt;ol start="2">
&lt;li>&lt;code>primary&lt;/code>：查询中若包含任何复杂的子部分，最外层查询则被标记为 &lt;code>primary&lt;/code>。&lt;/li>
&lt;li>&lt;code>subquery&lt;/code>：包含在 &lt;code>select&lt;/code> 中的子查询（&lt;strong>不在 &lt;code>from&lt;/code> 子句中&lt;/strong>）&lt;/li>
&lt;li>&lt;code>derived&lt;/code>：包含在 &lt;code>from&lt;/code> 子句中的子查询。MySQL会将结果存放在一个临时表中，也称为派生表。&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 关闭衍生表的合并优化
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">session&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">optimizer_switch&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;derived_merge=off&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">explain&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">actor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">film&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">der&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 还原默认配置
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">session&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">optimizer_switch&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;derived_merge=on&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/explain-complex-select.png" alt="explain-complex-select" loading="lazy" />&lt;/p>
&lt;p>可以看出来：&lt;/p>
&lt;ul>
&lt;li>&lt;code>(select 1 from actor where id = 1)&lt;/code> 就是 &lt;code>id&lt;/code> 为 2， 类型为 &lt;code>subquery&lt;/code> 的 &lt;code>select&lt;/code>。&lt;/li>
&lt;li>&lt;code>(select * from film where id = 1)&lt;/code> 就是 &lt;code>id&lt;/code> 为 3，类型为 &lt;code>derived&lt;/code> 的 &lt;code>select&lt;/code>。将查询语句的结果集放到一个临时表中。&lt;/li>
&lt;li>最外层的 &lt;code>select&lt;/code> 就是 &lt;code>id&lt;/code> 为 1，类型为 &lt;code>primary&lt;/code>。这个语句的 &lt;code>table&lt;/code> 的值为 &lt;code>&amp;lt;dirived3&amp;gt;&lt;/code>，表示这个查询是从衍生表中查询的。&lt;code>&amp;lt;dirived3&amp;gt;&lt;/code> 中的 &lt;code>3&lt;/code> 表示 &lt;code>id&lt;/code> 为 3 的 &lt;code>select&lt;/code>。&lt;/li>
&lt;/ul>
&lt;ol start="5">
&lt;li>&lt;code>union&lt;/code>：在 &lt;code>union&lt;/code> 中的第二个和随后的 &lt;code>select&lt;/code>&lt;/li>
&lt;/ol>
&lt;h4>type&lt;span class="hx-absolute -hx-mt-20" id="type">&lt;/span>
&lt;a href="#type" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>这一列表示&lt;strong>关联类型&lt;/strong>或&lt;strong>访问类型&lt;/strong>，即 MySQL 决定如何查找表中的行，查找数据行记录的大概范围。依次从最优到最差分别为：&lt;code>system&lt;/code> &amp;gt; &lt;code>const&lt;/code> &amp;gt; &lt;code>eq_ref&lt;/code> &amp;gt; &lt;code>ref&lt;/code> &amp;gt; &lt;code>range&lt;/code> &amp;gt; &lt;code>index&lt;/code> &amp;gt; &lt;code>ALL&lt;/code>。一般来说，要&lt;strong>保证查询达到 range 级别，最好达到 ref&lt;/strong>。&lt;/p>
&lt;ol>
&lt;li>&lt;code>NULL&lt;/code>：MySQL 优化器优化查询语句时，判断不需要再扫描表或着索引树。例如：在索引列中选取最小值，&lt;code>select min(id) from film;&lt;/code>，直接从索引树中获取最小值，不需要扫描表。&lt;/li>
&lt;li>&lt;code>system&lt;/code>，&lt;code>const&lt;/code>：主键索引或唯一二级索引的&lt;strong>等值&lt;/strong>查询。MySQL 能对查询的某部分进行优化并将其转化成一个常量，就是说像查询常量一样快。因为表最多有一个匹配行，读取 1 次，所以速度很快。&lt;code>system&lt;/code> 是 &lt;code>const&lt;/code> 类型的特列，表示要查询的表或者结果集中只有一条数据。&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">film&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tmp&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SHOW&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">WARNINGS&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/explain-type-const.png" alt="expalin-type-const" loading="lazy" />&lt;/p>
&lt;p>&lt;code>SHOW WARNINGS&lt;/code> 的 message 可以看到表示查询被优化成了 &lt;code>select 1 AS 'id','film1' AS 'name' from dual&lt;/code>。&lt;/p>
&lt;ol start="3">
&lt;li>&lt;code>eq_ref&lt;/code>：&lt;strong>主键索引或唯一二级索引的所有列都被被连接使用&lt;/strong>，最多只会返回一条符合条件的记录。这可能是在 &lt;code>const&lt;/code> 之外最好的联接类型了，简单的 &lt;code>select&lt;/code> 查询不会出现这种类型。&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">film_actor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">LEFT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">JOIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">film&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ON&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">film_actor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">film_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">film&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/explain-type-eq_ref.png" alt="expalin-type-eq_ref" loading="lazy" />&lt;/p>
&lt;p>可以看到，两个 &lt;code>select&lt;/code> 的 &lt;code>id&lt;/code> 都是 1，说明关联的两张表没有明确的前后顺序，会一起去查询，不过真正执行的时候，会先执行上面的 &lt;code>select&lt;/code>。&lt;/p>
&lt;ul>
&lt;li>&lt;code>film&lt;/code> 表对应的 type 是 &lt;code>eq_ref&lt;/code>，因为关联的条件使用的是 &lt;code>film&lt;/code> 表的主键 &lt;code>id&lt;/code>，所以会使用主键索引来查询数据。使用主键来查询，只会返回一条记录，速度还是很快的。&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>&lt;code>ref&lt;/code>：相比 &lt;code>eq_ref&lt;/code>，&lt;strong>不使用唯一索引，而是使用二级索引或者唯一性索引的部分前缀&lt;/strong>，索引要和某个值相比较，&lt;strong>可能会找到多个符合条件的行&lt;/strong>。&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- name 是普通索引
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">film&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;film1&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="5">
&lt;li>&lt;code>range&lt;/code>：利用索引进行范围匹配。范围扫描通常出现在 &lt;code>in(), between ,&amp;gt; ,&amp;lt;, &amp;gt;=&lt;/code> 等操作中。&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">actor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="6">
&lt;li>&lt;code>index&lt;/code>：&lt;strong>全索引扫描&lt;/strong>，一般是扫描某个二级索引，直接对二级索引的叶子节点遍历和扫描，速度还是比较慢的，这种查询一般为使用&lt;strong>覆盖索引&lt;/strong>，二级索引一般比较小，所以这种通常比 &lt;code>ALL&lt;/code> 快一些。&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">film&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/explain-type-index.png" alt="expalin-type-index" loading="lazy" />&lt;/p>
&lt;p>这里扫描的是二级索引 &lt;code>idx_name&lt;/code>，没有去扫描聚簇索引。MySQL 在优化时，&lt;strong>如果查询的字段在二级索引中全部都有，会优先使用二级索引&lt;/strong>，而不会去扫描聚簇索引。因为一般情况下，聚簇索引的叶子节点存储的是完整的行数据，所要扫描的数据量会比较大，而二级索引的叶子节点存储的是主键值，所以扫描的行数会比较少。&lt;/p>
&lt;ol start="7">
&lt;li>&lt;code>ALL&lt;/code>：Full Table Scan，即&lt;strong>全表扫描&lt;/strong>，直接扫描聚簇索引的所有叶子节点。通常情况下这需要增加索引来进行优化了。&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">actor&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>possible_keys&lt;span class="hx-absolute -hx-mt-20" id="possible_keys">&lt;/span>
&lt;a href="#possible_keys" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>查询时，可能使用的索引。如果 &lt;code>possible_keys&lt;/code> 有列，而 &lt;code>key&lt;/code> 为 &lt;code>NULL&lt;/code>，这种情况是因为表中数据不多，MySQL 认为索引对此查询帮助不大，选择了全表查询。&lt;/p>
&lt;p>如果 &lt;code>possible_keys&lt;/code> 为 &lt;code>NULL&lt;/code>，则没有相关的索引。在这种情况下，可以考虑创造一个适当的索引来提高查询性能。&lt;/p>
&lt;h4>key&lt;span class="hx-absolute -hx-mt-20" id="key">&lt;/span>
&lt;a href="#key" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>实际使用的索引。如果为 &lt;code>NULL&lt;/code>，则没有使用索引。如果想强制 MySQL 使用或忽视 &lt;code>possible_keys&lt;/code> 列中的索引，可以在查询中使用 &lt;code>force index&lt;/code>、&lt;code>ignore index&lt;/code>。&lt;/p>
&lt;h4>key_len&lt;span class="hx-absolute -hx-mt-20" id="key_len">&lt;/span>
&lt;a href="#key_len" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>显示 MySQL 在索引里使用的字节数，通过这个值可以算出具体使用了索引中的哪些列。例如，&lt;code>film_actor&lt;/code> 的联合索引 &lt;code>idx_film_actor_id&lt;/code> 由 &lt;code>film_id&lt;/code> 和 &lt;code>actor_id&lt;/code> 两个 &lt;code>int&lt;/code> 列组成，并且每个 &lt;code>int&lt;/code> 是 &lt;code>4 &lt;/code>字节。通过结果中的 &lt;code>key_len=4&lt;/code> 可推断出查询使用了第一个列：&lt;code>film_id&lt;/code> 列来执行索引查找。&lt;/p>
&lt;p>&lt;code>key_len&lt;/code> 计算规则如下：&lt;/p>
&lt;ul>
&lt;li>字符串，&lt;code>char(n)&lt;/code> 和 &lt;code>varchar(n)&lt;/code>，&lt;code>n&lt;/code> 均代表字符数，而不是字节数，如果是 &lt;code>utf-8&lt;/code>，一个数字或字母占 &lt;code>1&lt;/code> 个字节，一个汉字占 &lt;code>3&lt;/code> 个字节
&lt;code>char(n)&lt;/code>：如果存汉字长度就是 &lt;code>3n&lt;/code> 字节
&lt;code>varchar(n)&lt;/code>：如果存汉字则长度是 &lt;code>3n + 2&lt;/code> 字节，加的 &lt;code>2&lt;/code> 字节用来存储字符串长度，因为 &lt;code>varchar&lt;/code> 是变长字符串&lt;/li>
&lt;li>数值类型
&lt;ul>
&lt;li>tinyint：1 字节&lt;/li>
&lt;li>smallint：2 字节&lt;/li>
&lt;li>int：4 字节&lt;/li>
&lt;li>bigint：8 字节　　&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>时间类型　
&lt;ul>
&lt;li>date：3 字节&lt;/li>
&lt;li>timestamp：4 字节&lt;/li>
&lt;li>datetime：8 字节&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>如果字段允许为 NULL，需要 1 字节记录是否为 NULL&lt;/li>
&lt;li>索引最大长度是 768 字节，当字符串过长时，MySQL 会做一个类似左前缀索引的处理，将前半部分的字符提取出来做索引&lt;/li>
&lt;/ul>
&lt;h4>ref&lt;span class="hx-absolute -hx-mt-20" id="ref">&lt;/span>
&lt;a href="#ref" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>显示索引的哪些列或常量被使用了。&lt;/p>
&lt;h4>rows&lt;span class="hx-absolute -hx-mt-20" id="rows">&lt;/span>
&lt;a href="#rows" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>表示 MySQL 估计要读取并检测的行数，注意这个不是结果集里的行数。&lt;/p>
&lt;h4>filtered&lt;span class="hx-absolute -hx-mt-20" id="filtered">&lt;/span>
&lt;a href="#filtered" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>该列是一个百分比的值，&lt;code>rows*filtered/100&lt;/code> 可以估算出将要和 explain 中前一个表进行连接的行数。&lt;/p>
&lt;h4>extra&lt;span class="hx-absolute -hx-mt-20" id="extra">&lt;/span>
&lt;a href="#extra" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>展示的是额外信息：&lt;/p>
&lt;ul>
&lt;li>Using index：使用&lt;strong>覆盖索引&lt;/strong>，避免访问了表的数据行，效率不错。&lt;/li>
&lt;li>Using where：表示使用了 &lt;code>where&lt;/code> 过滤，并且&lt;strong>查询的列未被索引覆盖&lt;/strong>。&lt;/li>
&lt;li>Usering index condition：表示使用了&lt;strong>索引下推&lt;/strong>优化。&lt;/li>
&lt;li>&lt;strong>Using temporary&lt;/strong>：要创建一张临时表来处理查询。出现这种情况&lt;strong>一般是要进行优化的&lt;/strong>，首先是想到&lt;strong>用索引来优化&lt;/strong>。例如 &lt;code>EXPLAIN SELECT DISTINCT name FROM actor;&lt;/code> &lt;code>actor.name&lt;/code> 没有索引，此时创建了张临时表来 &lt;code>distinct&lt;/code>。可以为 &lt;code>name&lt;/code> 列创建索引，然后再去重，MySQL 在扫描索引树的过程中就可以直接去重。&lt;strong>因为索引是有序的，相同的记录是在一起的，相同的记录直接扔掉就可以了&lt;/strong>。&lt;/li>
&lt;li>&lt;strong>Using filesort&lt;/strong>：将用外部排序而不是索引排序，数据较小时在内存排序，否则需要在磁盘完成排序。这种情况下一般也是要考虑使用索引来优化。&lt;strong>索引本身就是排好序的&lt;/strong>。&lt;/li>
&lt;li>Using join buffer：使用连接缓存。&lt;/li>
&lt;li>Select tables optimized away：使用某些聚合函数（比如 &lt;code>max&lt;/code>、&lt;code>min&lt;/code>）来访问存在索引的某个字段。&lt;/li>
&lt;/ul>
&lt;h4>table&lt;span class="hx-absolute -hx-mt-20" id="table">&lt;/span>
&lt;a href="#table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>表示 &lt;code>explain&lt;/code> 的一行正在访问哪个表。&lt;/p>
&lt;h4>partitions&lt;span class="hx-absolute -hx-mt-20" id="partitions">&lt;/span>
&lt;a href="#partitions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>如果查询是基于分区表的话，partitions 字段会显示查询将访问的分区。&lt;/p>
&lt;h3>Using filesort 文件排序原理详解&lt;span class="hx-absolute -hx-mt-20" id="using-filesort-文件排序原理详解">&lt;/span>
&lt;a href="#using-filesort-%e6%96%87%e4%bb%b6%e6%8e%92%e5%ba%8f%e5%8e%9f%e7%90%86%e8%af%a6%e8%a7%a3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>文件排序方式：&lt;/p>
&lt;ul>
&lt;li>单路排序：是一次性取出（聚簇索引）&lt;strong>满足条件行的所有字段&lt;/strong>，然后在 sort buffer 中进行排序；trace 工具可以看到 &lt;code>sort_mode&lt;/code> 信息里显示 &lt;code>&amp;lt;sort_key, additional_fields&amp;gt;&lt;/code> 或者 &lt;code>&amp;lt;sort_key,packed_additional_fields&amp;gt;&lt;/code>，&lt;code>sort_key&lt;/code> 就表示排序的 &lt;code>key&lt;/code>，&lt;code>additional_fields&lt;/code> 表示表中的其他字段。&lt;/li>
&lt;li>双路排序（又叫&lt;strong>回表排序模式&lt;/strong>）：是首先根据相应的条件取出（聚簇索引）相应的&lt;strong>排序字段&lt;/strong>和可以直接定位行数据的&lt;strong>主键 ID，然后在 sort buffer 中进行排序，排序完后需要回表去取回其它需要的字段&lt;/strong>；trace 工具可以看到 &lt;code>sort_mode&lt;/code> 信息里显示 &lt;code>&amp;lt;sort_key, rowid&amp;gt;&lt;/code>，&lt;code>sort_key&lt;/code> 就表示排序的 &lt;code>key&lt;/code>，&lt;code>rowid&lt;/code> 表示主键 ID。占用内存空间小，但是需要多回表一次。&lt;/li>
&lt;/ul>
&lt;p>判断使用哪种排序模式：&lt;/p>
&lt;ul>
&lt;li>如果字段的总长度（表中所有的列）小于 &lt;code>max_length_for_sort_data&lt;/code> ，那么使用单路排序模式；&lt;/li>
&lt;li>如果字段的总长度大于 &lt;code>max_length_for_sort_data&lt;/code> ，那么使用双路排序模式。&lt;/li>
&lt;/ul>
&lt;p>如果 MySQL 排序内存 sort_buffer 配置的比较小并且没有条件继续增加了，可以适当把 &lt;code>max_length_for_sort_data&lt;/code> 配置小点，让优化器选择使用双路排序算法，可以在 sort_buffer 中一次排序更多的行，只是需要再根据主键回到原表取数据。&lt;/p>
&lt;p>如果 MySQL 排序内存有条件可以配置比较大，可以适当增大 &lt;code>max_length_for_sort_data&lt;/code> 的值，让优化器优先选择全字段排序(单路排序)，把需要的字段放到 sort_buffer 中，这样排序后就会直接从内存里返回查询结果了。&lt;/p>
&lt;p>所以，MySQL 通过 &lt;code>max_length_for_sort_data&lt;/code> 这个参数来控制排序，在不同场景使用不同的排序模式，从而提升排序效率。&lt;/p>
&lt;blockquote>
&lt;p>注意，如果全部使用 sort_buffer 内存排序一般情况下效率会高于磁盘文件排序，但不能因为这个就随便增大 sort_buffer(默认 1M)，MySQL 很多参数设置都是做过优化的，不要轻易调整。&lt;/p>
&lt;/blockquote>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;strong>磁盘排序，最终还是要加载到内存中进行排序的，只不过由于数据量太大，需要先创建临时文件，然后在一块更大的内存中再加载临时文件进行排序，不会在 sort_buffer 中进行排序了&lt;/strong>。&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2>查询优化&lt;span class="hx-absolute -hx-mt-20" id="查询优化">&lt;/span>
&lt;a href="#%e6%9f%a5%e8%af%a2%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>常见的分页场景优化技巧&lt;span class="hx-absolute -hx-mt-20" id="常见的分页场景优化技巧">&lt;/span>
&lt;a href="#%e5%b8%b8%e8%a7%81%e7%9a%84%e5%88%86%e9%a1%b5%e5%9c%ba%e6%99%af%e4%bc%98%e5%8c%96%e6%8a%80%e5%b7%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">limit&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>从表 &lt;code>employees&lt;/code> 中取出从 10001 行开始的 10 行记录。看似只查询了 10 条记录，实际这条 SQL 是先读取 10010 条记录，然后抛弃前 10000 条记录，然后返回后面 10 条想要的数据。因此要&lt;strong>查询一张大表比较靠后的数据，执行效率是非常低的&lt;/strong>。&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>&lt;code>limit&lt;/code> 的执行过程，Server 层向 InnoDB 要第 1 条记录，InnoDB 得到完整的聚簇索引记录，然后返回给 Server 层。Server 将其发送给客户端之前，发现判断 &lt;code>limit 10000,10&lt;/code> 的要求，意味着符合条件的记录中的第 10001 条才可以真正发送给客户端，所以在这里先做个统计。假设 Server 层维护了一个称作 &lt;code>limit_count&lt;/code> 的变量用于统计已经跳过了多少条记录，此时就应该将 &lt;code>limit_count&lt;/code> 设置为 1。&lt;/p>
&lt;p>Server 层再向 InnoDB 要下一条记录，&lt;code>limit_count&lt;/code> 变为了 2。重估上面的操作。直到 &lt;code>limit_count&lt;/code> 等于 10010 的时候，Server 层才会真正的将 InnoDB 返回的完整聚簇索引记录发送给客户端。&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4>自增且连续的主键排序的分页查询&lt;span class="hx-absolute -hx-mt-20" id="自增且连续的主键排序的分页查询">&lt;/span>
&lt;a href="#%e8%87%aa%e5%a2%9e%e4%b8%94%e8%bf%9e%e7%bb%ad%e7%9a%84%e4%b8%bb%e9%94%ae%e6%8e%92%e5%ba%8f%e7%9a%84%e5%88%86%e9%a1%b5%e6%9f%a5%e8%af%a2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">limit&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">90000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 优化为
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">90000&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">limit&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>但是，这条改写的 SQL 在很多场景并不实用，因为表中可能某些记录被删后，主键空缺，导致结果不一致。&lt;/p>
&lt;h4>根据非主键字段排序的分页查询&lt;span class="hx-absolute -hx-mt-20" id="根据非主键字段排序的分页查询">&lt;/span>
&lt;a href="#%e6%a0%b9%e6%8d%ae%e9%9d%9e%e4%b8%bb%e9%94%ae%e5%ad%97%e6%ae%b5%e6%8e%92%e5%ba%8f%e7%9a%84%e5%88%86%e9%a1%b5%e6%9f%a5%e8%af%a2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 联合索引 (name,age,position)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 该 sql 没有使用 name 字段的索引，因为查找联合索引的结果集太大，并回表的成本比扫描全表的成本更高，所以优化器放弃使用索引。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ORDER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">BY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">limit&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">90000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 关键是让排序时返回的字段尽可能少，所以可以让排序和分页操作先查出主键，然后根据主键查到对应的记录，SQL 改写如下
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 优化为
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">inner&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">join&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">order&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">by&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">limit&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">90000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ed&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">on&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ed&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>优化后的语句全部都走了索引，其中 &lt;code>(select id from employees order by name limit 90000,5)&lt;/code> &lt;strong>使用了覆盖索引来优化&lt;/strong>，查询的字段只有 id 字段，而且排好了序。&lt;code>(select id from employees order by name limit 90000,5) ed&lt;/code> 产生的临时表只有 5 条记录，然后再根据主键 id 去 &lt;code>employees&lt;/code> 表中查询对应的记录。&lt;/p>
&lt;h3>JOIN 关联查询优化&lt;span class="hx-absolute -hx-mt-20" id="join-关联查询优化">&lt;/span>
&lt;a href="#join-%e5%85%b3%e8%81%94%e6%9f%a5%e8%af%a2%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>测试数据：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 示例表：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">t1&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AUTO_INCREMENT&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">idx_a&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ENGINE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">InnoDB&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">utf8&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">create&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">like&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 插入一些示例数据
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 往t1表插入1万行记录
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">DROP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PROCEDURE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">IF&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">EXISTS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">insert_t1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">DELIMITER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PROCEDURE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">insert_t1&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">BEGIN&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">DECLARE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">WHILE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10000&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DO&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t1&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">VALUES&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">END&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">WHILE&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">END&lt;/span>&lt;span class="p">;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">DELIMITER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CALL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">insert_t1&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 往t2表插入100行记录
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">DROP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PROCEDURE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">IF&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">EXISTS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">insert_t2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">DELIMITER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PROCEDURE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">insert_t2&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">BEGIN&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">DECLARE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">WHILE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DO&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">INSERT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INTO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">VALUES&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">END&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">WHILE&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">END&lt;/span>&lt;span class="p">;;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">DELIMITER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CALL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">insert_t2&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>MySQL 的表关联常见有两种算法：&lt;/p>
&lt;ul>
&lt;li>Nested-Loop Join 算法&lt;/li>
&lt;li>Block Nested-Loop Join 算法&lt;/li>
&lt;/ul>
&lt;h4>1. Nested-Loop Join 算法&lt;span class="hx-absolute -hx-mt-20" id="1-nested-loop-join-算法">&lt;/span>
&lt;a href="#1-nested-loop-join-%e7%ae%97%e6%b3%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>一次一行循环地从第一张表（称为&lt;strong>驱动表&lt;/strong>）中读取行，在这行数据中取到关联字段，根据关联字段在另一张表（&lt;strong>被驱动表&lt;/strong>）里取出满足条件的行，然后取出两张表的结果合集。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">inner&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">join&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">on&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/explain-join1.png" alt="explain-join1" loading="lazy" />&lt;/p>
&lt;p>从执行计划中可以看到：&lt;/p>
&lt;ul>
&lt;li>驱动表是 &lt;code>t2&lt;/code>，被驱动表是 &lt;code>t1&lt;/code>。先执行的就是驱动表（执行计划结果的 id 如果一样则按从上到下顺序执行 sql）；&lt;/li>
&lt;li>如果执行计划 &lt;code>Extra&lt;/code> 中未出现 &lt;code>Using join buffer&lt;/code> 则表示使用的 join 算法是 NLJ。&lt;/li>
&lt;/ul>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;strong>优化器一般会优先选择小表做驱动表。所以使用 inner join 时，排在前面的表并不一定就是驱动表&lt;/strong>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>SQL 的大致流程如下：&lt;/p>
&lt;ol>
&lt;li>从表 &lt;code>t2&lt;/code> 中读取一行数据（如果 &lt;code>t2&lt;/code> 表有查询过滤条件的，会从过滤结果里取出一行数据）；&lt;/li>
&lt;li>从第 1 步的数据中，取出关联字段 &lt;code>a&lt;/code>，到表 &lt;code>t1&lt;/code> 中查找；&lt;/li>
&lt;li>取出表 &lt;code>t1&lt;/code> 中满足条件的行，跟 &lt;code>t2&lt;/code> 中获取到的结果合并，作为结果返回给客户端；&lt;/li>
&lt;li>重复上面 3 步。&lt;/li>
&lt;/ol>
&lt;p>整个过程会读取 &lt;code>t2&lt;/code> 表的所有数据(扫描 100 行)，然后遍历这每行数据中字段 &lt;code>a&lt;/code> 的值，根据 &lt;code>t2&lt;/code> 表中 &lt;code>a&lt;/code> 的值索引扫描 &lt;code>t1&lt;/code> 表中的对应行(扫描 100 次 &lt;code>t1&lt;/code> 表的索引，1 次扫描可以认为最终只扫描 &lt;code>t1&lt;/code> 表一行完整数据，也就是总共 &lt;code>t1&lt;/code> 表也扫描了 100 行)。因此整个过程扫描了 200 行。&lt;/p>
&lt;p>&lt;strong>如果被驱动表的关联字段没索引，那就需要去聚簇索引扫描全表，所以使用 NLJ 算法性能会比较低，MySQL 会选择 Block Nested-Loop Join 算法&lt;/strong>。&lt;/p>
&lt;h4>2. Block Nested-Loop Join 算法&lt;span class="hx-absolute -hx-mt-20" id="2-block-nested-loop-join-算法">&lt;/span>
&lt;a href="#2-block-nested-loop-join-%e7%ae%97%e6%b3%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;strong>把驱动表的数据读入到 join_buffer 中&lt;/strong>，然后扫描被驱动表，把被驱动表每一行取出来跟 &lt;strong>join_buffer 中的所有数据&lt;/strong>一起做对比。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">inner&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">join&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">on&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/explain-join2.png" alt="explain-join2" loading="lazy" />&lt;/p>
&lt;p>&lt;code>Extra&lt;/code> 中 的 &lt;code>Using join buffer&lt;/code> (Block Nested Loop) 说明该关联查询使用的是 BNL 算法。&lt;/p>
&lt;p>SQL 的大致流程如下：&lt;/p>
&lt;ol>
&lt;li>把 &lt;code>t2&lt;/code> 的所有数据放入到 &lt;code>join_buffer&lt;/code> 中&lt;/li>
&lt;li>把表 &lt;code>t1&lt;/code> 中每一行取出来，跟 &lt;code>join_buffer&lt;/code> 中的所有数据做对比&lt;/li>
&lt;li>返回满足 join 条件的数据。&lt;/li>
&lt;/ol>
&lt;p>整个过程对表 &lt;code>t1&lt;/code> 和 &lt;code>t2&lt;/code> 都做了一次全表扫描，因此扫描的总行数为 &lt;code>10000 (表 t1 的数据总量) + 100 (表 t2 的数据总量) = 10100&lt;/code>。并且 &lt;code>join_buffer&lt;/code> 里的数据是无序的，因此对表 &lt;code>t1&lt;/code> 中的每一行，都要做 100 次判断，所以内存中的判断次数是 &lt;code>100 * 10000= 100 万次&lt;/code>。&lt;/p>
&lt;h4>被驱动表的关联字段没索引为什么要选择使用 BNL？&lt;span class="hx-absolute -hx-mt-20" id="被驱动表的关联字段没索引为什么要选择使用-bnl">&lt;/span>
&lt;a href="#%e8%a2%ab%e9%a9%b1%e5%8a%a8%e8%a1%a8%e7%9a%84%e5%85%b3%e8%81%94%e5%ad%97%e6%ae%b5%e6%b2%a1%e7%b4%a2%e5%bc%95%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e9%80%89%e6%8b%a9%e4%bd%bf%e7%94%a8-bnl" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>如果上面第二条 SQL 使用 Nested-Loop Join，由于没有 &lt;code>t1.b&lt;/code> 是没有索引的，意味这要进行&lt;strong>全表扫描&lt;/strong>，10000 行扫描 100 次就是 &lt;code>100 * 10000 = 100 万行&lt;/code>。很显然，用 BNL 磁盘扫描次数少很多，相比于磁盘扫描，BNL 的内存计算会快得多。&lt;/p>
&lt;h3>对于关联 SQL 的优化&lt;span class="hx-absolute -hx-mt-20" id="对于关联-sql-的优化">&lt;/span>
&lt;a href="#%e5%af%b9%e4%ba%8e%e5%85%b3%e8%81%94-sql-%e7%9a%84%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>关联字段加索引&lt;/strong>，让 MySQL 做 join 操作时尽量选择 NLJ 算法&lt;/li>
&lt;li>&lt;strong>小表驱动大表&lt;/strong>，写多表连接 SQL 时如果明确知道哪张表是小表可以用 &lt;code>straight_join&lt;/code> 写法固定连接驱动方式，省去 mysql 优化器自己判断的时间。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>straight_join&lt;/code> 功能同 join 类似，但能让左边的表来驱动右边的表，能改表优化器对于联表查询的执行顺序。比如：&lt;code>select * from t2 straight_join t1 on t2.a = t1.a&lt;/code>; 代表指定 MySQL 选择 &lt;code>t2&lt;/code> 表作为驱动表。&lt;strong>&lt;code>straight_join&lt;/code>只适用于 inner join&lt;/strong>，并不适用于 left join，right join。（因为 left join，right join 已经指定了表的执行顺序）。&lt;strong>尽可能让优化器去判断，因为大部分情况下 MySQL 优化器是比人要聪明的。使用 &lt;code>straight_join&lt;/code> 一定要慎重，因为部分情况下人为指定的执行顺序并不一定会比优化引擎要靠谱&lt;/strong>。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>对于小表定义的明确&lt;/strong>：&lt;/p>
&lt;p>在决定哪个表做驱动表的时候，应该是两个表按照各自的条件过滤，过滤完成之后，计算参与 join 的各个字段的总数据量，数据量小的那个表，就是“小表”，应该作为驱动表。&lt;/p>
&lt;p>&lt;strong>join buffer&lt;/strong>：&lt;/p>
&lt;p>当被驱动表中的数据非常多时，每次访问被驱动表，被驱动表的记录会被加载到内存中，在内存中的每一条记录只会和驱动表结果集的一条记录做匹配，之后就会被从内存中清除掉。然后再从驱动表结果集中拿出另一条记录，再一次把被驱动表的记录加载到内存中一遍，周而复始，&lt;strong>驱动表结果集中有多少条记录，就得把被驱动表从磁盘上加载到内存中多少次&lt;/strong>。所以可以在把被驱动表的记录加载到内存的时候，一次性和多条驱动表中的记录做匹配，这样就可以大大减少重复从磁盘上加载被驱动表的代价了。&lt;/p>
&lt;p>&lt;code>join buffer&lt;/code> 就是执行连接查询前申请的一块固定大小的内存，先把&lt;strong>若干条驱动表结果集中的记录装在这个 &lt;code>join buffer&lt;/code> 中&lt;/strong>，然后开始扫描被驱动表，&lt;strong>每一条被驱动表的记录一次性和 join buffer 中的多条驱动表记录做匹配&lt;/strong>，因为匹配的过程都是在内存中完成的，所以这样可以显著减少被驱动表的 I/O 代价。&lt;/p>
&lt;p>&lt;strong>&lt;code>join_buffer&lt;/code> 的大小是由参数 &lt;code>join_buffer_size&lt;/code> 设定的，默认值是 &lt;code>256k&lt;/code>&lt;/strong>。如果放不下表 &lt;code>t2&lt;/code> 的所有数据话，策略很简单，就是&lt;strong>分段放&lt;/strong>。&lt;/p>
&lt;p>比如 &lt;code>t2&lt;/code> 表有 1000 行记录， &lt;code>join_buffer&lt;/code> 一次只能放 800 行数据，那么执行过程就是先往 &lt;code>join_buffer&lt;/code> 里放 800 行记录，然后从 &lt;code>t1&lt;/code> 表里取数据跟 &lt;code>join_buffer&lt;/code> 中数据对比得到部分结果，然后清空 &lt;code>join_buffer&lt;/code>，再放入 &lt;code>t2&lt;/code> 表剩余 200 行记录，再次从 &lt;code>t1&lt;/code> 表里取数据跟 &lt;code>join_buffer&lt;/code> 中数据对比。所以就多扫了一次 &lt;code>t1&lt;/code> 表。&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">注意，驱动表的记录并不是所有列都会被放到 &lt;code>join_buffer&lt;/code> 中，只有查询列表中的列和过滤条件中的列才会被放到 &lt;code>join_buffer&lt;/code> 中，所以，&lt;strong>最好不要把 &lt;code>*&lt;/code> 作为查询列表&lt;/strong>，只需要把我们关心的列放到查询列表就好了，这样还可以在 &lt;code>join buffer&lt;/code> 中放置更多的记录。&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4>Hash Join 原理（仅支持等值连接）&lt;span class="hx-absolute -hx-mt-20" id="hash-join-原理仅支持等值连接">&lt;/span>
&lt;a href="#hash-join-%e5%8e%9f%e7%90%86%e4%bb%85%e6%94%af%e6%8c%81%e7%ad%89%e5%80%bc%e8%bf%9e%e6%8e%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>MySQL 中的 Hash Join 是一种高效的&lt;strong>等值连接算法&lt;/strong>，尤其适合&lt;strong>没有索引、表不太大或临时表&lt;/strong>操作的场景。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">JOIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ON&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Hash Join 分两个阶段进行：&lt;/p>
&lt;ol>
&lt;li>Build Phase（构建哈希表）&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>优化器选择较小的一张表（如 &lt;code>t2&lt;/code>）作为构建表（build input）。&lt;/li>
&lt;li>把这张表的连接列（如 &lt;code>t2.id&lt;/code>）作为 key，构建哈希表，存入内存。&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>Probe Phase（探测匹配项）&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>遍历另一张较大的表 &lt;code>t1&lt;/code>。&lt;/li>
&lt;li>以连接键 &lt;code>t1.id&lt;/code> 去刚刚构建的哈希表中查找匹配项。&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>-- 探测并输出结果：
for each row in t1:
if hash_table contains t1.id:
output (t1, hash_table[t1.id])&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>相对于传统的 Nested Loop Join（嵌套循环），Hash Join 将连接时间复杂度从 &lt;code>O(n*m)&lt;/code> 降低到接近 &lt;code>O(n + m)&lt;/code>，适合&lt;strong>无索引的中小表等值连接&lt;/strong>。&lt;/p>
&lt;p>限制：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>只支持等值连接&lt;/strong>，例如 &lt;code>ON a.id = b.id&lt;/code>，不能用范围条件如 &lt;code>&amp;gt;&lt;/code>、&lt;code>&amp;lt;&lt;/code>。&lt;/li>
&lt;li>大表内存不够会溢出，如果构建的哈希表过大，会使用磁盘上的临时表，性能降低&lt;/li>
&lt;/ul>
&lt;h3>不在索引列上做任何操作（计算、函数、（自动 or 手动）类型转换），会导致索引失效而转向全表扫描&lt;span class="hx-absolute -hx-mt-20" id="不在索引列上做任何操作计算函数自动-or-手动类型转换会导致索引失效而转向全表扫描">&lt;/span>
&lt;a href="#%e4%b8%8d%e5%9c%a8%e7%b4%a2%e5%bc%95%e5%88%97%e4%b8%8a%e5%81%9a%e4%bb%bb%e4%bd%95%e6%93%8d%e4%bd%9c%e8%ae%a1%e7%ae%97%e5%87%bd%e6%95%b0%e8%87%aa%e5%8a%a8-or-%e6%89%8b%e5%8a%a8%e7%b1%bb%e5%9e%8b%e8%bd%ac%e6%8d%a2%e4%bc%9a%e5%af%bc%e8%87%b4%e7%b4%a2%e5%bc%95%e5%a4%b1%e6%95%88%e8%80%8c%e8%bd%ac%e5%90%91%e5%85%a8%e8%a1%a8%e6%89%ab%e6%8f%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person_info&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">left&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;LiLei&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>索引列上做了函数操作，得到的结果在索引树上是无法匹配的，所以索引失效了。&lt;code>left(name,3)&lt;/code> 有点类似 &lt;code>LiL%&lt;/code> 的效果，但是 MySQL 并没有对这种情况做优化，所以索引失效了。&lt;/p>
&lt;h3>范围查询优化&lt;span class="hx-absolute -hx-mt-20" id="范围查询优化">&lt;/span>
&lt;a href="#%e8%8c%83%e5%9b%b4%e6%9f%a5%e8%af%a2%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="mi">20000&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>mysql 内部优化器会根据检索比例、表大小等多个因素整体评估是否使用索引。比如这个例子，可能是由于单次数据量查询过大导致优化器最终选择不走索引。&lt;/p>
&lt;p>优化方法：可以将大的范围拆分成多个小范围：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="mi">5000&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="mi">5001&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="mi">10000&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="mi">10001&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="mi">15000&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="mi">15001&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="mi">20000&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>让索引列在比较表达式中单独出现&lt;span class="hx-absolute -hx-mt-20" id="让索引列在比较表达式中单独出现">&lt;/span>
&lt;a href="#%e8%ae%a9%e7%b4%a2%e5%bc%95%e5%88%97%e5%9c%a8%e6%af%94%e8%be%83%e8%a1%a8%e8%be%be%e5%bc%8f%e4%b8%ad%e5%8d%95%e7%8b%ac%e5%87%ba%e7%8e%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>假设为整数列 &lt;code>my_col&lt;/code> 建立索引：&lt;/p>
&lt;p>&lt;code>WHERE my_col * 2 &amp;lt; 4&lt;/code> 是以 &lt;code>my_col * 2&lt;/code> 这样的表达式的形式出现的，存储引擎会依次&lt;strong>遍历所有的记录&lt;/strong>，计算这个表达式的值是不是小于 4。&lt;/p>
&lt;p>&lt;code>WHERE my_col &amp;lt; 4/2&lt;/code> &lt;code>my_col&lt;/code> 列是以单独列的形式出现的，这样的情况可以直接使用 B+ 树索引。&lt;/p>
&lt;p>&lt;strong>如果索引列在比较表达式中不是以单独列的形式出现，而是以某个表达式，或者函数调用形式出现的话，是用不到索引的&lt;/strong>。&lt;/p>
&lt;h3>in 和 exsits 优化&lt;span class="hx-absolute -hx-mt-20" id="in-和-exsits-优化">&lt;/span>
&lt;a href="#in-%e5%92%8c-exsits-%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>原则：&lt;strong>小表驱动大表&lt;/strong>。&lt;/p>
&lt;ul>
&lt;li>&lt;code>in&lt;/code>：当 B 表的数据集小于 A 表的数据集时，&lt;code>in&lt;/code> 优于 &lt;code>exists&lt;/code>。&lt;/li>
&lt;/ul>
&lt;p>例如：&lt;code>select * from A where id in (select id from B)&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code># 等价于：
for(select id from B){
select * from A where A.id = B.id
}&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>exists&lt;/code>：当 B 表的数据集大于 A 表的数据集时，&lt;code>exists&lt;/code> 优于 &lt;code>in&lt;/code>。&lt;/li>
&lt;/ul>
&lt;p>例如：&lt;code>select * from A where exists (select 1 from B where B.id = A.id)&lt;/code>。&lt;/p>
&lt;p>&lt;code>EXISTS&lt;/code> (subquery) 只返回 TRUE 或 FALSE，因此子查询中的 &lt;code>SELECT *&lt;/code> 也可以用 &lt;code>SELECT 1&lt;/code> 替换，官方说法是实际执行时会忽略 &lt;code>SELECT&lt;/code> 清单，因此没有区别。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>#等价于：
for(select * from A){
select * from B where B.id = A.id
}&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>count(*) 查询优化&lt;span class="hx-absolute -hx-mt-20" id="count-查询优化">&lt;/span>
&lt;a href="#count-%e6%9f%a5%e8%af%a2%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/explain-count.png" alt="explain-count" loading="lazy" />&lt;/p>
&lt;p>四个 SQL 的执行计划是一样的，也就说明这四个 SQL 执行效率应该差不多。&lt;/p>
&lt;p>&lt;code>count(*)&lt;/code> MySQL 是专门做了优化，并不会把全部字段取出来，不取值，按行累加，效率很高。&lt;/p>
&lt;p>&lt;code>count(1)&lt;/code> 跟 &lt;code>count(字段)&lt;/code> 执行过程类似，不过 &lt;code>count(1)&lt;/code> 是用常量 1 做统计，&lt;code>count(字段)&lt;/code> 还需要取出字段，所以理论上 &lt;code>count(1)&lt;/code> 比 &lt;code>count(字段)&lt;/code> 会快一点。&lt;/p>
&lt;ul>
&lt;li>&lt;code>count(*)&lt;/code>、&lt;code>count(1)&lt;/code> 或者任意的 &lt;code>count(常数)&lt;/code>：对于 &lt;code>count(*)&lt;/code>、&lt;code>count(1)&lt;/code> 或者任意的 &lt;code>count(常数)&lt;/code> 来说，读取哪个索引的记录其实并不重要，因为 Server 层只关心存储引擎是否读到了记录，而并&lt;strong>不需要从记录中提取指定的字段&lt;/strong>来判断是否为 &lt;code>NULL&lt;/code>。所以优化器会&lt;strong>使用占用存储空间最小的那个索引&lt;/strong>（主键索引包含完整的记录，占用的存储空间是最大的）来执行查询。&lt;/li>
&lt;li>&lt;code>count(主键 id)&lt;/code>：对于 &lt;code>count(主键 id)&lt;/code> 来说，由于 &lt;code>id&lt;/code> 是主键，&lt;strong>不论是聚簇索引记录，还是任意一个二级索引记录中都会包含主键字段&lt;/strong>，所以其实读取任意一个索引中的记录都可以获取到 &lt;code>id&lt;/code> 字段，此时&lt;strong>优化器也会选择占用存储空间最小的那个索引&lt;/strong>来执行查询。&lt;/li>
&lt;li>&lt;code>count(字段)&lt;/code>：如果字段有索引，指定的字段可能并不会包含在每一个索引中。优化器只能选择&lt;strong>包含指定字段的索引&lt;/strong>去执行查询，这就可能导致优化器选择的索引并不是最小的那个。如果字段没有索引，就无法使用索引优化查询了，只能选择全表扫描。&lt;/li>
&lt;/ul>
&lt;p>所以查询效率：&lt;code>count(*)≈count(1)&amp;gt;count(主键 id)&amp;gt;=count(字段)&lt;/code>，&lt;code>count(字段)&lt;/code> 和 &lt;code>count(主键 id)&lt;/code> 还需要取出字段判断是否为 &lt;code>NULL&lt;/code>（&lt;strong>虽然主键不会为 &lt;code>NULL&lt;/code>，但优化器仍会检查&lt;/strong>），所以效率会比 &lt;code>count(*)&lt;/code> 和 &lt;code>count(1)&lt;/code> 低。如果 &lt;code>count(字段)&lt;/code> 有索引，并且是占用存储空间最小的那个索引，那么效率会和 &lt;code>count(主键 id)&lt;/code> 差不多。&lt;/p>
&lt;h4>为什么对于 &lt;code>count(id)&lt;/code>，MySQL 最终选择辅助索引而不是主键聚集索引？&lt;span class="hx-absolute -hx-mt-20" id="为什么对于-countidmysql-最终选择辅助索引而不是主键聚集索引">&lt;/span>
&lt;a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e5%af%b9%e4%ba%8e-countidmysql-%e6%9c%80%e7%bb%88%e9%80%89%e6%8b%a9%e8%be%85%e5%8a%a9%e7%b4%a2%e5%bc%95%e8%80%8c%e4%b8%8d%e6%98%af%e4%b8%bb%e9%94%ae%e8%81%9a%e9%9b%86%e7%b4%a2%e5%bc%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>因为二级索引相对主键索引存储数据更少，检索性能应该更高。&lt;/p>
&lt;h4>不带 WHERE 条件的常见优化方法&lt;span class="hx-absolute -hx-mt-20" id="不带-where-条件的常见优化方法">&lt;/span>
&lt;a href="#%e4%b8%8d%e5%b8%a6-where-%e6%9d%a1%e4%bb%b6%e7%9a%84%e5%b8%b8%e8%a7%81%e4%bc%98%e5%8c%96%e6%96%b9%e6%b3%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>对于 MyISAM 存储引擎的表做不带 &lt;code>where&lt;/code> 条件的 &lt;code>count&lt;/code> 查询性能是很高的，因为 MyISAM 存储引擎的表的总行数会被 MySQL 存储在磁盘上，查询不需要计算。&lt;/li>
&lt;li>&lt;code>show table status&lt;/code> 可以看到表的行数，但是这个行数是不准确的。性能很高。例如 &lt;code>show table status like 'employees'&lt;/code>。&lt;/li>
&lt;li>将总数维护到 Redis 里，插入或删除表数据行的时候同时维护 Redis 里的表总行数 key 的计数值(用 &lt;code>incr&lt;/code> 或 &lt;code>decr&lt;/code> 命令)，但是这种方式可能不准，很难保证表操作和 Redis 操作的&lt;strong>事务一致性&lt;/strong>。&lt;/li>
&lt;li>增加数据库计数表，插入或删除表数据行的时候同时维护计数表，让他们在同一个事务里操作。&lt;/li>
&lt;/ol>
&lt;h3>索引选择异常和处理&lt;span class="hx-absolute -hx-mt-20" id="索引选择异常和处理">&lt;/span>
&lt;a href="#%e7%b4%a2%e5%bc%95%e9%80%89%e6%8b%a9%e5%bc%82%e5%b8%b8%e5%92%8c%e5%a4%84%e7%90%86" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>一种方法是，采用 &lt;code>force index&lt;/code> 强行选择一个索引。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">long_query_time&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">between&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10000&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">20000&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cm">/*Q1*/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">force&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">index&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">between&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10000&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">20000&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="cm">/*Q2*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>第二种方法就是，可以考虑修改语句，引导 MySQL 使用我们期望的索引。
第三种方法是，在有些场景下，可以新建一个更合适的索引，来提供给优化器做选择，或删掉误用的索引。&lt;/p></description></item><item><title>常用配置和 8.0 特性</title><link>https://shipengqi.github.io/db-learn/docs/mysql/practice/04_config_8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/db-learn/docs/mysql/practice/04_config_8/</guid><description>
&lt;h2>常用服务端配置&lt;span class="hx-absolute -hx-mt-20" id="常用服务端配置">&lt;/span>
&lt;a href="#%e5%b8%b8%e7%94%a8%e6%9c%8d%e5%8a%a1%e7%ab%af%e9%85%8d%e7%bd%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>假设服务器配置为：&lt;/p>
&lt;ul>
&lt;li>CPU：32 核&lt;/li>
&lt;li>内存：64 G&lt;/li>
&lt;li>DISK：2T SSD&lt;/li>
&lt;/ul>
&lt;p>常用的服务端参数在 &lt;code>[mysqld]&lt;/code> 标签下。&lt;/p>
&lt;h3>max_connections&lt;span class="hx-absolute -hx-mt-20" id="max_connections">&lt;/span>
&lt;a href="#max_connections" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="na">max_connections&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">3000&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>连接的创建和销毁都需要系统资源，比如内存、文件句柄，业务说的支持多少并发，指的是每秒请求数，也就是 QPS。&lt;/p>
&lt;p>一个连接最少占用内存是 &lt;code>256K&lt;/code>，最大是 &lt;code>64M&lt;/code>，如果一个连接的请求数据超过 &lt;code>64MB&lt;/code>（比如排序），就会申请临时空间，放到硬盘上。&lt;/p>
&lt;p>如果 3000 个用户同时连上 MySQL，最小需要内存 &lt;code>3000*256KB=750M&lt;/code>，最大需要内存&lt;code>3000*64MB=192G&lt;/code>。&lt;/p>
&lt;p>如果 &lt;code>innodb_buffer_pool_size&lt;/code> 是 &lt;code>40GB&lt;/code>，给操作系统分配 &lt;code>4G&lt;/code>，给连接使用的最大内存不到 &lt;code>20G&lt;/code>，如果连接过多，使用的内存超过 &lt;code>20G&lt;/code>，将会产生磁盘 SWAP，此时将会影响性能。连接数过高，不一定带来吞吐量的提高，而且可能占用更多的系统资源。&lt;/p>
&lt;h3>max_user_connections&lt;span class="hx-absolute -hx-mt-20" id="max_user_connections">&lt;/span>
&lt;a href="#max_user_connections" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="na">max_user_connections&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">2980&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>允许用户连接的最大数量，剩余连接数用作 DBA 管理&lt;/p>
&lt;h3>back_log&lt;span class="hx-absolute -hx-mt-20" id="back_log">&lt;/span>
&lt;a href="#back_log" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="na">back_log&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">300&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>MySQL 能够暂存的连接数量。如果 MySQL 的连接数达到 &lt;code>max_connections&lt;/code> 时，新的请求将会被存在堆栈中，等待某一连接释放资源，该堆栈数量即 &lt;code>back_log&lt;/code>，如果等待连接的数量超过 &lt;code>back_log&lt;/code>，将被拒绝。&lt;/p>
&lt;h3>wait_timeout&lt;span class="hx-absolute -hx-mt-20" id="wait_timeout">&lt;/span>
&lt;a href="#wait_timeout" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="na">wait_timeout&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">300&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>指的是 app 应用通过 jdbc 连接 MySQL 进行操作完毕后，空闲 300 秒后断开，默认是 28800，单位秒，即 8 个小时。&lt;/p>
&lt;h3>interactive_timeout&lt;span class="hx-absolute -hx-mt-20" id="interactive_timeout">&lt;/span>
&lt;a href="#interactive_timeout" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="na">interactive_timeout&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">300&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>指的是 MySQL Client 进行操作完毕后，在 300 秒内没有操作，断开连接，默认是 28800，单位秒，即 8 个小时。&lt;/p>
&lt;h3>innodb_thread_concurrency&lt;span class="hx-absolute -hx-mt-20" id="innodb_thread_concurrency">&lt;/span>
&lt;a href="#innodb_thread_concurrency" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="na">innodb_thread_concurrency&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">64&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>此参数用来设置 InnoDB 线程的并发数，&lt;strong>默认值为 0 表示不被限制&lt;/strong>，若要设置则与服务器的 CPU 核心数相同或是 CPU 的核心数的 2 倍，如果超过配置并发数，则需要排队，这个值不宜太大，不然可能会导致线程之间锁争用严重，影响性能。&lt;/p>
&lt;h3>innodb_buffer_pool_size&lt;span class="hx-absolute -hx-mt-20" id="innodb_buffer_pool_size">&lt;/span>
&lt;a href="#innodb_buffer_pool_size" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="na">innodb_buffer_pool_size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">40GB&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>InnoDB Buffer Pool 缓存大小，一般为物理内存的 &lt;code>60%-70%&lt;/code>，需要留一部分内存给服务器上其他可能会运行的进程。&lt;/p>
&lt;h3>innodb_lock_wait_timeout&lt;span class="hx-absolute -hx-mt-20" id="innodb_lock_wait_timeout">&lt;/span>
&lt;a href="#innodb_lock_wait_timeout" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="na">innodb_lock_wait_timeout&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">10&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>InnoDB 锁等待超时时间，默认是 50s。一般来说 50s 太长了，根据公司业务定，没有标准值。&lt;/p>
&lt;h3>sync_binlog 和 innodb_flush_log_at_trx_commit&lt;span class="hx-absolute -hx-mt-20" id="sync_binlog-和-innodb_flush_log_at_trx_commit">&lt;/span>
&lt;a href="#sync_binlog-%e5%92%8c-innodb_flush_log_at_trx_commit" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>参考 &lt;a href="../../advance/07_log/" >MySQL 日志机制&lt;/a>。一般对数据比较敏感的业务，比如金融、电商等，这两个值都会设置为 &lt;code>1&lt;/code>。&lt;/p>
&lt;h3>sort_buffer_size&lt;span class="hx-absolute -hx-mt-20" id="sort_buffer_size">&lt;/span>
&lt;a href="#sort_buffer_size" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="na">sort_buffer_size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">4M&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>每个需要排序的线程分配该大小的一个缓冲区。增加该值可以加速 &lt;code>ORDER BY&lt;/code> 或 &lt;code>GROUP BY&lt;/code> 操作。&lt;/p>
&lt;p>&lt;code>sort_buffer_size&lt;/code> 是一个 connection 级的参数，在每个 connection（session）第一次需要使用这个 buffer 的时候，一次性分配设置的内存。&lt;/p>
&lt;p>&lt;code>sort_buffer_size&lt;/code> 并不是越大越好，由于是connection级的参数，过大的设置+高并发可能会耗尽系统的内存资源。例如：500 个连接将会消耗 &lt;code>500*sort_buffer_size(4M)=2G&lt;/code>。&lt;/p>
&lt;h3>join_buffer_size&lt;span class="hx-absolute -hx-mt-20" id="join_buffer_size">&lt;/span>
&lt;a href="#join_buffer_size" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="na">join_buffer_size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">4M&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>于表关联缓存的大小，和 &lt;code>sort_buffer_size&lt;/code> 一样，该参数对应的分配内存也是每个连接独享。&lt;/p>
&lt;h2>8.0 新特性&lt;span class="hx-absolute -hx-mt-20" id="80-新特性">&lt;/span>
&lt;a href="#80-%e6%96%b0%e7%89%b9%e6%80%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>支持降序索引&lt;span class="hx-absolute -hx-mt-20" id="支持降序索引">&lt;/span>
&lt;a href="#%e6%94%af%e6%8c%81%e9%99%8d%e5%ba%8f%e7%b4%a2%e5%bc%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ====MySQL 5.7演示====&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; create table t1&lt;span class="o">(&lt;/span>c1 int,c2 int,index idx_c1_c2&lt;span class="o">(&lt;/span>c1,c2 desc&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.04 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; insert into t1 &lt;span class="o">(&lt;/span>c1,c2&lt;span class="o">)&lt;/span> values&lt;span class="o">(&lt;/span>1, 10&lt;span class="o">)&lt;/span>,&lt;span class="o">(&lt;/span>2,50&lt;span class="o">)&lt;/span>,&lt;span class="o">(&lt;/span>3,50&lt;span class="o">)&lt;/span>,&lt;span class="o">(&lt;/span>4,100&lt;span class="o">)&lt;/span>,&lt;span class="o">(&lt;/span>5,80&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">5&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.02 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; show create table t1&lt;span class="se">\G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************** 1. row ***************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Table: t1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Create Table: CREATE TABLE &lt;span class="sb">`&lt;/span>t1&lt;span class="sb">`&lt;/span> &lt;span class="o">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`&lt;/span>c1&lt;span class="sb">`&lt;/span> int&lt;span class="o">(&lt;/span>11&lt;span class="o">)&lt;/span> DEFAULT NULL,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`&lt;/span>c2&lt;span class="sb">`&lt;/span> int&lt;span class="o">(&lt;/span>11&lt;span class="o">)&lt;/span> DEFAULT NULL,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> KEY &lt;span class="sb">`&lt;/span>idx_c1_c2&lt;span class="sb">`&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="sb">`&lt;/span>c1&lt;span class="sb">`&lt;/span>,&lt;span class="sb">`&lt;/span>c2&lt;span class="sb">`&lt;/span>&lt;span class="o">)&lt;/span> --注意这里，c2字段是升序
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">)&lt;/span> &lt;span class="nv">ENGINE&lt;/span>&lt;span class="o">=&lt;/span>InnoDB DEFAULT &lt;span class="nv">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>latin1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; explain &lt;span class="k">select&lt;/span> * from t1 order by c1,c2 desc&lt;span class="p">;&lt;/span> --5.7也会使用索引，但是Extra字段里有filesort文件排序
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+-----------+---------+------+------+----------+-----------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> id &lt;span class="p">|&lt;/span> select_type &lt;span class="p">|&lt;/span> table &lt;span class="p">|&lt;/span> partitions &lt;span class="p">|&lt;/span> &lt;span class="nb">type&lt;/span> &lt;span class="p">|&lt;/span> possible_keys &lt;span class="p">|&lt;/span> key &lt;span class="p">|&lt;/span> key_len &lt;span class="p">|&lt;/span> ref &lt;span class="p">|&lt;/span> rows &lt;span class="p">|&lt;/span> filtered &lt;span class="p">|&lt;/span> Extra &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+-----------+---------+------+------+----------+-----------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> SIMPLE &lt;span class="p">|&lt;/span> t1 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> index &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> idx_c1_c2 &lt;span class="p">|&lt;/span> &lt;span class="m">10&lt;/span> &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> 100.00 &lt;span class="p">|&lt;/span> Using index&lt;span class="p">;&lt;/span> Using filesort &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+-----------+---------+------+------+----------+-----------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in set, &lt;span class="m">1&lt;/span> warning &lt;span class="o">(&lt;/span>0.01 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ====MySQL 8.0演示====&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; create table t1&lt;span class="o">(&lt;/span>c1 int,c2 int,index idx_c1_c2&lt;span class="o">(&lt;/span>c1,c2 desc&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.02 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; insert into t1 &lt;span class="o">(&lt;/span>c1,c2&lt;span class="o">)&lt;/span> values&lt;span class="o">(&lt;/span>1, 10&lt;span class="o">)&lt;/span>,&lt;span class="o">(&lt;/span>2,50&lt;span class="o">)&lt;/span>,&lt;span class="o">(&lt;/span>3,50&lt;span class="o">)&lt;/span>,&lt;span class="o">(&lt;/span>4,100&lt;span class="o">)&lt;/span>,&lt;span class="o">(&lt;/span>5,80&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">5&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.02 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; show create table t1&lt;span class="se">\G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************** 1. row ***************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Table: t1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Create Table: CREATE TABLE &lt;span class="sb">`&lt;/span>t1&lt;span class="sb">`&lt;/span> &lt;span class="o">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`&lt;/span>c1&lt;span class="sb">`&lt;/span> int DEFAULT NULL,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`&lt;/span>c2&lt;span class="sb">`&lt;/span> int DEFAULT NULL,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> KEY &lt;span class="sb">`&lt;/span>idx_c1_c2&lt;span class="sb">`&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="sb">`&lt;/span>c1&lt;span class="sb">`&lt;/span>,&lt;span class="sb">`&lt;/span>c2&lt;span class="sb">`&lt;/span> DESC&lt;span class="o">)&lt;/span> --注意这里的区别，降序索引生效了
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">)&lt;/span> &lt;span class="nv">ENGINE&lt;/span>&lt;span class="o">=&lt;/span>InnoDB DEFAULT &lt;span class="nv">CHARSET&lt;/span>&lt;span class="o">=&lt;/span>utf8mb4 &lt;span class="nv">COLLATE&lt;/span>&lt;span class="o">=&lt;/span>utf8mb4_0900_ai_ci
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; explain &lt;span class="k">select&lt;/span> * from t1 order by c1,c2 desc&lt;span class="p">;&lt;/span> --Extra字段里没有filesort文件排序，充分利用了降序索引
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+-----------+---------+------+------+----------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> id &lt;span class="p">|&lt;/span> select_type &lt;span class="p">|&lt;/span> table &lt;span class="p">|&lt;/span> partitions &lt;span class="p">|&lt;/span> &lt;span class="nb">type&lt;/span> &lt;span class="p">|&lt;/span> possible_keys &lt;span class="p">|&lt;/span> key &lt;span class="p">|&lt;/span> key_len &lt;span class="p">|&lt;/span> ref &lt;span class="p">|&lt;/span> rows &lt;span class="p">|&lt;/span> filtered &lt;span class="p">|&lt;/span> Extra &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+-----------+---------+------+------+----------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> SIMPLE &lt;span class="p">|&lt;/span> t1 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> index &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> idx_c1_c2 &lt;span class="p">|&lt;/span> &lt;span class="m">10&lt;/span> &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> 100.00 &lt;span class="p">|&lt;/span> Using index &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+-----------+---------+------+------+----------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in set, &lt;span class="m">1&lt;/span> warning &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; explain &lt;span class="k">select&lt;/span> * from t1 order by c1 desc,c2&lt;span class="p">;&lt;/span> --Extra字段里有Backward index scan，意思是反向扫描索引&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+-----------+---------+------+------+----------+----------------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> id &lt;span class="p">|&lt;/span> select_type &lt;span class="p">|&lt;/span> table &lt;span class="p">|&lt;/span> partitions &lt;span class="p">|&lt;/span> &lt;span class="nb">type&lt;/span> &lt;span class="p">|&lt;/span> possible_keys &lt;span class="p">|&lt;/span> key &lt;span class="p">|&lt;/span> key_len &lt;span class="p">|&lt;/span> ref &lt;span class="p">|&lt;/span> rows &lt;span class="p">|&lt;/span> filtered &lt;span class="p">|&lt;/span> Extra &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+-----------+---------+------+------+----------+----------------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> SIMPLE &lt;span class="p">|&lt;/span> t1 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> index &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> idx_c1_c2 &lt;span class="p">|&lt;/span> &lt;span class="m">10&lt;/span> &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> 100.00 &lt;span class="p">|&lt;/span> Backward index scan&lt;span class="p">;&lt;/span> Using index &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+-----------+---------+------+------+----------+----------------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in set, &lt;span class="m">1&lt;/span> warning &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; explain &lt;span class="k">select&lt;/span> * from t1 order by c1 desc,c2 desc&lt;span class="p">;&lt;/span> --Extra字段里有filesort文件排序，排序必须按照每个字段定义的排序或按相反顺序才能充分利用索引
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+-----------+---------+------+------+----------+-----------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> id &lt;span class="p">|&lt;/span> select_type &lt;span class="p">|&lt;/span> table &lt;span class="p">|&lt;/span> partitions &lt;span class="p">|&lt;/span> &lt;span class="nb">type&lt;/span> &lt;span class="p">|&lt;/span> possible_keys &lt;span class="p">|&lt;/span> key &lt;span class="p">|&lt;/span> key_len &lt;span class="p">|&lt;/span> ref &lt;span class="p">|&lt;/span> rows &lt;span class="p">|&lt;/span> filtered &lt;span class="p">|&lt;/span> Extra &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+-----------+---------+------+------+----------+-----------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> SIMPLE &lt;span class="p">|&lt;/span> t1 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> index &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> idx_c1_c2 &lt;span class="p">|&lt;/span> &lt;span class="m">10&lt;/span> &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> 100.00 &lt;span class="p">|&lt;/span> Using index&lt;span class="p">;&lt;/span> Using filesort &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+-----------+---------+------+------+----------+-----------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in set, &lt;span class="m">1&lt;/span> warning &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; explain &lt;span class="k">select&lt;/span> * from t1 order by c1,c2&lt;span class="p">;&lt;/span> --Extra字段里有filesort文件排序，排序必须按照每个字段定义的排序或按相反顺序才能充分利用索引
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+-----------+---------+------+------+----------+-----------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> id &lt;span class="p">|&lt;/span> select_type &lt;span class="p">|&lt;/span> table &lt;span class="p">|&lt;/span> partitions &lt;span class="p">|&lt;/span> &lt;span class="nb">type&lt;/span> &lt;span class="p">|&lt;/span> possible_keys &lt;span class="p">|&lt;/span> key &lt;span class="p">|&lt;/span> key_len &lt;span class="p">|&lt;/span> ref &lt;span class="p">|&lt;/span> rows &lt;span class="p">|&lt;/span> filtered &lt;span class="p">|&lt;/span> Extra &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+-----------+---------+------+------+----------+-----------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> SIMPLE &lt;span class="p">|&lt;/span> t1 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> index &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> idx_c1_c2 &lt;span class="p">|&lt;/span> &lt;span class="m">10&lt;/span> &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> 100.00 &lt;span class="p">|&lt;/span> Using index&lt;span class="p">;&lt;/span> Using filesort &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+-------+---------------+-----------+---------+------+------+----------+-----------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in set, &lt;span class="m">1&lt;/span> warning &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>group by 不再隐式排序&lt;span class="hx-absolute -hx-mt-20" id="group-by-不再隐式排序">&lt;/span>
&lt;a href="#group-by-%e4%b8%8d%e5%86%8d%e9%9a%90%e5%bc%8f%e6%8e%92%e5%ba%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>对于 &lt;code>group by&lt;/code> 字段不再隐式排序，如需要排序，必须显式加上 &lt;code>order by&lt;/code> 子句。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ====MySQL 5.7演示====&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="k">select&lt;/span> count&lt;span class="o">(&lt;/span>*&lt;span class="o">)&lt;/span>,c2 from t1 group by c2&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> count&lt;span class="o">(&lt;/span>*&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span> c2 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">10&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">50&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">80&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">4&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ====MySQL 8.0演示====&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="k">select&lt;/span> count&lt;span class="o">(&lt;/span>*&lt;span class="o">)&lt;/span>,c2 from t1 group by c2&lt;span class="p">;&lt;/span> --8.0 版本 group by 不再默认排序
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> count&lt;span class="o">(&lt;/span>*&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span> c2 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">10&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">50&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">80&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">4&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="k">select&lt;/span> count&lt;span class="o">(&lt;/span>*&lt;span class="o">)&lt;/span>,c2 from t1 group by c2 order by c2&lt;span class="p">;&lt;/span> --8.0 版本 group by 不再默认排序，需要自己加 order by
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> count&lt;span class="o">(&lt;/span>*&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span> c2 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">10&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">50&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">80&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">4&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>支持隐藏索引&lt;span class="hx-absolute -hx-mt-20" id="支持隐藏索引">&lt;/span>
&lt;a href="#%e6%94%af%e6%8c%81%e9%9a%90%e8%97%8f%e7%b4%a2%e5%bc%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>使用 &lt;code>invisible&lt;/code> 关键字在创建表或者进行表变更中设置索引为隐藏索引。&lt;strong>索引隐藏只是不可见，但是数据库后台还是会维护隐藏索引的，在查询时优化器不使用该索引&lt;/strong>，即使使用 &lt;code>force index&lt;/code>，优化器也不会使用该索引，同时优化器也不会报索引不存在的错误，因为索引仍然真实存在，必要时，也可以把隐藏索引快速恢复成可见。注意，&lt;strong>主键不能设置为 &lt;code>invisible&lt;/code>&lt;/strong>。&lt;/p>
&lt;p>比如我们觉得某个索引没用了，删除后发现这个索引在某些时候还是有用的，于是又得把这个索引加回来，如果表数据量很大的话，这种操作耗费时间是很多的，成本很高，这时，可以将索引先设置为隐藏索引，等到真的确认索引没用了再删除。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建 t2 表，里面的 c2 字段为隐藏索引&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; create table t2&lt;span class="o">(&lt;/span>c1 int, c2 int, index idx_c1&lt;span class="o">(&lt;/span>c1&lt;span class="o">)&lt;/span>, index idx_c2&lt;span class="o">(&lt;/span>c2&lt;span class="o">)&lt;/span> invisible&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.02 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; show index from t2&lt;span class="se">\G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************** 1. row ***************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Table: t2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Non_unique: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Key_name: idx_c1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Seq_in_index: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Column_name: c1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Collation: A
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Cardinality: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Sub_part: NULL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Packed: NULL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Null: YES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Index_type: BTREE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Comment:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Index_comment:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Visible: YES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Expression: NULL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************** 2. row ***************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Table: t2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Non_unique: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Key_name: idx_c2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Seq_in_index: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Column_name: c2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Collation: A
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Cardinality: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Sub_part: NULL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Packed: NULL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Null: YES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Index_type: BTREE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Comment:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Index_comment:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Visible: NO --隐藏索引不可见
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Expression: NULL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">2&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; explain &lt;span class="k">select&lt;/span> * from t2 where &lt;span class="nv">c1&lt;/span>&lt;span class="o">=&lt;/span>1&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+------+---------------+--------+---------+-------+------+----------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> id &lt;span class="p">|&lt;/span> select_type &lt;span class="p">|&lt;/span> table &lt;span class="p">|&lt;/span> partitions &lt;span class="p">|&lt;/span> &lt;span class="nb">type&lt;/span> &lt;span class="p">|&lt;/span> possible_keys &lt;span class="p">|&lt;/span> key &lt;span class="p">|&lt;/span> key_len &lt;span class="p">|&lt;/span> ref &lt;span class="p">|&lt;/span> rows &lt;span class="p">|&lt;/span> filtered &lt;span class="p">|&lt;/span> Extra &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+------+---------------+--------+---------+-------+------+----------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> SIMPLE &lt;span class="p">|&lt;/span> t2 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> ref &lt;span class="p">|&lt;/span> idx_c1 &lt;span class="p">|&lt;/span> idx_c1 &lt;span class="p">|&lt;/span> &lt;span class="m">5&lt;/span> &lt;span class="p">|&lt;/span> const &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> 100.00 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+------+---------------+--------+---------+-------+------+----------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in set, &lt;span class="m">1&lt;/span> warning &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; explain &lt;span class="k">select&lt;/span> * from t2 where &lt;span class="nv">c2&lt;/span>&lt;span class="o">=&lt;/span>1&lt;span class="p">;&lt;/span> --隐藏索引c2不会被使用
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> id &lt;span class="p">|&lt;/span> select_type &lt;span class="p">|&lt;/span> table &lt;span class="p">|&lt;/span> partitions &lt;span class="p">|&lt;/span> &lt;span class="nb">type&lt;/span> &lt;span class="p">|&lt;/span> possible_keys &lt;span class="p">|&lt;/span> key &lt;span class="p">|&lt;/span> key_len &lt;span class="p">|&lt;/span> ref &lt;span class="p">|&lt;/span> rows &lt;span class="p">|&lt;/span> filtered &lt;span class="p">|&lt;/span> Extra &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> SIMPLE &lt;span class="p">|&lt;/span> t2 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> ALL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> 100.00 &lt;span class="p">|&lt;/span> Using where &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in set, &lt;span class="m">1&lt;/span> warning &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="k">select&lt;/span> @@optimizer_switch&lt;span class="se">\G&lt;/span> --查看各种参数
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************** 1. row ***************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@@optimizer_switch: &lt;span class="nv">index_merge&lt;/span>&lt;span class="o">=&lt;/span>on,index_merge_union&lt;span class="o">=&lt;/span>on,index_merge_sort_union&lt;span class="o">=&lt;/span>on,index_merge_intersection&lt;span class="o">=&lt;/span>on,engine_condition_pushdown&lt;span class="o">=&lt;/span>on,index_condition_pushdown&lt;span class="o">=&lt;/span>on,mrr&lt;span class="o">=&lt;/span>on,mrr_cost_based&lt;span class="o">=&lt;/span>on,block_nested_loop&lt;span class="o">=&lt;/span>on,batched_key_access&lt;span class="o">=&lt;/span>off,materialization&lt;span class="o">=&lt;/span>on,semijoin&lt;span class="o">=&lt;/span>on,loosescan&lt;span class="o">=&lt;/span>on,firstmatch&lt;span class="o">=&lt;/span>on,duplicateweedout&lt;span class="o">=&lt;/span>on,subquery_materialization_cost_based&lt;span class="o">=&lt;/span>on,use_index_extensions&lt;span class="o">=&lt;/span>on,condition_fanout_filter&lt;span class="o">=&lt;/span>on,derived_merge&lt;span class="o">=&lt;/span>on,use_invisible_indexes&lt;span class="o">=&lt;/span>off,skip_scan&lt;span class="o">=&lt;/span>on,hash_join&lt;span class="o">=&lt;/span>on
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="nb">set&lt;/span> session &lt;span class="nv">optimizer_switch&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;use_invisible_indexes=on&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> ----在会话级别设置查询优化器可以看到隐藏索引
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="k">select&lt;/span> @@optimizer_switch&lt;span class="se">\G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************** 1. row ***************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@@optimizer_switch: &lt;span class="nv">index_merge&lt;/span>&lt;span class="o">=&lt;/span>on,index_merge_union&lt;span class="o">=&lt;/span>on,index_merge_sort_union&lt;span class="o">=&lt;/span>on,index_merge_intersection&lt;span class="o">=&lt;/span>on,engine_condition_pushdown&lt;span class="o">=&lt;/span>on,index_condition_pushdown&lt;span class="o">=&lt;/span>on,mrr&lt;span class="o">=&lt;/span>on,mrr_cost_based&lt;span class="o">=&lt;/span>on,block_nested_loop&lt;span class="o">=&lt;/span>on,batched_key_access&lt;span class="o">=&lt;/span>off,materialization&lt;span class="o">=&lt;/span>on,semijoin&lt;span class="o">=&lt;/span>on,loosescan&lt;span class="o">=&lt;/span>on,firstmatch&lt;span class="o">=&lt;/span>on,duplicateweedout&lt;span class="o">=&lt;/span>on,subquery_materialization_cost_based&lt;span class="o">=&lt;/span>on,use_index_extensions&lt;span class="o">=&lt;/span>on,condition_fanout_filter&lt;span class="o">=&lt;/span>on,derived_merge&lt;span class="o">=&lt;/span>on,use_invisible_indexes&lt;span class="o">=&lt;/span>on,skip_scan&lt;span class="o">=&lt;/span>on,hash_join&lt;span class="o">=&lt;/span>on
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; explain &lt;span class="k">select&lt;/span> * from t2 where &lt;span class="nv">c2&lt;/span>&lt;span class="o">=&lt;/span>1&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+------+---------------+--------+---------+-------+------+----------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> id &lt;span class="p">|&lt;/span> select_type &lt;span class="p">|&lt;/span> table &lt;span class="p">|&lt;/span> partitions &lt;span class="p">|&lt;/span> &lt;span class="nb">type&lt;/span> &lt;span class="p">|&lt;/span> possible_keys &lt;span class="p">|&lt;/span> key &lt;span class="p">|&lt;/span> key_len &lt;span class="p">|&lt;/span> ref &lt;span class="p">|&lt;/span> rows &lt;span class="p">|&lt;/span> filtered &lt;span class="p">|&lt;/span> Extra &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+------+---------------+--------+---------+-------+------+----------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> SIMPLE &lt;span class="p">|&lt;/span> t2 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> ref &lt;span class="p">|&lt;/span> idx_c2 &lt;span class="p">|&lt;/span> idx_c2 &lt;span class="p">|&lt;/span> &lt;span class="m">5&lt;/span> &lt;span class="p">|&lt;/span> const &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> 100.00 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+------+---------------+--------+---------+-------+------+----------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in set, &lt;span class="m">1&lt;/span> warning &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; alter table t2 alter index idx_c2 visible&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.02 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Records: &lt;span class="m">0&lt;/span> Duplicates: &lt;span class="m">0&lt;/span> Warnings: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; alter table t2 alter index idx_c2 invisible&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.01 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Records: &lt;span class="m">0&lt;/span> Duplicates: &lt;span class="m">0&lt;/span> Warnings: &lt;span class="m">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>支持函数索引&lt;span class="hx-absolute -hx-mt-20" id="支持函数索引">&lt;/span>
&lt;a href="#%e6%94%af%e6%8c%81%e5%87%bd%e6%95%b0%e7%b4%a2%e5%bc%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>我们知道，如果在查询中加入了函数，索引不生效，所以 MySQL 8 引入了函数索引，MySQL 8.0.13 开始支持在索引中使用函数(表达式)的值。&lt;/p>
&lt;p>&lt;strong>函数索引基于虚拟列功能实现，在 MySQL 中相当于新增了一个列，这个列会根据你的函数来进行计算结果，然后使用函数索引的时候就会用这个计算后的列作为索引&lt;/strong>。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; create table t3&lt;span class="o">(&lt;/span>c1 varchar&lt;span class="o">(&lt;/span>10&lt;span class="o">)&lt;/span>,c2 varchar&lt;span class="o">(&lt;/span>10&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.02 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; create index idx_c1 on t3&lt;span class="o">(&lt;/span>c1&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span> --创建普通索引
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.03 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Records: &lt;span class="m">0&lt;/span> Duplicates: &lt;span class="m">0&lt;/span> Warnings: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; create index func_idx on t3&lt;span class="o">((&lt;/span>UPPER&lt;span class="o">(&lt;/span>c2&lt;span class="o">)))&lt;/span>&lt;span class="p">;&lt;/span> --创建一个大写的函数索引
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.03 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Records: &lt;span class="m">0&lt;/span> Duplicates: &lt;span class="m">0&lt;/span> Warnings: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; show index from t3&lt;span class="se">\G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************** 1. row ***************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Table: t3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Non_unique: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Key_name: idx_c1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Seq_in_index: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Column_name: c1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Collation: A
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Cardinality: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Sub_part: NULL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Packed: NULL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Null: YES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Index_type: BTREE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Comment:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Index_comment:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Visible: YES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Expression: NULL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************** 2. row ***************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Table: t3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Non_unique: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Key_name: func_idx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Seq_in_index: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Column_name: NULL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Collation: A
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Cardinality: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Sub_part: NULL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Packed: NULL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Null: YES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Index_type: BTREE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Comment:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Index_comment:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Visible: YES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Expression: upper&lt;span class="o">(&lt;/span>&lt;span class="sb">`&lt;/span>c2&lt;span class="sb">`&lt;/span>&lt;span class="o">)&lt;/span> --函数表达式
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">2&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; explain &lt;span class="k">select&lt;/span> * from t3 where upper&lt;span class="o">(&lt;/span>c1&lt;span class="o">)=&lt;/span>&lt;span class="s1">&amp;#39;ZHUGE&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> id &lt;span class="p">|&lt;/span> select_type &lt;span class="p">|&lt;/span> table &lt;span class="p">|&lt;/span> partitions &lt;span class="p">|&lt;/span> &lt;span class="nb">type&lt;/span> &lt;span class="p">|&lt;/span> possible_keys &lt;span class="p">|&lt;/span> key &lt;span class="p">|&lt;/span> key_len &lt;span class="p">|&lt;/span> ref &lt;span class="p">|&lt;/span> rows &lt;span class="p">|&lt;/span> filtered &lt;span class="p">|&lt;/span> Extra &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> SIMPLE &lt;span class="p">|&lt;/span> t3 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> ALL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> 100.00 &lt;span class="p">|&lt;/span> Using where &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in set, &lt;span class="m">1&lt;/span> warning &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; explain &lt;span class="k">select&lt;/span> * from t3 where upper&lt;span class="o">(&lt;/span>c2&lt;span class="o">)=&lt;/span>&lt;span class="s1">&amp;#39;ZHUGE&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> --使用了函数索引
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+------+---------------+----------+---------+-------+------+----------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> id &lt;span class="p">|&lt;/span> select_type &lt;span class="p">|&lt;/span> table &lt;span class="p">|&lt;/span> partitions &lt;span class="p">|&lt;/span> &lt;span class="nb">type&lt;/span> &lt;span class="p">|&lt;/span> possible_keys &lt;span class="p">|&lt;/span> key &lt;span class="p">|&lt;/span> key_len &lt;span class="p">|&lt;/span> ref &lt;span class="p">|&lt;/span> rows &lt;span class="p">|&lt;/span> filtered &lt;span class="p">|&lt;/span> Extra &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+------+---------------+----------+---------+-------+------+----------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> SIMPLE &lt;span class="p">|&lt;/span> t3 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span> ref &lt;span class="p">|&lt;/span> func_idx &lt;span class="p">|&lt;/span> func_idx &lt;span class="p">|&lt;/span> &lt;span class="m">43&lt;/span> &lt;span class="p">|&lt;/span> const &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> 100.00 &lt;span class="p">|&lt;/span> NULL &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-------------+-------+------------+------+---------------+----------+---------+-------+------+----------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in set, &lt;span class="m">1&lt;/span> warning &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>跳过锁等待&lt;span class="hx-absolute -hx-mt-20" id="跳过锁等待">&lt;/span>
&lt;a href="#%e8%b7%b3%e8%bf%87%e9%94%81%e7%ad%89%e5%be%85" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>对于 &lt;code>select ... for share&lt;/code> (8.0 新增加查询共享锁的语法) 或 &lt;code>select ... for update&lt;/code>， 在语句后面添加 &lt;code>NOWAIT&lt;/code>、&lt;code>SKIP LOCKED&lt;/code> 语法可以跳过锁等待，或者跳过锁定。&lt;/p>
&lt;p>在 5.7 及之前的版本，&lt;code>select...for update&lt;/code>，如果获取不到锁，会一直等待，直到 &lt;code>innodb_lock_wait_timeout&lt;/code> 超时。&lt;/p>
&lt;p>在 8.0 版本，通过添加 &lt;code>nowait&lt;/code>，&lt;code>skip locked&lt;/code> 语法，能够立即返回。如果查询的行已经加锁，那么 &lt;code>nowait&lt;/code> 会立即报错返回，而 &lt;code>skip locked&lt;/code> 也会立即返回，只是返回的结果中不包含被锁定的行。应用场景比如查询余票记录，如果某些记录已经被锁定，用 &lt;code>skip locked&lt;/code> 可以跳过被锁定的记录，只返回没有锁定的记录，提高系统性能。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 先打开一个session1:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="k">select&lt;/span> * from t1&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> c1 &lt;span class="p">|&lt;/span> c2 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">10&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">50&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">50&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">4&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">5&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">80&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">5&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; begin&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; update t1 &lt;span class="nb">set&lt;/span> &lt;span class="nv">c2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">60&lt;/span> where &lt;span class="nv">c1&lt;/span> &lt;span class="o">=&lt;/span> 2&lt;span class="p">;&lt;/span> --锁定第二条记录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">1&lt;/span> row affected &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Rows matched: &lt;span class="m">1&lt;/span> Changed: &lt;span class="m">1&lt;/span> Warnings: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 另外一个 session2: &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="k">select&lt;/span> * from t1 where &lt;span class="nv">c1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="k">for&lt;/span> update&lt;span class="p">;&lt;/span> --等待超时
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ERROR &lt;span class="m">1205&lt;/span> &lt;span class="o">(&lt;/span>HY000&lt;span class="o">)&lt;/span>: Lock &lt;span class="nb">wait&lt;/span> timeout exceeded&lt;span class="p">;&lt;/span> try restarting transaction
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="k">select&lt;/span> * from t1 where &lt;span class="nv">c1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="k">for&lt;/span> update nowait&lt;span class="p">;&lt;/span> --查询立即返回
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ERROR &lt;span class="m">3572&lt;/span> &lt;span class="o">(&lt;/span>HY000&lt;span class="o">)&lt;/span>: Statement aborted because lock&lt;span class="o">(&lt;/span>s&lt;span class="o">)&lt;/span> could not be acquired immediately and NOWAIT is set.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="k">select&lt;/span> * from t1 &lt;span class="k">for&lt;/span> update skip locked&lt;span class="p">;&lt;/span> --查询立即返回，过滤掉了第二行记录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> c1 &lt;span class="p">|&lt;/span> c2 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">10&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">50&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">4&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">5&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">80&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------+------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">4&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>innodb_dedicated_server 自适应参数&lt;span class="hx-absolute -hx-mt-20" id="innodb_dedicated_server-自适应参数">&lt;/span>
&lt;a href="#innodb_dedicated_server-%e8%87%aa%e9%80%82%e5%ba%94%e5%8f%82%e6%95%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>能够让 InnoDB 根据服务器上检测到的内存大小自动配置 &lt;code>innodb_buffer_pool_size&lt;/code>，&lt;code>innodb_log_file_size&lt;/code> 等参数，会尽可能多的占用系统可占用资源提升性能。&lt;strong>前提是服务器是专用来给 MySQL 数据库的&lt;/strong>，如果还有其他软件或者资源或者多实例 MySQL 使用，不建议开启该参数，不然会影响其它程序。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; show variables like &lt;span class="s1">&amp;#39;%innodb_dedicated_server%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> --默认是 OFF 关闭，修改为 ON 打开
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-------------------------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> Variable_name &lt;span class="p">|&lt;/span> Value &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-------------------------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> innodb_dedicated_server &lt;span class="p">|&lt;/span> OFF &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-------------------------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.02 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>窗口函数&lt;span class="hx-absolute -hx-mt-20" id="窗口函数">&lt;/span>
&lt;a href="#%e7%aa%97%e5%8f%a3%e5%87%bd%e6%95%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>从 MySQL 8.0 开始，新增了一个叫窗口函数的概念，它可以用来实现若干新的查询方式。窗口函数与 &lt;code>SUM()&lt;/code>、&lt;code>COUNT()&lt;/code> 这种分组聚合函数类似，在聚合函数后面加上 &lt;code>over()&lt;/code> 就变成窗口函数了，在括号里可以加上 &lt;code>partition by&lt;/code> 等分组关键字指定如何分组，窗口函数即便分组也不会将多行查询结果合并为一行，而是将结果放回多行当中，即窗口函数不需要再使用 &lt;code>GROUP BY&lt;/code>。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建一张账户余额表&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CREATE TABLE &lt;span class="sb">`&lt;/span>account_channel&lt;span class="sb">`&lt;/span> &lt;span class="o">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`&lt;/span>id&lt;span class="sb">`&lt;/span> int NOT NULL AUTO_INCREMENT,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`&lt;/span>name&lt;span class="sb">`&lt;/span> varchar&lt;span class="o">(&lt;/span>255&lt;span class="o">)&lt;/span> CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT &lt;span class="s1">&amp;#39;姓名&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`&lt;/span>channel&lt;span class="sb">`&lt;/span> varchar&lt;span class="o">(&lt;/span>20&lt;span class="o">)&lt;/span> CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT &lt;span class="s1">&amp;#39;账户渠道&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`&lt;/span>balance&lt;span class="sb">`&lt;/span> int DEFAULT NULL COMMENT &lt;span class="s1">&amp;#39;余额&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PRIMARY KEY &lt;span class="o">(&lt;/span>&lt;span class="sb">`&lt;/span>id&lt;span class="sb">`&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">)&lt;/span> &lt;span class="nv">ENGINE&lt;/span>&lt;span class="o">=&lt;/span>InnoDB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 插入一些示例数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO &lt;span class="sb">`&lt;/span>&lt;span class="nb">test&lt;/span>&lt;span class="sb">`&lt;/span>.&lt;span class="sb">`&lt;/span>account_channel&lt;span class="sb">`&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="sb">`&lt;/span>id&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>name&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>channel&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>balance&lt;span class="sb">`&lt;/span>&lt;span class="o">)&lt;/span> VALUES &lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;1&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;zhuge&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;wx&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;100&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO &lt;span class="sb">`&lt;/span>&lt;span class="nb">test&lt;/span>&lt;span class="sb">`&lt;/span>.&lt;span class="sb">`&lt;/span>account_channel&lt;span class="sb">`&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="sb">`&lt;/span>id&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>name&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>channel&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>balance&lt;span class="sb">`&lt;/span>&lt;span class="o">)&lt;/span> VALUES &lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;2&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;zhuge&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;alipay&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;200&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO &lt;span class="sb">`&lt;/span>&lt;span class="nb">test&lt;/span>&lt;span class="sb">`&lt;/span>.&lt;span class="sb">`&lt;/span>account_channel&lt;span class="sb">`&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="sb">`&lt;/span>id&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>name&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>channel&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>balance&lt;span class="sb">`&lt;/span>&lt;span class="o">)&lt;/span> VALUES &lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;3&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;zhuge&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;yinhang&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;300&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO &lt;span class="sb">`&lt;/span>&lt;span class="nb">test&lt;/span>&lt;span class="sb">`&lt;/span>.&lt;span class="sb">`&lt;/span>account_channel&lt;span class="sb">`&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="sb">`&lt;/span>id&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>name&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>channel&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>balance&lt;span class="sb">`&lt;/span>&lt;span class="o">)&lt;/span> VALUES &lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;4&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;lilei&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;wx&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;200&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO &lt;span class="sb">`&lt;/span>&lt;span class="nb">test&lt;/span>&lt;span class="sb">`&lt;/span>.&lt;span class="sb">`&lt;/span>account_channel&lt;span class="sb">`&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="sb">`&lt;/span>id&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>name&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>channel&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>balance&lt;span class="sb">`&lt;/span>&lt;span class="o">)&lt;/span> VALUES &lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;5&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;lilei&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;alipay&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;100&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO &lt;span class="sb">`&lt;/span>&lt;span class="nb">test&lt;/span>&lt;span class="sb">`&lt;/span>.&lt;span class="sb">`&lt;/span>account_channel&lt;span class="sb">`&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="sb">`&lt;/span>id&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>name&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>channel&lt;span class="sb">`&lt;/span>, &lt;span class="sb">`&lt;/span>balance&lt;span class="sb">`&lt;/span>&lt;span class="o">)&lt;/span> VALUES &lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;6&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;hanmeimei&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;wx&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;500&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="k">select&lt;/span> * from account_channel&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-----------+---------+---------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> id &lt;span class="p">|&lt;/span> name &lt;span class="p">|&lt;/span> channel &lt;span class="p">|&lt;/span> balance &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-----------+---------+---------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> zhuge &lt;span class="p">|&lt;/span> wx &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> zhuge &lt;span class="p">|&lt;/span> alipay &lt;span class="p">|&lt;/span> &lt;span class="m">200&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">3&lt;/span> &lt;span class="p">|&lt;/span> zhuge &lt;span class="p">|&lt;/span> yinhang &lt;span class="p">|&lt;/span> &lt;span class="m">300&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">4&lt;/span> &lt;span class="p">|&lt;/span> lilei &lt;span class="p">|&lt;/span> wx &lt;span class="p">|&lt;/span> &lt;span class="m">200&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">5&lt;/span> &lt;span class="p">|&lt;/span> lilei &lt;span class="p">|&lt;/span> alipay &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">6&lt;/span> &lt;span class="p">|&lt;/span> hanmeimei &lt;span class="p">|&lt;/span> wx &lt;span class="p">|&lt;/span> &lt;span class="m">500&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+-----------+---------+---------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">6&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="k">select&lt;/span> name,sum&lt;span class="o">(&lt;/span>balance&lt;span class="o">)&lt;/span> from account_channel group by name&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------+--------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> name &lt;span class="p">|&lt;/span> sum&lt;span class="o">(&lt;/span>balance&lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------+--------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> zhuge &lt;span class="p">|&lt;/span> &lt;span class="m">600&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> lilei &lt;span class="p">|&lt;/span> &lt;span class="m">300&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> hanmeimei &lt;span class="p">|&lt;/span> &lt;span class="m">500&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------+--------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">3&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 在聚合函数后面加上 over() 就变成窗口函数了，后面可以不用再加 group by 制定分组，因为在 over 里已经用 partition 关键字指明了如何分组计算，这种可以保留原有表数据的结构，不会像分组聚合函数那样每组只返回一条数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="k">select&lt;/span> name,channel,balance,sum&lt;span class="o">(&lt;/span>balance&lt;span class="o">)&lt;/span> over&lt;span class="o">(&lt;/span>partition by name&lt;span class="o">)&lt;/span> as sum_balance from account_channel&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------+---------+---------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> name &lt;span class="p">|&lt;/span> channel &lt;span class="p">|&lt;/span> balance &lt;span class="p">|&lt;/span> sum_balance &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------+---------+---------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> hanmeimei &lt;span class="p">|&lt;/span> wx &lt;span class="p">|&lt;/span> &lt;span class="m">500&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">500&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> lilei &lt;span class="p">|&lt;/span> wx &lt;span class="p">|&lt;/span> &lt;span class="m">200&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">300&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> lilei &lt;span class="p">|&lt;/span> alipay &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">300&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> zhuge &lt;span class="p">|&lt;/span> wx &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">600&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> zhuge &lt;span class="p">|&lt;/span> alipay &lt;span class="p">|&lt;/span> &lt;span class="m">200&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">600&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> zhuge &lt;span class="p">|&lt;/span> yinhang &lt;span class="p">|&lt;/span> &lt;span class="m">300&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">600&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------+---------+---------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">6&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="k">select&lt;/span> name,channel,balance,sum&lt;span class="o">(&lt;/span>balance&lt;span class="o">)&lt;/span> over&lt;span class="o">(&lt;/span>partition by name order by balance&lt;span class="o">)&lt;/span> as sum_balance from account_channel&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------+---------+---------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> name &lt;span class="p">|&lt;/span> channel &lt;span class="p">|&lt;/span> balance &lt;span class="p">|&lt;/span> sum_balance &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------+---------+---------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> hanmeimei &lt;span class="p">|&lt;/span> wx &lt;span class="p">|&lt;/span> &lt;span class="m">500&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">500&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> lilei &lt;span class="p">|&lt;/span> alipay &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> lilei &lt;span class="p">|&lt;/span> wx &lt;span class="p">|&lt;/span> &lt;span class="m">200&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">300&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> zhuge &lt;span class="p">|&lt;/span> wx &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> zhuge &lt;span class="p">|&lt;/span> alipay &lt;span class="p">|&lt;/span> &lt;span class="m">200&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">300&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> zhuge &lt;span class="p">|&lt;/span> yinhang &lt;span class="p">|&lt;/span> &lt;span class="m">300&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">600&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------+---------+---------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">6&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># over() 里如果不加条件，则默认使用整个表的数据做运算&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="k">select&lt;/span> name,channel,balance,sum&lt;span class="o">(&lt;/span>balance&lt;span class="o">)&lt;/span> over&lt;span class="o">()&lt;/span> as sum_balance from account_channel&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------+---------+---------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> name &lt;span class="p">|&lt;/span> channel &lt;span class="p">|&lt;/span> balance &lt;span class="p">|&lt;/span> sum_balance &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------+---------+---------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> zhuge &lt;span class="p">|&lt;/span> wx &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">1400&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> zhuge &lt;span class="p">|&lt;/span> alipay &lt;span class="p">|&lt;/span> &lt;span class="m">200&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">1400&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> zhuge &lt;span class="p">|&lt;/span> yinhang &lt;span class="p">|&lt;/span> &lt;span class="m">300&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">1400&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> lilei &lt;span class="p">|&lt;/span> wx &lt;span class="p">|&lt;/span> &lt;span class="m">200&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">1400&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> lilei &lt;span class="p">|&lt;/span> alipay &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">1400&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> hanmeimei &lt;span class="p">|&lt;/span> wx &lt;span class="p">|&lt;/span> &lt;span class="m">500&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="m">1400&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------+---------+---------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">6&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="k">select&lt;/span> name,channel,balance,avg&lt;span class="o">(&lt;/span>balance&lt;span class="o">)&lt;/span> over&lt;span class="o">(&lt;/span>partition by name&lt;span class="o">)&lt;/span> as avg_balance from account_channel&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------+---------+---------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> name &lt;span class="p">|&lt;/span> channel &lt;span class="p">|&lt;/span> balance &lt;span class="p">|&lt;/span> avg_balance &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------+---------+---------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> hanmeimei &lt;span class="p">|&lt;/span> wx &lt;span class="p">|&lt;/span> &lt;span class="m">500&lt;/span> &lt;span class="p">|&lt;/span> 500.0000 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> lilei &lt;span class="p">|&lt;/span> wx &lt;span class="p">|&lt;/span> &lt;span class="m">200&lt;/span> &lt;span class="p">|&lt;/span> 150.0000 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> lilei &lt;span class="p">|&lt;/span> alipay &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span> 150.0000 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> zhuge &lt;span class="p">|&lt;/span> wx &lt;span class="p">|&lt;/span> &lt;span class="m">100&lt;/span> &lt;span class="p">|&lt;/span> 200.0000 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> zhuge &lt;span class="p">|&lt;/span> alipay &lt;span class="p">|&lt;/span> &lt;span class="m">200&lt;/span> &lt;span class="p">|&lt;/span> 200.0000 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> zhuge &lt;span class="p">|&lt;/span> yinhang &lt;span class="p">|&lt;/span> &lt;span class="m">300&lt;/span> &lt;span class="p">|&lt;/span> 200.0000 &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-----------+---------+---------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">6&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>binlog 日志过期时间精确到秒&lt;span class="hx-absolute -hx-mt-20" id="binlog-日志过期时间精确到秒">&lt;/span>
&lt;a href="#binlog-%e6%97%a5%e5%bf%97%e8%bf%87%e6%9c%9f%e6%97%b6%e9%97%b4%e7%b2%be%e7%a1%ae%e5%88%b0%e7%a7%92" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>在 8.0 版本之前，binlog 日志过期时间设置都是设置 &lt;code>expire_logs_days&lt;/code> 参数，单位是天，而在 8.0 版本以后，MySQL 默认使用 &lt;code>binlog_expire_logs_seconds&lt;/code> 参数，单位是秒。&lt;/p>
&lt;h3>默认字符集由 latin1 变为 utf8mb4&lt;span class="hx-absolute -hx-mt-20" id="默认字符集由-latin1-变为-utf8mb4">&lt;/span>
&lt;a href="#%e9%bb%98%e8%ae%a4%e5%ad%97%e7%ac%a6%e9%9b%86%e7%94%b1-latin1-%e5%8f%98%e4%b8%ba-utf8mb4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>在 8.0 版本之前，默认字符集为 &lt;code>latin1&lt;/code>，&lt;code>utf8&lt;/code> 指向的是 &lt;code>utf8mb3&lt;/code>，&lt;code>8.0&lt;/code> 版本默认字符集为 &lt;code>utf8mb4&lt;/code>，&lt;code>utf8&lt;/code> 默认指向的也是 &lt;code>utf8mb4&lt;/code>。&lt;/p>
&lt;h3>元数据存储变动&lt;span class="hx-absolute -hx-mt-20" id="元数据存储变动">&lt;/span>
&lt;a href="#%e5%85%83%e6%95%b0%e6%8d%ae%e5%ad%98%e5%82%a8%e5%8f%98%e5%8a%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>MySQL 8.0 删除了之前版本的元数据文件，例如表结构 &lt;code>.frm&lt;/code> 等文件，全部集中放入 &lt;code>mysql.ibd&lt;/code> 文件里。&lt;/p>
&lt;h3>AUTO_INCREMENT 自增变量持久化&lt;span class="hx-absolute -hx-mt-20" id="auto_increment-自增变量持久化">&lt;/span>
&lt;a href="#auto_increment-%e8%87%aa%e5%a2%9e%e5%8f%98%e9%87%8f%e6%8c%81%e4%b9%85%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>8.0 版本对 &lt;code>AUTO_INCREMENT&lt;/code> 值进行了持久化，MySQL 重启后，该值不会改变。&lt;/p>
&lt;h3>DDL 原子化&lt;span class="hx-absolute -hx-mt-20" id="ddl-原子化">&lt;/span>
&lt;a href="#ddl-%e5%8e%9f%e5%ad%90%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>MySQL 8.0 开始支持原子 DDL 操作。&lt;/p>
&lt;h3>参数修改持久化&lt;span class="hx-absolute -hx-mt-20" id="参数修改持久化">&lt;/span>
&lt;a href="#%e5%8f%82%e6%95%b0%e4%bf%ae%e6%94%b9%e6%8c%81%e4%b9%85%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>MySQL 8.0 开始支持参数修改持久化，即修改参数后，重启 MySQL 后，参数值不会改变。通过加上 &lt;code>PERSIST&lt;/code> 关键字，可以将修改的参数持久化到新的配置文件（&lt;code>mysqld-auto.cnf&lt;/code>）中。&lt;/p></description></item><item><title>集群架构</title><link>https://shipengqi.github.io/db-learn/docs/mysql/practice/05_cluster/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/db-learn/docs/mysql/practice/05_cluster/</guid><description>
&lt;h2>主从集群&lt;span class="hx-absolute -hx-mt-20" id="主从集群">&lt;/span>
&lt;a href="#%e4%b8%bb%e4%bb%8e%e9%9b%86%e7%be%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>搭建 MySQL 服务&lt;span class="hx-absolute -hx-mt-20" id="搭建-mysql-服务">&lt;/span>
&lt;a href="#%e6%90%ad%e5%bb%ba-mysql-%e6%9c%8d%e5%8a%a1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>准备两台服务器，用来搭建一个 MySQL 的服务集群。两台服务器均安装 CentOS7 操作系统。MySQL 版本采用 &lt;code>mysql-8.0.20&lt;/code> 版本。&lt;/p>
&lt;p>两台服务器的 IP 分别为 &lt;code>192.168.232.128&lt;/code> 和 &lt;code>192.168.232.129&lt;/code>。其中 128 服务器规划为 MySQL 主节点，129 服务器规划为 MySQL 的从节点。&lt;/p>
&lt;p>在两台服务器上分别安装 MySQL 服务。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">groupadd mysql
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">useradd -r -g mysql -s /bin/false mysql &lt;span class="c1"># 这里是创建一个 mysql 用户用于承载 mysql 服务，但是不需要登录权限。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar -zxvf mysql-8.0.20-el7-x86_64.tar.gz &lt;span class="c1">#解压&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s mysql-8.0.20-el7-x86_64 mysql &lt;span class="c1">#建立软链接&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> mysql
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir mysql-files
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chown mysql:mysql mysql-files
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod &lt;span class="m">750&lt;/span> mysql-files
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bin/mysqld --initialize --user&lt;span class="o">=&lt;/span>mysql &lt;span class="c1"># 初始化 mysql 数据文件 注意点1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bin/mysql_ssl_rsa_setup
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bin/mysqld_safe --user&lt;span class="o">=&lt;/span>mysql
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp support-files/mysql.server /etc/init.d/mysql.server&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>注意点：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>初始化过程中会初始化一些 MySQL 的数据文件，经常会出现一些文件或者文件夹权限不足的问题。如果有文件权限不足的问题，需要根据他的报错信息，创建对应的文件或者文件夹，并配置对应的文件权限。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>初始化过程如果正常完成，日志中会打印出一个 root 用户的默认密码。这个密码需要记录下来。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;code>2020-12-10T06:05:28.948043Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: P6kigsT6Lg&amp;gt;=&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>启动 MySQL 服务：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bin/mysqld --user&lt;span class="o">=&lt;/span>mysql &lt;span class="p">&amp;amp;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>连接 MySQL：&lt;/p>
&lt;p>&lt;strong>默认是只能从本机登录，远程是无法访问的&lt;/strong>。所以需要用 root 用户登录下，配置远程访问的权限。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /root/mysql
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bin/mysql -uroot -p &lt;span class="c1"># 然后用之前记录的默认密码登录&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>如果遇到 &lt;code>ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/tmp/mysql.sock'&lt;/code> 报错，可以参照下面的配置，修改下 &lt;code>/etc/my.cnf&lt;/code> 配置文件，来配置下 sock 连接文件的地址。主要是下面 &lt;code>client&lt;/code> 部分：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[mysqld]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">datadir&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/var/lib/mysql&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">socket&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/var/lib/mysql/mysql.sock&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">user&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">mysql&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Disabling symbolic-links is recommended to prevent assorted security risks&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">symbolic-links&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Settings user and group are ignored when systemd is used.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If you need to run mysqld under a different user or group,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># customize your systemd unit file for mariadb according to the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># instructions in http://fedoraproject.org/wiki/Systemd&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[mysqld_safe]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">log-error&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/var/log/mariadb/mariadb.log&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">pid-file&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/var/run/mariadb/mariadb.pid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># include all files from the config directory&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">!includedir /etc/my.cnf.d&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[client]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">3306&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">socket&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/var/lib/mysql/mysql.sock&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>​登录进去后，需要配置远程登录权限：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">alter user &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span>@&lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span> identified by &lt;span class="s1">&amp;#39;123456&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">#修改 root 用户的密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">use mysql&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">update user &lt;span class="nb">set&lt;/span> &lt;span class="nv">host&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;%&amp;#39;&lt;/span> where &lt;span class="nv">user&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">flush privileges&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>搭建完成，可以使用 navicat 等连接工具远程访问 MySQL 服务了。&lt;/p>
&lt;p>搭建主从集群的多个服务，有两个必要的条件：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>MySQL 版本必须一致&lt;/strong>。&lt;/li>
&lt;li>&lt;strong>集群中各个服务器的时间需要同步&lt;/strong>。&lt;/li>
&lt;/ol>
&lt;h3>配置主从集群&lt;span class="hx-absolute -hx-mt-20" id="配置主从集群">&lt;/span>
&lt;a href="#%e9%85%8d%e7%bd%ae%e4%b8%bb%e4%bb%8e%e9%9b%86%e7%be%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>主从同步原理&lt;span class="hx-absolute -hx-mt-20" id="主从同步原理">&lt;/span>
&lt;a href="#%e4%b8%bb%e4%bb%8e%e5%90%8c%e6%ad%a5%e5%8e%9f%e7%90%86" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>数据库的主从同步，就是为了要保证多个数据库之间的数据保持一致。最简单的方式就是使用数据库的导入导出工具，定时将主库的数据导出，再导入到从库当中。这是一种很常见，也很简单易行的数据库集群方式。也有很多的工具帮助我们来做这些事情。但是这种方式进行数据同步的实时性比较差。&lt;/p>
&lt;p>要保证数据能够实时同步，对于 MySQL，通常就要用到他自身提供的&lt;strong>一套通过 Binlog 日志在多个 MySQL 服务之间进行同步的集群方案&lt;/strong>。基于这种集群方案，一方面可以提高数据的安全性，另外也可以以此为基础，提供读写分离、故障转移等其他高级的功能。&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/mysql-cluster.png" alt="mysql-cluster" loading="lazy" />&lt;/p>
&lt;p>&lt;strong>在主库上打开 Binlog 日志，记录对数据的每一步操作。然后在从库上打开 RelayLog 日志，用来记录跟主库一样的 Binlog 日志，并将 RelayLog 中的操作日志在自己数据库中进行重放&lt;/strong>。这样就能够更加实时的保证主库与从库的数据一致。&lt;/p>
&lt;ol>
&lt;li>在从库上启动一系列 IO 线程，负责与主库建立 TCP 连接，请求主库在写入 Binlog 日志时，也往从库传输一份。&lt;/li>
&lt;li>主库上会有一个 IO Dump 线程，负责将 Binlog 日志通过这些 TCP 连接传输给从库的 IO 线程。&lt;/li>
&lt;li>从库为了保证日志接收的稳定性，&lt;strong>并不会立即重演 Binlog 数据操作&lt;/strong>，而是先将接收到的 Binlog 日志写入到自己的 RelayLog 日志当中。然后再&lt;strong>异步的重演 RelayLog 中的数据操作&lt;/strong>。&lt;/li>
&lt;/ol>
&lt;p>​MySQL 的 BinLog 日志能够比较实时的记录主库上的所有操作，因此他也被很多其他工具用来实时监控 MySQL 的数据变化。例如 Canal 框架，可以模拟一个 slave 节点，同步 MySQL 的 Binlog，然后将具体的数据操作按照定制的逻辑进行转发。例如转发到 Redis 实现缓存一致，转发到 Kafka 实现数据实时流转等。甚至像 ClickHouse，还支持将自己模拟成一个 MySQL 的从节点，接收 MySQL 的 Binlog 日志，实时同步 MySQL 的数据。&lt;/p>
&lt;p>​接下来就在这两个 MySQL 服务的基础上，搭建一个主从集群。&lt;/p>
&lt;h4>配置 Master 服务&lt;span class="hx-absolute -hx-mt-20" id="配置-master-服务">&lt;/span>
&lt;a href="#%e9%85%8d%e7%bd%ae-master-%e6%9c%8d%e5%8a%a1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>配置主节点的 MySQL 配置文件： &lt;code>/etc/my.cnf&lt;/code> (没有的话就手动创建一个)&lt;/p>
&lt;p>主要是需要打开 binlog 日志，以及指定 &lt;code>server-id&lt;/code>。打开 MySQL 主服务的 &lt;code>my.cnf&lt;/code> 文件，在文件中一行 &lt;code>server-id&lt;/code> 以及一个关闭域名解析的配置。然后重启服务。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[mysqld]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">server-id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">47&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 开启binlog&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">log_bin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">master-bin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">log_bin-index&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">master-bin.index&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">skip-name-resolve&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置连接端口&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">3306&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置 MySQL 的安装目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">basedir&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/usr/local/mysql&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置 MySQL 数据库的数据的存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">datadir&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/usr/local/mysql/mysql-files&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 允许最大连接数&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">max_connections&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">200&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 允许连接失败的次数。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">max_connect_errors&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 服务端使用的字符集默认为 UTF8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">character-set-server&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">utf8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建新表时将使用的默认存储引擎&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">default-storage-engine&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">INNODB&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 默认使用 “mysql_native_password” 插件认证&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#mysql_native_password&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">default_authentication_plugin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">mysql_native_password&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>server-id&lt;/code>：服务节点的唯一标识。需要给集群中的每个服务分配一个单独的 ID。&lt;/li>
&lt;li>&lt;code>log_bin&lt;/code>：打开 Binlog 日志记录，并指定文件名。&lt;/li>
&lt;li>&lt;code>log_bin-index&lt;/code>：Binlog 日志文件&lt;/li>
&lt;/ul>
&lt;p>重启 MySQL 服务： &lt;code>service mysqld restart&lt;/code>。&lt;/p>
&lt;p>给 root 用户分配一个 replication slave 的权限：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 登录主数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql -u root -p
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GRANT REPLICATION SLAVE ON *.* TO &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span>@&lt;span class="s1">&amp;#39;%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">flush privileges&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看主节点同步状态&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">show master status&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------------------+-----------+--------------+------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> File &lt;span class="p">|&lt;/span> Position &lt;span class="p">|&lt;/span> Binlog_Do_DB &lt;span class="p">|&lt;/span> Binlog_Ignore_DB &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------------------+-----------+--------------+------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> master-bin.000004 &lt;span class="p">|&lt;/span> &lt;span class="m">156&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+------------------+-----------+--------------+------------------+&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>通常不会直接使用 root 用户，而会创建一个拥有全部权限的用户来负责主从同步。&lt;/p>
&lt;/blockquote>
&lt;h4>配置 Slave 服务&lt;span class="hx-absolute -hx-mt-20" id="配置-slave-服务">&lt;/span>
&lt;a href="#%e9%85%8d%e7%bd%ae-slave-%e6%9c%8d%e5%8a%a1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>修改配置文件：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[mysqld]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 主库和从库需要不一致&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">server-id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">48&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 打开 MySQL 中继日志&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">relay-log-index&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">slave-relay-bin.index&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">relay-log&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">slave-relay-bin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 打开从服务二进制日志&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">log-bin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">mysql-bin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 使得更新的数据写进二进制日志中&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">log-slave-updates&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置 3306 端口&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">3306&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置 MySQL 的安装目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">basedir&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/usr/local/mysql&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置 MySQL 数据库的数据的存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">datadir&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/usr/local/mysql/mysql-files&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 允许最大连接数&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">max_connections&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">200&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 允许连接失败的次数。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">max_connect_errors&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 服务端使用的字符集默认为 UTF8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">character-set-server&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">utf8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建新表时将使用的默认存储引擎&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">default-storage-engine&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">INNODB&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 默认使用 “mysql_native_password” 插件认证&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># mysql_native_password&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">default_authentication_plugin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">mysql_native_password&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>启动 MySQL 服务，并设置他的主节点同步状态：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 登录从服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql -u root -p&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置同步主节点&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CHANGE MASTER TO
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">MASTER_HOST&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;192.168.232.128&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">MASTER_PORT&lt;/span>&lt;span class="o">=&lt;/span>3306,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">MASTER_USER&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">MASTER_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">MASTER_LOG_FILE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;master-bin.000004&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">MASTER_LOG_POS&lt;/span>&lt;span class="o">=&lt;/span>156,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">GET_MASTER_PUBLIC_KEY&lt;/span>&lt;span class="o">=&lt;/span>1&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 开启 slave&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">start slave&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看主从同步状态&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">show slave status&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 或者用 show slave status \G; 这样查看比较简洁&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>注意，&lt;code>CHANGE MASTER&lt;/code> 指令中需要指定的 &lt;code>MASTER_LOG_FILE&lt;/code> 和 &lt;code>MASTER_LOG_POS&lt;/code> 必须与主服务中命令 &lt;code>show master status;&lt;/code> 查到的保持一致。&lt;/p>
&lt;p>并且后续如果要检查主从架构是否成功，也可以通过检查主服务与从服务之间的 File 和 Position 这两个属性是否一致来确定。&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; show slave status &lt;span class="se">\G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************** 1. row ***************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Slave_IO_State: Waiting &lt;span class="k">for&lt;/span> master to send event
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Master_Host: 192.168.232.128
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Master_User: root
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Master_Port: &lt;span class="m">3306&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Connect_Retry: &lt;span class="m">60&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Master_Log_File: master-bin.000004 &lt;span class="c1"># 主节点的 binlog 文件名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Read_Master_Log_Pos: &lt;span class="m">156&lt;/span> &lt;span class="c1"># 主节点的 binlog 位置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Relay_Log_File: slave-relay-bin.000006
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Relay_Log_Pos: &lt;span class="m">373&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Relay_Master_Log_File: master-bin.000004
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Slave_IO_Running: Yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Slave_SQL_Running: Yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Replicate_Do_DB: &lt;span class="c1"># 从节点需要同步的数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Replicate_Ignore_DB: &lt;span class="c1"># 从节点不需要同步的数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Replicate_Do_Table: &lt;span class="c1"># 从节点需要同步的数据库中的表&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Replicate_Ignore_Table: &lt;span class="c1"># 从节点不需要同步的数据库中的表&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Replicate_Wild_Do_Table: &lt;span class="c1"># 从节点需要同步的数据库中的通配符表，例如 test.%&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Replicate_Wild_Ignore_Table: &lt;span class="c1"># 从节点不需要同步的数据库中的通配符表，例如 test.% &lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;strong>&lt;code>Replicate_&lt;/code> 开头这些属性指定了两个服务之间要同步哪些数据库、哪些表的配置&lt;/strong>。只是在这个示例中全都&lt;strong>没有进行配置，就标识是全库进行同步&lt;/strong>。&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4>主从集群测试&lt;span class="hx-absolute -hx-mt-20" id="主从集群测试">&lt;/span>
&lt;a href="#%e4%b8%bb%e4%bb%8e%e9%9b%86%e7%be%a4%e6%b5%8b%e8%af%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>先用 &lt;code>showdatabases&lt;/code>，查看下两个 MySQL 服务中的数据库情况：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># master&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; show databases&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> Database &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> information_schema &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> masterdemo &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> mysql &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> performance_schema &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> sys &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">5&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># slave&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; show databases&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> Database &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> information_schema &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> masterdemo &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> mysql &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> performance_schema &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> sys &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">5&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.01 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>​ 然后在主服务器上创建一个数据库：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; create database syncdemo&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">1&lt;/span> row affected &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>再用 &lt;code>show databases&lt;/code>，来看下这个 &lt;code>syncdemo&lt;/code> 的数据库是不是已经同步到了从服务：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># slave&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; show databases&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> Database &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> information_schema &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> masterdemo &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> mysql &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> performance_schema &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> syncdemo &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> sys &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">6&lt;/span> rows in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>继续在 &lt;code>syncdemo&lt;/code> 这个数据库中创建一个表，并插入一条数据：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; use syncdemo&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Database changed
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; create table demoTable&lt;span class="o">(&lt;/span>id int not null&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.02 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; insert into demoTable value&lt;span class="o">(&lt;/span>1&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">1&lt;/span> row affected &lt;span class="o">(&lt;/span>0.01 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>查一下这个 &lt;code>demoTable&lt;/code> 是否同步到了从服务：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># slave&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; use syncdemo&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Database changed
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; show tables&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> Tables_in_syncdemo &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> demoTable &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+--------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看 demoTable 表中的数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="k">select&lt;/span> * from demoTable&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> id &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> row in &lt;span class="nb">set&lt;/span> &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>这样，一个主从集群就搭建完成了。&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-orange-100 hx-bg-orange-50 hx-text-orange-800 dark:hx-border-orange-400/30 dark:hx-bg-orange-400/20 dark:hx-text-orange-300">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>另外，这个主从架构是有可能失败的，如果在 slave 从服务上查看 slave 状态，发&lt;code>现Slave_SQL_Running=no&lt;/code>，就表示&lt;strong>主从同步失败&lt;/strong>了。这有可能是因为在从数据库上进行了写操作，与同步过来的 SQL 操作冲突了，也有可能是 slave 从服务重启后有事务回滚了。&lt;/p>
&lt;p>如果是因为 slave 从服务事务回滚的原因，可以按照以下方式重启主从同步：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; stop slave &lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="nb">set&lt;/span> GLOBAL &lt;span class="nv">SQL_SLAVE_SKIP_COUNTER&lt;/span>&lt;span class="o">=&lt;/span>1&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; start slave &lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>另一种解决方式就是重新记录主节点的 binlog 文件消息：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; stop slave &lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; change master to .....
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; start slave &lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>这种方式要注意 binlog 的文件和位置，如果修改后和之前的同步接不上，那就会丢失部分数据。所以不太常用。&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4>全库同步与部分同步&lt;span class="hx-absolute -hx-mt-20" id="全库同步与部分同步">&lt;/span>
&lt;a href="#%e5%85%a8%e5%ba%93%e5%90%8c%e6%ad%a5%e4%b8%8e%e9%83%a8%e5%88%86%e5%90%8c%e6%ad%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>目前配置的主从同步是针对全库配置的，而实际环境中，一般并不需要针对全库做备份，而只需要对一些特别重要的库或者表来进行同步。那如何针对库和表做同步配置？&lt;/p>
&lt;p>在 Master 端：在 &lt;code>my.cnf&lt;/code> 中，可以通过以下这些属性指定需要针对哪些库或者哪些表记录 binlog：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 需要同步的二进制数据库名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">binlog-do-db&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">masterdemo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 只保留 7 天的二进制日志，以防磁盘被日志占满(可选)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">expire-logs-days&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 不备份的数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">binlog-ignore-db&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">information_schema&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">binlog-ignore-db&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">performation_schema&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">binlog-ignore-db&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">sys&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>在 Slave 端：在 &lt;code>my.cnf&lt;/code> 中，需要配置备份库与主服务的库的对应关系：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 如果 salve 库名称与 master 库名相同，使用本配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">replicate-do-db&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">masterdemo &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 如果 master 库名 [mastdemo] 与 salve 库名 [mastdemo01] 不同，使用以下配置 [需要做映射]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">replicate-rewrite-db&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">masterdemo -&amp;gt; masterdemo01&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 如果不是要全部同步 [默认全部同步]，则指定需要同步的表&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">replicate-wild-do-table&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">masterdemo01.t_dict&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">replicate-wild-do-table&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">masterdemo01.t_num&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>配置完成了之后，在 &lt;code>show master status&lt;/code> 指令中，就可以看到 &lt;code>Binlog_Do_DB&lt;/code> 和 &lt;code>Binlog_Ignore_DB&lt;/code> 两个参数的作用了。&lt;/p>
&lt;h4>GTID 同步集群&lt;span class="hx-absolute -hx-mt-20" id="gtid-同步集群">&lt;/span>
&lt;a href="#gtid-%e5%90%8c%e6%ad%a5%e9%9b%86%e7%be%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>上面搭建的集群方式，是基于 Binlog 日志记录点的方式来搭建的，这也是最为传统的 MySQL 集群搭建方式。&lt;/p>
&lt;p>另外一种搭建主从同步的方式，即 GTID 搭建方式。这种模式是从 MySQL 5.6 版本引入的。&lt;/p>
&lt;p>&lt;strong>GTID 的本质也是基于 Binlog 来实现主从同步，只是他会基于一个全局的事务 ID 来标识同步进度。GTID 即全局事务 ID，全局唯一并且趋势递增，他可以保证为每一个在主节点上提交的事务在复制集群中可以生成一个唯一的 ID&lt;/strong>。&lt;/p>
&lt;p>在基于 GTID 的复制中，首先从服务器会告诉主服务器已经在从服务器执行完了哪些事务的 GTID 值，然后主库会有把所有没有在从库上执行的事务，发送到从库上进行执行，并且使用 GTID 的复制可以保证同一个事务只在指定的从库上执行一次，这样可以避免由于偏移量的问题造成数据不一致。&lt;/p>
&lt;p>搭建方式跟主从架构整体搭建方式差不多。只是需要在 &lt;code>my.cnf&lt;/code> 中修改一些配置：&lt;/p>
&lt;p>主节点：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="na">gtid_mode&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">on&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">enforce_gtid_consistency&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">on&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">log_bin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">on&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">server_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">单独设置一个&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">binlog_format&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">row&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>从节点：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="na">gtid_mode&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">on&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">enforce_gtid_consistency&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">on&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">log_slave_updates&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">server_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">单独设置一个&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>然后分别重启主服务和从服务，就可以开启 GTID 同步复制方式。&lt;/p>
&lt;h2>集群扩容与 MySQL 数据迁移&lt;span class="hx-absolute -hx-mt-20" id="集群扩容与-mysql-数据迁移">&lt;/span>
&lt;a href="#%e9%9b%86%e7%be%a4%e6%89%a9%e5%ae%b9%e4%b8%8e-mysql-%e6%95%b0%e6%8d%ae%e8%bf%81%e7%a7%bb" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>如果要扩展到一主多从的集群架构，其实就比较简单了，只需要增加一个 binlog 复制就行了。&lt;/p>
&lt;p>但是如果我们的集群是已经运行过一段时间，这时候如果要扩展新的从节点就有一个问题，之前的数据没办法从 binlog 来恢复了。这时候在扩展新的 slave 节点时，就需要增加一个数据复制的操作。&lt;/p>
&lt;p>​MySQL 的数据备份恢复操作相对比较简单，可以通过 SQL 语句直接来完成。具体操作可以使用 MySQL 的 &lt;code>bin&lt;/code> 目录下的 &lt;code>mysqldump&lt;/code> 工具：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysqldump -u root -p --all-databases &amp;gt; backup.sql
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#输入密码&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>通过这个指令，就可以将整个数据库的所有数据导出成 &lt;code>backup.sql&lt;/code>，然后把这个 &lt;code>backup.sql&lt;/code> 分发到新的 MySQL 服务器上，并执行下面的指令将数据全部导入到新的 MySQL 服务中：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql -u root -p &amp;lt; backup.sql
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#输入密码&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>这样新的 MySQL 服务就已经有了所有的历史数据，然后就可以再按照上面的步骤，配置 Slave 从服务的数据同步了。&lt;/p>
&lt;h2>搭建半同步复制&lt;span class="hx-absolute -hx-mt-20" id="搭建半同步复制">&lt;/span>
&lt;a href="#%e6%90%ad%e5%bb%ba%e5%8d%8a%e5%90%8c%e6%ad%a5%e5%a4%8d%e5%88%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>半同步复制的原理&lt;span class="hx-absolute -hx-mt-20" id="半同步复制的原理">&lt;/span>
&lt;a href="#%e5%8d%8a%e5%90%8c%e6%ad%a5%e5%a4%8d%e5%88%b6%e7%9a%84%e5%8e%9f%e7%90%86" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>主从复制数据丢失问题&lt;span class="hx-absolute -hx-mt-20" id="主从复制数据丢失问题">&lt;/span>
&lt;a href="#%e4%b8%bb%e4%bb%8e%e5%a4%8d%e5%88%b6%e6%95%b0%e6%8d%ae%e4%b8%a2%e5%a4%b1%e9%97%ae%e9%a2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>MySQL 的主从集群，是有丢失数据的风险的。&lt;/p>
&lt;p>MySQL 主从集群默认采用的是一种异步复制的机制。主服务在执行用户提交的事务后，写入 binlog 日志，然后就给客户端返回一个成功的响应了。而 binlog 会由一个 dump 线程异步发送给 Slave 从服务。&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/mysql-copy-async.png" alt="mysql-copy-async" loading="lazy" />&lt;/p>
&lt;p>由于这个发送 binlog 的过程是异步的。主服务在向客户端反馈执行结果时，是不知道 binlog 是否同步成功了的。这时候如果&lt;strong>主服务宕机了，而从服务还没有备份到新执行的 binlog，那就有可能会丢数据&lt;/strong>。&lt;/p>
&lt;p>怎么解决这个问题，这就要靠 &lt;strong>MySQL 的半同步复制机制来保证数据安全&lt;/strong>。&lt;/p>
&lt;p>​半同步复制机制是一种介于异步复制和全同步复制之前的机制。主库在执行完客户端提交的事务后，并不是立即返回客户端响应，而是&lt;strong>等待至少 N 个从库接收并写到 relay log 中，才会返回给客户端&lt;/strong>。MySQL 在等待确认时，默认会等 10 秒，如果超过 10 秒没有收到 ack，就会降级成为异步复制（也就是说超时了以后 master 就不等了，直接返回客户端去了，也不会当做失败来处理）。&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/mysql-copy-halfsync.png" alt="mysql-copy-halfsync" loading="lazy" />&lt;/p>
&lt;p>这种半同步复制相比异步复制，能够有效的提高数据的安全性。但是这种安全性也不是绝对的，他只保证事务提交后的 binlog 至少传输到了一个从库，并且并不保证从库应用这个事务的 binlog 是成功的。另一方面，半同步复制机制也会造成一定程度的延迟，这个延迟时间最少是一个 TCP/IP 请求往返的时间。整个服务的性能是会有所下降的。而当从服务出现问题时，主服务需要等待的时间就会更长，要等到从服务的服务恢复或者请求超时才能给用户响应。&lt;/p>
&lt;h4>无损半同步&lt;span class="hx-absolute -hx-mt-20" id="无损半同步">&lt;/span>
&lt;a href="#%e6%97%a0%e6%8d%9f%e5%8d%8a%e5%90%8c%e6%ad%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>MySQL 5.7 版本前的半同步复制机制是&lt;strong>有损的&lt;/strong>，这种半同步复制在 Master 发生宕机时，&lt;strong>Slave 会丢失最后一批提交的数据&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/mysql-lossy-semi-sync.png" alt="mysql-lossy-semi-sync" loading="lazy" />&lt;/p>
&lt;p>有损半同步是在 Master 事务提交后，即步骤 4 后，等待 Slave 返回 ACK，表示至少有 Slave 接收到了二进制日志，如果这时二进制日志还未发送到 Slave，Master 就发生宕机，则此时 Slave 就会丢失 Master 已经提交的数据。&lt;/p>
&lt;p>MySQL 5.7 版本之后，引入了无损半同步复制的机制。&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/mysql-lossless-semi-sync.png" alt="mysql-lossless-semi-sync" loading="lazy" />&lt;/p>
&lt;p>无损半同步复制 WAIT ACK 发生在事务提交之前，这样即便 Slave 没有收到二进制日志，但是 Master 宕机了，*&lt;strong>由于最后一个事务还没有提交，所以本身这个数据对外也不可见&lt;/strong>，不存在丢失的问题。&lt;/p>
&lt;h4>搭建半同步复制集群&lt;span class="hx-absolute -hx-mt-20" id="搭建半同步复制集群">&lt;/span>
&lt;a href="#%e6%90%ad%e5%bb%ba%e5%8d%8a%e5%90%8c%e6%ad%a5%e5%a4%8d%e5%88%b6%e9%9b%86%e7%be%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>半同步复制需要基于特定的扩展模块来实现。而 MySQL 从 5.5 版本开始，往上的版本都默认自带了这个模块。这个模块包含在 MySQL 安装目录下的 &lt;code>lib/plugin&lt;/code> 目录下的 &lt;code>semisync_master.so&lt;/code> 和 &lt;code>semisync_slave.so&lt;/code> 两个文件中。需要在主服务上安装 &lt;code>semisync_master&lt;/code> 模块，在从服务上安装 &lt;code>semisync_slave&lt;/code> 模块。&lt;/p>
&lt;p>登陆主节点，安装 &lt;code>semisync_master&lt;/code> 模块：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装半同步复制模块，指定扩展库的文件名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; install plugin rpl_semi_sync_master soname &lt;span class="s1">&amp;#39;semisync_master.so&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.01 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看系统全局参数，rpl_semi_sync_master_timeout 就是半同步复制时等待应答的最长等待时间，默认是 10 秒，可以根据情况自行调整。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; show global variables like &lt;span class="s1">&amp;#39;rpl_semi%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-------------------------------------------+------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> Variable_name &lt;span class="p">|&lt;/span> Value &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-------------------------------------------+------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> rpl_semi_sync_master_enabled &lt;span class="p">|&lt;/span> OFF &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> rpl_semi_sync_master_timeout &lt;span class="p">|&lt;/span> &lt;span class="m">10000&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> rpl_semi_sync_master_trace_level &lt;span class="p">|&lt;/span> &lt;span class="m">32&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> rpl_semi_sync_master_wait_for_slave_count &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> rpl_semi_sync_master_wait_no_slave &lt;span class="p">|&lt;/span> ON &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> rpl_semi_sync_master_wait_point &lt;span class="p">|&lt;/span> AFTER_SYNC &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+-------------------------------------------+------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">6&lt;/span> rows in set, &lt;span class="m">1&lt;/span> warning &lt;span class="o">(&lt;/span>0.02 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 打开半同步复制的开关&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="nb">set&lt;/span> global &lt;span class="nv">rpl_semi_sync_master_enabled&lt;/span>&lt;span class="o">=&lt;/span>ON&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>最后的一个参数 &lt;code>rpl_semi_sync_master_wait_point&lt;/code> 其实表示一种半同步复制的方式。&lt;/p>
&lt;p>半同步复制有两种方式，一种是我们现在看到的这种默认的 &lt;code>AFTER_SYNC&lt;/code> 方式。这种方式下，主库把日志写入 binlog，并且复制给从库，然后开始等待从库的响应。从库返回成功后，主库再提交事务，接着给客户端返回一个成功响应。&lt;/p>
&lt;p>而另一种方式是叫做 &lt;code>AFTER_COMMIT&lt;/code> 方式。他不是默认的。这种方式，在主库写入 binlog 后，等待 binlog 复制到从库，主库就提交自己的本地事务，再等待从库返回给自己一个成功响应，然后主库再给客户端返回响应。&lt;/p>
&lt;/blockquote>
&lt;p>登陆从节点，安装 &lt;code>smeisync_slave&lt;/code> 模块：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql&amp;gt; install plugin rpl_semi_sync_slave soname &lt;span class="s1">&amp;#39;semisync_slave.so&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.01 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; show global variables like &lt;span class="s1">&amp;#39;rpl_semi%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---------------------------------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> Variable_name &lt;span class="p">|&lt;/span> Value &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---------------------------------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> rpl_semi_sync_slave_enabled &lt;span class="p">|&lt;/span> OFF &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> rpl_semi_sync_slave_trace_level &lt;span class="p">|&lt;/span> &lt;span class="m">32&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---------------------------------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">2&lt;/span> rows in set, &lt;span class="m">1&lt;/span> warning &lt;span class="o">(&lt;/span>0.01 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; &lt;span class="nb">set&lt;/span> global &lt;span class="nv">rpl_semi_sync_slave_enabled&lt;/span> &lt;span class="o">=&lt;/span> on&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; show global variables like &lt;span class="s1">&amp;#39;rpl_semi%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---------------------------------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> Variable_name &lt;span class="p">|&lt;/span> Value &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---------------------------------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> rpl_semi_sync_slave_enabled &lt;span class="p">|&lt;/span> ON &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> rpl_semi_sync_slave_trace_level &lt;span class="p">|&lt;/span> &lt;span class="m">32&lt;/span> &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---------------------------------+-------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">2&lt;/span> rows in set, &lt;span class="m">1&lt;/span> warning &lt;span class="o">(&lt;/span>0.00 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; stop slave&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.01 sec&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql&amp;gt; start slave&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Query OK, &lt;span class="m">0&lt;/span> rows affected &lt;span class="o">(&lt;/span>0.01 sec&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>主从复制延迟优化&lt;span class="hx-absolute -hx-mt-20" id="主从复制延迟优化">&lt;/span>
&lt;a href="#%e4%b8%bb%e4%bb%8e%e5%a4%8d%e5%88%b6%e5%bb%b6%e8%bf%9f%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>MySQL 数据库中，大事务除了会导致提交速度变慢，还会导致主从复制延迟。为什么说会导致主从复制延迟？假设一个大事务运行了十分钟，那么在从服务器上也需要运行十分钟回放这个大事务。也就是说 从服务器可能需要十分钟才能追上主服务器。主从服务器之间的数据就产生了延迟。&lt;/p>
&lt;p>优化：&lt;/p>
&lt;ul>
&lt;li>把大事务拆分成小事务，可以避免主从复制延迟，&lt;/li>
&lt;li>设置复制回放相关的配置参数。&lt;/li>
&lt;/ul>
&lt;p>要彻底避免 MySQL 主从复制延迟，数据库版本至少要升级到 5.7，因为之前的 &lt;strong>MySQL 版本从机回放二进制都是单线程的（5.6 是基于库级别的单线程）&lt;/strong>。从 MySQL 5.7 版本开始，&lt;strong>MySQL 支持了从机多线程回放二进制日志的方式&lt;/strong>，通常把它叫作&lt;strong>并行复制&lt;/strong>，官方文档中称为 “Multi-Threaded Slave（MTS）”。&lt;/p>
&lt;p>MySQL 的从机并行复制有两种模式。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>COMMIT ORDER&lt;/strong>：主机怎么并行，从机就怎么并行。从机完全根据主服务的并行度进行回放。理论上来说，主从延迟极小。但如果主服务器上并行度非常小，事务并不小，比如单线程每次插入 1000 条记录，则从机单线程回放，也会存在一些复制延迟的情况。&lt;/li>
&lt;li>&lt;strong>WRITESET&lt;/strong>：基于每个事务，只要事务更新的记录不冲突，就可以并行。以 “单线程每次插入 1000 条记录” 为例，如果插入的记录没有冲突，比如唯一索引冲突，那么&lt;strong>虽然主机是单线程，但从机可以是多线程并行回放！！！&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>启用 WRITESET 复制模式：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="na">binlog_transaction_dependency_tracking&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">WRITESET&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">transaction_write_set_extraction&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">XXHASH64&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">slave-parallel-type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">LOGICAL_CLOCK&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">slave-parallel-workers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">16&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>读写分离&lt;span class="hx-absolute -hx-mt-20" id="读写分离">&lt;/span>
&lt;a href="#%e8%af%bb%e5%86%99%e5%88%86%e7%a6%bb" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>只能从主节点同步到从节点，而从节点的数据表更是无法同步到主节点的。为了保证数据一致，通常会需要保证数据只在主节点上写，而从节点只进行数据读取。这就是读写分离。&lt;/p>
&lt;p>&lt;strong>MySQL 主从本身是无法提供读写分离的服务的，需要由业务自己来实现&lt;/strong>。&lt;/p>
&lt;p>一种常见的业务读写分离的架构设计：&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/mysql-read-write-separation.png" alt="mysql-read-write-separation" loading="lazy" />&lt;/p>
&lt;p>引入了 Load Balance 负载均衡的组件，这样 Server 对于数据库的请求不用关心后面有多少个从机，对于业务来说也就是透明的，只需访问 Load Balance 服务器的 IP 或域名就可以。&lt;/p>
&lt;blockquote>
&lt;p>要限制用户写数据，我们可以在从服务中将 &lt;code>read_only&lt;/code> 参数的值设为 &lt;code>1&lt;/code> ( &lt;code>set global read_only=1;&lt;/code>)。这样就可以限制用户写入数据。但是这个属性有两个需要注意的地方：&lt;/p>
&lt;ol>
&lt;li>&lt;code>read_only=1&lt;/code> 设置的只读模式，不会影响 slave 同步复制的功能。 所以在 MySQL slave 库中设定了 &lt;code>read_only=1&lt;/code> 后，通过 &lt;code>show slave status\G&lt;/code> 命令查看 salve 状态，可以看到 salve 仍然会读取 master 上的日志，并且在 slave 库中应用日志，保证主从数据库同步一致；&lt;/li>
&lt;li>&lt;code>read_only=1&lt;/code> 设置的只读模式，限定的是普通用户进行数据修改的操作，但&lt;strong>不会限定具有 &lt;code>super&lt;/code> 权限的用户的数据修改操作&lt;/strong>。在 MySQL 中设置 &lt;code>read_only=1&lt;/code> 后，普通的应用用户进行 &lt;code>insert&lt;/code>、&lt;code>update&lt;/code>、&lt;code>delete&lt;/code> 等会产生数据变化的 DML 操作时，都会报出数据库处于只读模式不能发生数据变化的错误，但具有 &lt;code>super&lt;/code> 权限的用户，例如在本地或远程通过 root 用户登录到数据库，还是可以进行数据变化的 DML 操作； 如果&lt;strong>需要限定 &lt;code>super&lt;/code> 权限的用户写数据，可以设置 &lt;code>super_read_only=0&lt;/code>&lt;/strong>。另外 如果要想连 &lt;code>super&lt;/code> 权限用户的写操作也禁止，就&lt;strong>使用 &lt;code>flush tables with read lock;&lt;/code>，这样设置也会阻止主从同步复制&lt;/strong>！&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;strong>读写分离设计的前提是从机不能落后主机很多，最好是能准实时数据同步，务必一定要开始并行复制，并确保线上已经将大事务拆成小事务&lt;/strong>。&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>在 Load Balance 服务器，可以配置较小比例的读取请求访问主机，如主服务器权重为的 1% 的读请求，其余三台从服务器各自承担 33% 的读取请求。&lt;/p>
&lt;p>如果发生严重的主从复制延迟情况，可以设置下面从机权重为 0，将主机权重设置为 100%，这样就不会因为数据延迟，导致对于业务的影响了。&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2>多源复制&lt;span class="hx-absolute -hx-mt-20" id="多源复制">&lt;/span>
&lt;a href="#%e5%a4%9a%e6%ba%90%e5%a4%8d%e5%88%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>无论是异步复制还是半同步复制，都是 1 个 Master 对应 N 个 Slave。其实 MySQL 也支持 N 个 Master 对应 1 个 Slave，这种架构就称之为&lt;strong>多源复制&lt;/strong>。&lt;/p>
&lt;p>多源复制允许在不同 MySQL 实例上的数据同步到 1 台 MySQL 实例上，方便在 1 台 Slave 服务器上进行一些统计查询，如常见的 OLAP 业务查询。&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/mysql-multi-source.png" alt="mysql-multi-source" loading="lazy" />&lt;/p>
&lt;p>上图显示了订单库、库存库、供应商库，通过多源复制同步到了一台 MySQL 实例上，接着就可以通过 MySQL 8.0 提供的复杂 SQL 能力，对业务进行深度的数据分析和挖掘。&lt;/p>
&lt;h2>延迟复制&lt;span class="hx-absolute -hx-mt-20" id="延迟复制">&lt;/span>
&lt;a href="#%e5%bb%b6%e8%bf%9f%e5%a4%8d%e5%88%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>前面介绍的复制架构，Slave 在接收二进制日志后会尽可能快地回放日志，这样是为了避免主从之间出现延迟。而&lt;strong>延迟复制却允许 Slave 延迟回放接收到的二进制日志，为了避免主服务器上的误操作，马上又同步到了从服务器，导致数据完全丢失&lt;/strong>。&lt;/p>
&lt;p>可以通过以下命令设置延迟复制：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="o">#&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">设置了&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Slave&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">落后&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Master&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">服务器&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">个小时&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">CHANGE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MASTER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">master_delay&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">3600&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>延迟复制在数据库的备份架构设计中非常常见，比如可以设置一个延迟一天的延迟备机，这样本质上说，用户可以有 1 份 24 小时前的快照。&lt;/p>
&lt;p>那么当线上发生误操作，如 &lt;code>DROP TABLE&lt;/code>、&lt;code>DROP DATABASE&lt;/code> 这样灾难性的命令时，用户有一个 24 小时前的快照，数据可以快速恢复。&lt;/p>
&lt;h2>高可用方案&lt;span class="hx-absolute -hx-mt-20" id="高可用方案">&lt;/span>
&lt;a href="#%e9%ab%98%e5%8f%af%e7%94%a8%e6%96%b9%e6%a1%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>MySQL &lt;strong>主从复制是高可用的技术基础&lt;/strong>，高可用套件是 MySQL 高可用实现的解决方案，负责 Failover 操作。&lt;/p>
&lt;p>为了不让业务感知到数据库的宕机切换，还要要用到 VIP（Virtual IP）技术。VIP 不是真实的物理 IP，而是可以随意绑定在任何一台服务器上。&lt;/p>
&lt;p>业务访问数据库，不是服务器上与网卡绑定的物理 IP，而是这台服务器上的 VIP。当数据库服务器发生宕机时，高可用套件会把 VIP 漂移到新的服务器上。数据库 Failover后，业务依旧访问的还是 VIP，所以&lt;strong>使用 VIP 可以做到对业务透明&lt;/strong>。&lt;/p>
&lt;p>但是 VIP 也是有局限性的，仅限于同机房同网段的 IP 设定。如果是跨机房容灾架构，VIP 就不可用了。这时就要用 DNS（Domain Name Service）服务。&lt;/p>
&lt;p>上层业务通过域名进行访问。当发生宕机，进行机房级切换后，高可用套件会把域名指向为新的 MySQL 主服务器，这样也实现了对于上层服务的透明性。&lt;/p>
&lt;h3>MHA&lt;span class="hx-absolute -hx-mt-20" id="mha">&lt;/span>
&lt;a href="#mha" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://github.com/yoshinorim/mha4mysql-manager" target="_blank" rel="noopener">MHA（Master High Availability）&lt;/a> 是一款开源的 MySQL 高可用程序，它为 MySQL 数据库主从复制架构提供了 automating master failover 的功能。它由两大组件所组成，MHA Manger 和 MHA Node。&lt;/p>
&lt;p>MHA Manager 可以单独部署在一台独立的机器上管理多个 master-slave 集群，也可以部署在一台 slave 节点上。MHA Manager会定时探测集群中的 master 节点，当 master 出现故障时，它可以自动将最新数据的 slave 提升为新的 master，然后将所有其他的 slave 重新指向新的 master。整个故障转移过程对应用程序完全透明。&lt;/p>
&lt;p>而 MHA Node 部署在每台 MySQL 服务器上，MHA Manager 通过执行 Node 节点的脚本完成 failover 切换操作。&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/mysql-mha.png" alt="mysql-mha" loading="lazy" />&lt;/p>
&lt;p>MHA Manager 和 MHA Node 的通信是采用 ssh 的方式，也就是&lt;strong>需要在生产环境中打通 MHA Manager 到所有 MySQL 节点的 ssh 策略，那么这里就存在潜在的安全风险&lt;/strong>。&lt;/p>
&lt;p>另外，&lt;strong>ssh 通信，效率也不是特别高&lt;/strong>。所以，MHA 比较适合用于规模不是特别大的公司，所有 MySQL 数据库的服务器数量不超过 20 台。&lt;/p>
&lt;h3>MGR&lt;span class="hx-absolute -hx-mt-20" id="mgr">&lt;/span>
&lt;a href="#mgr" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>MGR：MySQL Group Replication。 是 MySQL 官方在 5.7.17 版本正式推出的一种组复制机制。主要是解决传统异步复制和半同步复制的数据一致性问题。&lt;/p>
&lt;p>不要简单认为它是一种新的数据同步技术，而是应该把它理解为高可用解决方案，而且特别适合应用于对于数据一致性要求极高的金融级业务场景。&lt;/p>
&lt;p>首先，MGR 之间的数据同步并没有采用复制技术，而是采用 &lt;strong>GCS（Group Communication System）协议&lt;/strong>的日志同步技术。&lt;/p>
&lt;p>&lt;strong>GSC 本身是一种类似 Paxos 算法的协议，要求组中的大部分节点都接收到日志，事务才能提交&lt;/strong>。所以，&lt;strong>MRG 是严格要求数据一致的&lt;/strong>，特别适合用于金融级的环境。由于是类 Paxos 算法，集群的节点要求数量是奇数个，这样才能满足大多数的要求。&lt;/p>
&lt;p>之前介绍的无损半同步也能保证数据强一致的要求吗？&lt;/p>
&lt;p>是的，&lt;strong>虽然通过无损半同步复制也能保证主从数据的一致性，但通过 GCS 进行数据同步有着更好的性能&lt;/strong>：当&lt;strong>启用 MGR 插件时，MySQL 会新开启一个端口用于数据的同步，而不是如复制一样使用 MySQL 服务端口，这样会大大提升复制的效率&lt;/strong>。&lt;/p>
&lt;p>MGR 有两种模式：&lt;/p>
&lt;ul>
&lt;li>单主（Single Primary）模式；&lt;/li>
&lt;li>多主（Multi Primary）模式。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>单主模式只有 1 个节点可以写入，多主模式能让每个节点都可以写入&lt;/strong>。而多个节点之间写入，&lt;strong>如果存在变更同一行的冲突，MySQL 会自动回滚其中一个事务，自动保证数据在多个节点之间的完整性和一致性&lt;/strong>。&lt;/p>
&lt;p>最后，在单主模式下，&lt;strong>MGR 可以自动进行 Failover 切换&lt;/strong>，不用依赖外部的各种高可用套件，所有的事情都由数据库自己完成，比如最复杂的选主（Primary Election）逻辑，都是由 MGR 自己完成，用户不用部署额外的 Agent 等组件。&lt;/p>
&lt;h4>MGR 的限制&lt;span class="hx-absolute -hx-mt-20" id="mgr-的限制">&lt;/span>
&lt;a href="#mgr-%e7%9a%84%e9%99%90%e5%88%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>仅支持 InnoDB 表，并且每张表一定要有一个主键；&lt;/li>
&lt;li>目前一个 MGR 集群，最多只支持 9 个节点；&lt;/li>
&lt;li>有一个节点网络出现抖动或不稳定，会影响集群的性能。&lt;/li>
&lt;/ul>
&lt;p>第 1、2 点问题不大，因为目前用 MySQL 主流的就是使用 InnoDB 存储引擎，9 个节点也足够用了。&lt;/p>
&lt;p>而第 3 点要注意，和复制不一样的是，由于 MGR 使用的是 Paxos 协议，对于网络极其敏感，如果其中一个节点网络变慢，则会影响整个集群性能。而半同步复制，比如 ACK 为1，则 1 个节点网络出现问题，不影响整个集群的性能。所以，在决定使用 MGR 后，切记一定要严格保障网络的质量。&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;div class="hx-select-none hx-text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';">ℹ️&lt;/div>&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;ol>
&lt;li>依赖网络通信&lt;/li>
&lt;/ol>
&lt;p>Paxos 算法的核心是通过节点之间的消息传递来实现一致性。它需要多个阶段的通信，包括提案阶段（Prepare 阶段）、接受阶段（Accept 阶段）和学习阶段（Learn 阶段）。每个阶段都需要节点之间发送和接收消息。&lt;/p>
&lt;ul>
&lt;li>Prepare 阶段：提议者（Proposer）向其他节点发送提案请求（Prepare 消息），&lt;strong>询问是否可以接受新的提案&lt;/strong>。&lt;/li>
&lt;li>Accept 阶段：提议者在收到足够多的响应后，向其他节点发送接受请求（Accept 消息），&lt;strong>要求其他节点接受该提案&lt;/strong>。&lt;/li>
&lt;li>Learn 阶段：接受者（Acceptor）将接受的提案告知其他节点，最终达成一致。&lt;/li>
&lt;/ul>
&lt;p>如果网络延迟过高或消息丢失，这些阶段的通信可能会被阻塞或失败，导致整个协议无法正常推进。&lt;/p>
&lt;ol start="2">
&lt;li>对网络延迟敏感&lt;/li>
&lt;/ol>
&lt;p>Paxos 算法的性能高度依赖网络延迟。在每个阶段，节点都需要等待其他节点的响应。例如：
在 Prepare 阶段，提议者需要等待大多数节点的响应才能进入下一个阶段。
在 Accept 阶段，提议者需要等待大多数节点接受提案后才能认为提案成功。&lt;/p>
&lt;p>如果网络延迟过高，节点等待响应的时间就会增加，导致整个协议的执行时间变长。在极端情况下，如果延迟过高，可能会导致&lt;strong>协议超时，从而需要重新发起一轮新的协商过程&lt;/strong>。&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2>应用层提供管理多个数据源的能力&lt;span class="hx-absolute -hx-mt-20" id="应用层提供管理多个数据源的能力">&lt;/span>
&lt;a href="#%e5%ba%94%e7%94%a8%e5%b1%82%e6%8f%90%e4%be%9b%e7%ae%a1%e7%90%86%e5%a4%9a%e4%b8%aa%e6%95%b0%e6%8d%ae%e6%ba%90%e7%9a%84%e8%83%bd%e5%8a%9b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>有了集群化的后端数据库之后，接下来在应用层面，就需要能够随意访问多个数据库的能力。&lt;/p>
&lt;p>多数据源访问的实现方式有很多，例如基 Spring 提供的 &lt;code>AbstractRoutingDataSource&lt;/code> 组件，就可以快速切换后端访问的实际数据库。&lt;/p>
&lt;p>可以配置两个不同的目标数据库，然后通过 &lt;code>DynamicDataSource&lt;/code> 组件中的一个 &lt;code>ThreadLocal&lt;/code> 变量实现快速切换目标数据库，从而让写接口与读接口分别操作两个不同的数据库。&lt;/p>
&lt;p>由于主库与从库之间可以同步数据，虽然写接口与读接口是访问的不同的数据库，但是由于两个数据库之间可以通过主从集群进行数据同步，所以看起来，课程管理的两个接口就像是访问同一个数据库一样。这其实就是对于数据库非常常见的一种分布式的优化方案&lt;strong>读写分离&lt;/strong>。&lt;/p>
&lt;h3>读写分离&lt;span class="hx-absolute -hx-mt-20" id="读写分离-1">&lt;/span>
&lt;a href="#%e8%af%bb%e5%86%99%e5%88%86%e7%a6%bb-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>数据库读写分离是一种常见的数据库优化方案，其基础思想是&lt;strong>将对数据的读请求和写请求分别分配到不同的数据库服务器上，以提高系统的性能和可扩展性&lt;/strong>。&lt;/p>
&lt;p>一般情况下，数据库的读操作比写操作更为频繁，而且读操作并不会对数据进行修改，因此&lt;strong>可以将读请求分配到多个从数据库服务器上进行处理&lt;/strong>。这样，即使一个从数据库服务器故障或者过载，仍然可以使用其他从数据库服务器来处理读请求，保证系统的稳定性和可用性。同时，将写操作分配到主数据库服务器上，可以保证数据的一致性和可靠性。主数据库服务器负责所有的写操作，而从数据库服务器只需要从主数据库服务器同步数据即可。由于&lt;strong>主数据库服务器是唯一的写入点，可以保证数据的正确性和一致性&lt;/strong>。&lt;/p>
&lt;h3>将多个数据源抽象成一个统一的数据源&lt;span class="hx-absolute -hx-mt-20" id="将多个数据源抽象成一个统一的数据源">&lt;/span>
&lt;a href="#%e5%b0%86%e5%a4%9a%e4%b8%aa%e6%95%b0%e6%8d%ae%e6%ba%90%e6%8a%bd%e8%b1%a1%e6%88%90%e4%b8%80%e4%b8%aa%e7%bb%9f%e4%b8%80%e7%9a%84%e6%95%b0%e6%8d%ae%e6%ba%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>DynamicDataSource&lt;/code> 的实现方式其实对开发方式的侵入是挺大的，每次进行数据库操作之前，都需要先选择要操作那个数据库。有没有更为自然的多数据源管理方式？就是让业务真正像操作单数据源一样访问多个数据。MyBatis-Plus 框架的开发者就开发了这样的一个框架 &lt;code>DynamicDataSource&lt;/code>，可以简化多数据源访问的过程。&lt;/p>
&lt;p>这个开源的 &lt;code>DynamicDataSource&lt;/code> 小框架会自行在 Spring 容器当中注册一个具备多数据源切换能力的 &lt;code>DataSource&lt;/code> 数据源，这样，在应用层面，只需要按照 &lt;code>DynamicDataSource&lt;/code> 框架的要求修改配置接口，其他地方几乎感知不到与传统操作单数据源有什么区别。&lt;/p>
&lt;p>应用只需要像访问单个数据源一样，访问 &lt;code>DynamicDataSource&lt;/code> 框架提供的一个&lt;strong>逻辑数据库&lt;/strong>。而这个逻辑数据库会帮我们将实际的 SQL 语句转发到后面的&lt;strong>真实数据库&lt;/strong>当中去执行。&lt;/p>
&lt;p>其实也是 ShardingSphere 需要做的事情。只不过，ShardingSphere 提供的逻辑库功能要强大很多，也复杂很多。&lt;/p></description></item><item><title>分库分表</title><link>https://shipengqi.github.io/db-learn/docs/mysql/practice/06_shards/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/db-learn/docs/mysql/practice/06_shards/</guid><description>
&lt;p>&lt;strong>分库分表，能不分就不分&lt;/strong>。&lt;/p>
&lt;h2>为什么要分库分表&lt;span class="hx-absolute -hx-mt-20" id="为什么要分库分表">&lt;/span>
&lt;a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e5%88%86%e5%ba%93%e5%88%86%e8%a1%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>随着现在互联网应用越来越大，数据库会频繁的成为整个应用的性能瓶颈。我们经常使用的 MySQL 数据库，也就不断面临数据量太大、数据访问太频繁、数据读写速度太快等一系列的问题。而传统的这些调优方式，在真正面对海量数据冲击时，往往就会显得很无力。因此，现在互联网对于数据库的使用也越来越小心谨慎。例如添加Redis缓存、增加MQ进行流量削峰等。但是，数据库本身如果性能得不到提升，这就相当于是水桶理论中的最短板。&lt;/p>
&lt;p>要提升数据库的性能，最直接的思路，当然是对数据库本身进行优化。例如对 MySQL 进行调优，优化 SQL 逻辑，优化索引结构，甚至像阿里等互联网大厂一样，直接优化 MySQL 的源码。但是这种思路在面对互联网环境时，会有很多非常明显的弊端。&lt;/p>
&lt;ul>
&lt;li>数据量和业务量快速增长，会带来性能瓶颈、服务宕机等很多问题。&lt;/li>
&lt;li>单点部署的数据库无法保证服务高可用。&lt;/li>
&lt;li>单点部署的数据库无法进行水平扩展，难以应对业务爆发式的增长。
​
这些问题背后的核心还是数据。数据库不同于上层的一些服务，它所管理的数据甚至比服务本身更重要。即要保证数据能够持续稳定的写入，又不能因为服务故障造成数据丢失。现在互联网上的大型应用，动辄几千万上亿的数据量，就算做好数据的压缩，随随便便也可以超过任何服务器的存储能力。并且，服务器单点部署，也无法真正解决把鸡蛋放在一个篮子里的问题。将数据放在同一个服务器上，如果服务器出现崩溃，就很难保证数据的安全性。这些都不是光靠优化 MySQL 产品，优化服务器配置能够解决的问题。&lt;/li>
&lt;/ul>
&lt;h2>分库分表的优势&lt;span class="hx-absolute -hx-mt-20" id="分库分表的优势">&lt;/span>
&lt;a href="#%e5%88%86%e5%ba%93%e5%88%86%e8%a1%a8%e7%9a%84%e4%bc%98%e5%8a%bf" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>​
那么自然就需要换另外一种思路了。我们可以像微服务架构一样，来维护数据库的服务。把数据库从单体服务升级到数据库集群，这样才能真正全方位解放数据库的性能瓶颈，并且能够通过水平扩展的方式，灵活提升数据库的存储能力。这也就是我们常说的分库分表。通过分库分表可以给数据库带来很大的好处：&lt;/p>
&lt;ul>
&lt;li>提高系统性能：分库分表可以将大型数据库分成多个小型数据库，每个小型数据库只需要处理部分数据，因此可以提高数据库的并发处理能力和查询性能。&lt;/li>
&lt;li>提高系统可用性：分库分表可以将数据复制到多个数据库中，以提高数据的可用性和可靠性。如果一个数据库崩溃了，其他数据库可以接管其工作，以保持系统的正常运行。&lt;/li>
&lt;li>提高系统可扩展性：分库分表可以使系统更容易扩展。当数据量增加时，只需要增加更多的数据库和表，而不是替换整个数据库，因此系统的可扩展性更高。&lt;/li>
&lt;li>提高系统灵活性：分库分表可以根据数据的使用情况，对不同的数据库和表进行不同的优化。例如，可以将经常使用的数据存储在性能更好的数据库中，或者将特定类型的数据存储在特定的表中，以提高系统的灵活性。&lt;/li>
&lt;li>降低系统成本：分库分表可以使系统更加高效，因此可以降低系统的运营成本。此外，分库分表可以使用更便宜的硬件和存储设备，因为每个小型数据库和表需要的资源更少。&lt;/li>
&lt;/ul>
&lt;h2>分库分表的挑战&lt;span class="hx-absolute -hx-mt-20" id="分库分表的挑战">&lt;/span>
&lt;a href="#%e5%88%86%e5%ba%93%e5%88%86%e8%a1%a8%e7%9a%84%e6%8c%91%e6%88%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>​
可能你会说，分库分表嘛， 也不是很难。一个库存不下，那就把数据拆分到多个库。一张表数据太多了，就把同一张表的数据拆分到多张。至于怎么做，也不难啊。要操作多个数据库，那么建立多个 JDBC 连接就行了。要写到多张表，修改下 SQL 语句就行了。&lt;/p>
&lt;p>​如果你也这么觉得，那么就大错特错了。分库分表也并不是字面意义上的将数据分到多个库或者多个表这么简单，他需要的是一系列的分布式解决方案。&lt;/p>
&lt;p>​因为数据的特殊性，造成数据库服务其实是几乎没有试错的成本的。在微服务阶段，从单机架构升级到微服务架构是很灵活的，中间很多细节步骤都可以随时做调整。比如对于微服务的接口限流功能，你并不需要一上来就用 Sentinel 这样复杂的流控工具。一开始不考虑性能，自己进行限流是很容易的事情。然后你可以慢慢尝试用 Guava 等框架提供的一些简单的流控工具进行零散的接口限流。直到整个应用的负载真正上来了之后，流控的要求更高更复杂了，再开始引入 Sentinel，进行统一流控，这都没有问题。这种试错的过程其实是你能够真正用好一项技术的基础。&lt;/p>
&lt;p>​但是对于数据库就不一样了。当应用中用来存储数据的数据库，从一个单机的数据库服务升级到多个数据库组成的集群服务时，需要考虑的，除了分布式的各种让人摸不着边际的复杂问题外，还要考虑到一个更重要的因素，数据。&lt;strong>数据的安全性甚至比数据库服务本身更重要&lt;/strong>！因此，如果你在一开始做分库分表时的方案不太成熟，对数据的规划不是很合理，那么这些问题大概率会随着数据永远沉淀下去，成为日后对分库分表方案进行调整时最大的拦路虎。&lt;/p>
&lt;p>​所以在决定进行分库分表之前，一定需要提前对于所需要面对的各种问题进行考量。如果你没有考虑清楚数据要如何存储、计算、使用，或者你对于分库分表的各种问题都还没有进行过思考，那么千万不要在真实项目中贸然的进行分库分表。&lt;/p>
&lt;p>分库分表，也称为 Sharding。其实我觉得，Sharding应该比中文的分库分表更为贴切，他表示将数据拆分到不同的数据片中。由于数据往往是一个应用的基础，随着数据从单体服务拆分到多个数据分片，应用层面也需要面临很多新的问题。比如：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>主键避重问题&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>在分库分表环境中，由于表中数据同时存在不同数据库中，某个分区数据库生成的 ID 就无法保证全局唯一。因此&lt;strong>需要单独设计全局主键，以避免跨库主键重复问题&lt;/strong>。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>数据备份问题&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>​随着数据库由单机变为集群，整体服务的稳定性也会随之降低。如何保证集群在各个服务不稳定的情况下，依然保持整体服务稳定就是数据库集群需要面对的重要问题。而对于数据库，还需要对数据安全性做更多的考量。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>数据迁移问题&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>​当数据库集群需要进行扩缩容时，集群中的数据也需要随着服务进行迁移。如何在不影响业务稳定性的情况下进行数据迁移也是数据库集群化后需要考虑的问题。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>分布式事务问题&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>​原本单机数据库有很好的事务机制能够帮我们保证数据一致性。但是&lt;strong>库分表后，由于数据分布在不同库甚至不同服务器，不可避免会带来分布式事务问题&lt;/strong>。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>SQL 路由问题&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>​数据被拆分到多个分散的数据库服务当中，每个数据库服务只能保存一部分的数据。这时，在&lt;strong>执行 SQL 语句检索数据时，如何快速定位到目标数据所在的数据库服务，并将 SQL 语句转到对应的数据库服务中执行&lt;/strong>，也是提升检索效率必须要考虑的问题。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>跨节点查询，归并问题&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>​跨节点进行查询时，每个分散的数据库中只能查出一部分的数据，这时要对整体结果进行归并时，就会变得非常复杂&lt;/strong>。比如常见的 &lt;code>limit&lt;/code>、&lt;code>order by&lt;/code> 等操作。&lt;/p>
&lt;p>​在实际项目中，遇到的问题还会更多。从这里可以看出，Sharding 其实是一个很复杂的问题，往往很难通过项目定制的方式整体解决。因此，大部分情况下，都是通过第三方的服务来解决 Sharding 的问题。比如像 TiDB、ClickHouse、Hadoop 这一类的 NewSQL 产品，大部分情况下是将数据问题整体封装到一起，从而提供 Sharding 方案。但是这些产品毕竟太重了。更灵活的方式还是使用传统数据库，通过软件层面来解决多个数据库之间的数据问题。这也诞生了很多的产品，比如早前的 MyCat，还有后面我们要学习的ShardingSphere 等。&lt;/p>
&lt;p>​另外，关于何时要开始考虑分库分表呢？当然是数据太大了，数据库服务器压力太大了就要进行分库分表。但是这其实是没有一个具体的标准的，需要根据项目情况进行灵活设计。业界目前唯一比较值得参考的详细标准，是阿里公开的开发手册中提到的，建议&lt;strong>预估三年内，单表数据超过 500W，或者单表数据大小超过 2G，就需要考虑分库分表&lt;/strong>。&lt;/p>
&lt;h2>ShardingSphere&lt;span class="hx-absolute -hx-mt-20" id="shardingsphere">&lt;/span>
&lt;a href="#shardingsphere" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>​ShardingSphere 是一款起源于当当网内部的应用框架。2015年在当当网内部诞生，最初就叫 ShardingJDBC。2016 年的时候，由其中一个主要的开发人员张亮，带入到京东数科，组件团队继续开发。在国内历经了当当网、电信翼支付、京东数科等多家大型互联网企业的考验，在 2017 年开始开源。并逐渐由原本只关注于关系型数据库增强工具的 ShardingJDBC 升级成为一整套以数据分片为基础的数据生态圈，更名为 ShardingSphere。到 2020 年 4 月，已经成为了 Apache 软件基金会的顶级项目。发展至今，已经成为了业界分库分表最成熟的产品。&lt;/p>
&lt;p>ShardingSphere 这个词可以分为两个部分，其中 &lt;strong>Sharding 就是我们之前介绍过的数据分片&lt;/strong>。从官网介绍上就能看到，他的核心功能就是可以将任意数据库组合，转换成为一个分布式的数据库，提供整体的数据库集群服务。只是给自己的定位并不是 Database，而是Database plus。其实这个意思是他自己并不做数据存储，而是对其他数据库产品进行整合。整个 ShardingSphere 其实就是围绕数据分片这个核心功能发展起来的。后面的 &lt;strong>Sphere 是生态的意思&lt;/strong>。这意味着 ShardingSphere 不是一个单独的框架或者产品，而是一个由多个框架以及产品构成的一个完整的技术生态。目前 ShardingSphere 中比较成型的产品主要&lt;strong>包含核心的 ShardingJDBC 以及 ShardingProxy 两个产品&lt;/strong>，以及一个用于数据迁移的子项目 ElasticJob，另外还包含围绕云原生设计的一系列未太成型的产品。&lt;/p>
&lt;p>​ShardingSphere 经过这么多年的发展，已经不仅仅只是用来做分库分表，而是形成了一个围绕分库分表核心的技术生态。他的核心功能已经包括了数据分片、分布式事务、读写分离、高可用、数据迁移、联邦查询、数据加密、影子库、DistSQL 庞大的技术体系。&lt;/p>
&lt;h3>客户端分库分表与服务端分库分表&lt;span class="hx-absolute -hx-mt-20" id="客户端分库分表与服务端分库分表">&lt;/span>
&lt;a href="#%e5%ae%a2%e6%88%b7%e7%ab%af%e5%88%86%e5%ba%93%e5%88%86%e8%a1%a8%e4%b8%8e%e6%9c%8d%e5%8a%a1%e7%ab%af%e5%88%86%e5%ba%93%e5%88%86%e8%a1%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>ShardingSphere 最为核心的产品有两个：&lt;strong>一个是 ShardingJDBC，这是一个进行客户端分库分表的框架。另一个是 ShardingProxy，这是一个进行服务端分库分表的产品&lt;/strong>。他们代表了两种不同的分库分表的实现思路。&lt;/p>
&lt;h4>ShardingJDBC 客户端分库分表&lt;span class="hx-absolute -hx-mt-20" id="shardingjdbc-客户端分库分表">&lt;/span>
&lt;a href="#shardingjdbc-%e5%ae%a2%e6%88%b7%e7%ab%af%e5%88%86%e5%ba%93%e5%88%86%e8%a1%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>ShardingSphere-JDBC 定位为轻量级 Java 框架，在 Java 的 JDBC 层提供的额外服务。它使用客户端直连数据库，以 jar 包形式提供服务，无需额外部署和依赖，可理解为增强版的 JDBC 驱动，完全兼容 JDBC 和各种 ORM 框架。&lt;/p>
&lt;ul>
&lt;li>适用于任何基于 JDBC 的 ORM 框架，如：JPA, Hibernate, Mybatis, Spring JDBC Template 或直接使用 JDBC；&lt;/li>
&lt;li>支持任何第三方的数据库连接池，如：DBCP, C3P0, BoneCP, HikariCP 等；&lt;/li>
&lt;li>支持任意实现 JDBC 规范的数据库，目前支持 MySQL，PostgreSQL，Oracle，SQLServer 以及任何可使用 JDBC 访问的数据库。&lt;/li>
&lt;/ul>
&lt;h4>ShardingProxy 服务端分库分表&lt;span class="hx-absolute -hx-mt-20" id="shardingproxy-服务端分库分表">&lt;/span>
&lt;a href="#shardingproxy-%e6%9c%8d%e5%8a%a1%e7%ab%af%e5%88%86%e5%ba%93%e5%88%86%e8%a1%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>ShardingSphere-Proxy 定位为透明化的数据库代理端，通过实现数据库二进制协议，对异构语言提供支持。 目前提供 MySQL 和 PostgreSQL 协议，透明化数据库操作，对 DBA 更加友好。&lt;/p>
&lt;ul>
&lt;li>向应用程序完全透明，可直接当做 MySQL/PostgreSQL 使用；&lt;/li>
&lt;li>兼容 MariaDB 等基于 MySQL 协议的数据库，以及 openGauss 等基于 PostgreSQL 协议的数据库；&lt;/li>
&lt;li>适用于任何兼容 MySQL/PostgreSQL 协议的的客户端，如：MySQL Command Client, MySQL Workbench, Navicat 等。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/sharding-proxy.png" alt="sharding-proxy" loading="lazy" />&lt;/p>
&lt;h4>ShardingSphere 混合部署架构&lt;span class="hx-absolute -hx-mt-20" id="shardingsphere-混合部署架构">&lt;/span>
&lt;a href="#shardingsphere-%e6%b7%b7%e5%90%88%e9%83%a8%e7%bd%b2%e6%9e%b6%e6%9e%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>ShardingJDBC 跟客户端在一起，使用更加灵活。而 ShardingProxy 是一个独立部署的服务，所以他的功能相对就比较固定。他们的整体区别如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>ShardingSphere-JDBC&lt;/th>
&lt;th>ShardingSphere-Proxy&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>数据库&lt;/td>
&lt;td>任意&lt;/td>
&lt;td>MySQL/PostgreSQL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>连接消耗数&lt;/td>
&lt;td>高&lt;/td>
&lt;td>低&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>异构语言&lt;/td>
&lt;td>仅 Java&lt;/td>
&lt;td>任意&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>性能&lt;/td>
&lt;td>损耗低&lt;/td>
&lt;td>损耗略高&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>无中心化&lt;/td>
&lt;td>是&lt;/td>
&lt;td>否&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>静态入口&lt;/td>
&lt;td>无&lt;/td>
&lt;td>有&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>在产品图中，Governance Center 也是其中重要的部分。他的作用有点类似于微服务架构中的配置中心，可以使用第三方服务统一管理分库分表的配置信息，当前建议使用的第三方服务是 Zookeeper，同时也支持 Nacos，Etcd 等其他第三方产品。&lt;/p>
&lt;p>​由于 ShardingJDBC 和 ShardingProxy 都支持通过 Governance Center，将配置信息交个第三方服务管理，因此，也就自然支持了通过 Governance Center 进行整合的混合部署架构。&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/sharding-mixed.png" alt="sharding-mixed" loading="lazy" />&lt;/p>
&lt;h3>ShardingSphere 的核心概念&lt;span class="hx-absolute -hx-mt-20" id="shardingsphere-的核心概念">&lt;/span>
&lt;a href="#shardingsphere-%e7%9a%84%e6%a0%b8%e5%bf%83%e6%a6%82%e5%bf%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>垂直分片与水平分片&lt;span class="hx-absolute -hx-mt-20" id="垂直分片与水平分片">&lt;/span>
&lt;a href="#%e5%9e%82%e7%9b%b4%e5%88%86%e7%89%87%e4%b8%8e%e6%b0%b4%e5%b9%b3%e5%88%86%e7%89%87" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>这是设计分库分表方案时经常会提到的概念。&lt;strong>其中垂直分片表示按照业务的纬度，将不同的表拆分到不同的库当中&lt;/strong>。这样可以减少每个数据库的数据量以及客户端的连接数，提高查询效率。而&lt;strong>水平分表表示按照数据的纬度，将原本存在同一张表中的数据，拆分到多张子表当中。每个子表只存储一份的数据&lt;/strong>。这样可以将数据量分散到多张表当中，减少每一张表的数据量，提升查询效率。&lt;/p>
&lt;p>&lt;img src="https://raw.gitcode.com/shipengqi/illustrations/files/main/db/sharding-split.png" alt="sharding-split" loading="lazy" />&lt;/p>
&lt;h4>ShardingSphere 实现分库分表的核心概念&lt;span class="hx-absolute -hx-mt-20" id="shardingsphere-实现分库分表的核心概念">&lt;/span>
&lt;a href="#shardingsphere-%e5%ae%9e%e7%8e%b0%e5%88%86%e5%ba%93%e5%88%86%e8%a1%a8%e7%9a%84%e6%a0%b8%e5%bf%83%e6%a6%82%e5%bf%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>虚拟库：ShardingSphere 的核心就是提供一个具备分库分表功能的虚拟库，他是一个 &lt;code>ShardingSphereDatasource&lt;/code> 实例。应用程序只需要像操作单数据源一样访问这个 &lt;code>ShardingSphereDatasource&lt;/code> 即可。&lt;/li>
&lt;li>真实库：实际保存数据的数据库。这些数据库都被包含在 &lt;code>ShardingSphereDatasource&lt;/code> 实例当中，由 ShardingSphere 决定未来需要使用哪个真实库。&lt;/li>
&lt;li>逻辑表：应用程序直接操作的逻辑表。&lt;/li>
&lt;li>真实表：实际保存数据的表。这些真实表与逻辑表表名不需要一致，但是需要有相同的表结构，可以分布在不同的真实库中。应用可以维护一个逻辑表与真实表的对应关系，所有的真实表默认也会映射成为 ShardingSphere 的虚拟表。&lt;/li>
&lt;li>分布式主键生成算法：&lt;strong>给逻辑表生成唯一主键&lt;/strong>。由于逻辑表的数据是分布在多个真实表当中的，所有，单表的索引就无法保证逻辑表的 ID 唯一性。ShardingSphere 集成了几种常见的基于单机生成的分布式主键生成器。比如 SNOWFLAKE，COSID_SNOWFLAKE 雪花算法可以生成单调递增的 long 类型的数字主键，还有 UUID，NANOID 可以生成字符串类型的主键。当然，ShardingSphere 也支持应用自行扩展主键生成算法。比如基于 Redis，Zookeeper 等第三方服务，自行生成主键。&lt;/li>
&lt;li>分片策略：表示逻辑表要如何分配到真实库和真实表当中，分为分库策略和分表策略两个部分。分片策略由分片键和分片算法组成。分片键是进行数据水平拆分的关键字段。如果没有分片键，ShardingSphere 将只能进行全路由，SQL 执行的性能会非常差。分片算法则表示根据分片键如何寻找对应的真实库和真实表。简单的分片策略可以使用 Groovy 表达式直接配置，当然，ShardingSphere 也支持自行扩展更为复杂的分片算法。&lt;/li>
&lt;/ul>
&lt;h3>ShardingJDBC 客户端分库分表机制&lt;span class="hx-absolute -hx-mt-20" id="shardingjdbc-客户端分库分表机制">&lt;/span>
&lt;a href="#shardingjdbc-%e5%ae%a2%e6%88%b7%e7%ab%af%e5%88%86%e5%ba%93%e5%88%86%e8%a1%a8%e6%9c%ba%e5%88%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>ShardingProxy 服务端分库分表机制&lt;span class="hx-absolute -hx-mt-20" id="shardingproxy-服务端分库分表机制">&lt;/span>
&lt;a href="#shardingproxy-%e6%9c%8d%e5%8a%a1%e7%ab%af%e5%88%86%e5%ba%93%e5%88%86%e8%a1%a8%e6%9c%ba%e5%88%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>​ShardingSphere-Proxy，早前版本就叫做 ShardingProxy。定位为一个透明化的数据库代理，目前提供 MySQL 和 PostgreSQL 协议，透明化数据库操作。简单理解就是，他会部署成一个 MySQL 或者 PostgreSQL 的数据库服务，&lt;strong>应用程序只需要像操作单个数据库一样去访问 ShardingSphere-proxy，由 ShardingProxy 去完成分库分表功能&lt;/strong>。&lt;/p>
&lt;h3>ShardinSphere 中的分布式事务机制&lt;span class="hx-absolute -hx-mt-20" id="shardinsphere-中的分布式事务机制">&lt;/span>
&lt;a href="#shardinsphere-%e4%b8%ad%e7%9a%84%e5%88%86%e5%b8%83%e5%bc%8f%e4%ba%8b%e5%8a%a1%e6%9c%ba%e5%88%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>由于 ShardingSphere 是需要操作分布式的数据库集群，所以数据库内部的本地事务机制是无法保证 ShardingProxy 中的事务安全的，这就需要引入分布式事务管理机制，保证 ShardingProxy 中的 SQL 语句执行的原子性。也就是说，在ShardingProxy 中打开分布式事务机制后，你就不需要考虑 SQL 语句执行时的分布式事务问题了。&lt;/p>
&lt;h4>XA 事务&lt;span class="hx-absolute -hx-mt-20" id="xa-事务">&lt;/span>
&lt;a href="#xa-%e4%ba%8b%e5%8a%a1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>XA 是由 X/Open Group 组织定义的，处理分布式事务的标准。主流的关系型数据库产品都实现了 XA 协议。例如，MySQL 从 5.0.3 版本开始，就已经可以直接支持 XA 事务了。但是要注意，只有 InnoDB 引擎才提供支持：&lt;/p></description></item></channel></rss>